<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>std::common_comparison_category&lt;decltype  (189,475,313 samples, 2.25%)</title><rect x="344.2" y="453" width="26.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="347.17" y="463.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,608,309 samples, 0.02%)</title><rect x="706.9" y="453" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="709.93" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,335,087 samples, 0.02%)</title><rect x="1161.5" y="421" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1164.49" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (24,400,205 samples, 0.29%)</title><rect x="1033.6" y="85" width="3.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1036.63" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (1,863,796 samples, 0.02%)</title><rect x="878.0" y="517" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="881.03" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (37,440,233 samples, 0.45%)</title><rect x="383.6" y="469" width="5.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="386.64" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,448,134 samples, 0.06%)</title><rect x="1031.7" y="101" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1034.67" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (931,613 samples, 0.01%)</title><rect x="1134.9" y="229" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1137.94" y="239.5" ></text>
</g>
<g >
<title>cfree (3,098,169 samples, 0.04%)</title><rect x="1127.7" y="213" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1130.72" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,244,485 samples, 0.11%)</title><rect x="1188.7" y="549" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1191.69" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (947,868 samples, 0.01%)</title><rect x="1162.6" y="213" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.56" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,759,028 samples, 0.02%)</title><rect x="1162.6" y="325" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1165.56" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,634,341 samples, 0.02%)</title><rect x="1037.6" y="293" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1040.65" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (13,940,104 samples, 0.17%)</title><rect x="689.4" y="485" width="1.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="692.37" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (12,364,284 samples, 0.15%)</title><rect x="549.2" y="517" width="1.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="552.22" y="527.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (52,585,319 samples, 0.63%)</title><rect x="869.3" y="501" width="7.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="872.28" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,485,361 samples, 0.02%)</title><rect x="431.6" y="437" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="434.59" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,189,274 samples, 0.01%)</title><rect x="700.0" y="501" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="702.99" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (4,127,753 samples, 0.05%)</title><rect x="551.3" y="517" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="554.35" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,751,755,075 samples, 20.84%)</title><rect x="918.1" y="517" width="245.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="921.12" y="527.5" >[libc.so.6]</text>
</g>
<g >
<title>[libc.so.6] (462,499,099 samples, 5.50%)</title><rect x="225.4" y="533" width="64.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="228.43" y="543.5" >[libc.s..</text>
</g>
<g >
<title>operator new (3,813,087 samples, 0.05%)</title><rect x="1142.3" y="261" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1145.33" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,759,028 samples, 0.02%)</title><rect x="1162.6" y="245" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1165.56" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (5,757,532 samples, 0.07%)</title><rect x="1009.5" y="325" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1012.46" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,838,858 samples, 0.07%)</title><rect x="1156.1" y="261" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.14" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (361,942,921 samples, 4.31%)</title><rect x="324.7" y="501" width="50.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="327.67" y="511.5" >std::..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (23,280,930 samples, 0.28%)</title><rect x="1144.9" y="277" width="3.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1147.93" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (790,753 samples, 0.01%)</title><rect x="1123.3" y="165" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1126.27" y="175.5" ></text>
</g>
<g >
<title>operator delete (1,893,776 samples, 0.02%)</title><rect x="948.2" y="373" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="951.20" y="383.5" ></text>
</g>
<g >
<title>cfree (1,474,670 samples, 0.02%)</title><rect x="1033.9" y="69" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1036.91" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,693,402 samples, 0.02%)</title><rect x="866.3" y="517" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="869.26" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (910,674 samples, 0.01%)</title><rect x="1066.0" y="149" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1069.05" y="159.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,720,660 samples, 0.02%)</title><rect x="381.3" y="421" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="384.27" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,192,031 samples, 0.01%)</title><rect x="84.3" y="437" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="87.27" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,877,805 samples, 0.02%)</title><rect x="181.3" y="421" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="184.34" y="431.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (822,209 samples, 0.01%)</title><rect x="563.5" y="501" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="566.45" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (877,664 samples, 0.01%)</title><rect x="1168.1" y="549" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.14" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (38,571,361 samples, 0.46%)</title><rect x="71.2" y="469" width="5.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="74.19" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,619,124 samples, 0.02%)</title><rect x="1044.0" y="165" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1047.00" y="175.5" ></text>
</g>
<g >
<title>operator delete (1,331,704 samples, 0.02%)</title><rect x="954.8" y="389" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="957.80" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (12,571,714 samples, 0.15%)</title><rect x="740.6" y="469" width="1.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="743.61" y="479.5" ></text>
</g>
<g >
<title>choose_next_point (135,866,134 samples, 1.62%)</title><rect x="1069.5" y="357" width="19.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1072.53" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,718,304 samples, 0.02%)</title><rect x="1160.6" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.58" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (7,617,948 samples, 0.09%)</title><rect x="433.3" y="469" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="436.27" y="479.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (1,097,448 samples, 0.01%)</title><rect x="1168.5" y="501" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1171.54" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (11,795,146 samples, 0.14%)</title><rect x="1141.5" y="277" width="1.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1144.52" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,074,351 samples, 0.04%)</title><rect x="1083.8" y="261" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1086.80" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,184,471 samples, 0.05%)</title><rect x="1057.1" y="53" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1060.13" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (160,333,153 samples, 1.91%)</title><rect x="1106.6" y="341" width="22.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1109.58" y="351.5" >s..</text>
</g>
<g >
<title>cfree (5,104,995 samples, 0.06%)</title><rect x="1123.4" y="213" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1126.39" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (23,280,930 samples, 0.28%)</title><rect x="1144.9" y="229" width="3.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1147.93" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,080,690 samples, 0.01%)</title><rect x="586.8" y="373" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="589.76" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (17,774,410 samples, 0.21%)</title><rect x="1055.3" y="165" width="2.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1058.34" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (21,579,046 samples, 0.26%)</title><rect x="1148.6" y="245" width="3.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1151.63" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,080,224 samples, 0.06%)</title><rect x="390.5" y="501" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="393.48" y="511.5" ></text>
</g>
<g >
<title>get_inbetween_points (812,094 samples, 0.01%)</title><rect x="1020.9" y="197" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1023.94" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (806,724 samples, 0.01%)</title><rect x="1073.4" y="309" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1076.40" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (13,895,447 samples, 0.17%)</title><rect x="512.9" y="517" width="2.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="515.93" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,065,526 samples, 0.06%)</title><rect x="693.3" y="453" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="696.32" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (7,671,739 samples, 0.09%)</title><rect x="843.3" y="485" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="846.33" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (2,684,166 samples, 0.03%)</title><rect x="388.9" y="485" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="391.89" y="495.5" ></text>
</g>
<g >
<title>decltype  (1,741,471 samples, 0.02%)</title><rect x="742.8" y="453" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="745.83" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,964,077 samples, 0.02%)</title><rect x="1159.4" y="229" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.41" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (130,505,726 samples, 1.55%)</title><rect x="671.0" y="485" width="18.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="674.05" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (13,023,079 samples, 0.15%)</title><rect x="387.1" y="453" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="390.06" y="463.5" ></text>
</g>
<g >
<title>malloc (4,148,064 samples, 0.05%)</title><rect x="987.8" y="245" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="990.77" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (150,658,308 samples, 1.79%)</title><rect x="1016.0" y="261" width="21.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1019.01" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,308,304 samples, 0.02%)</title><rect x="1101.8" y="213" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1104.83" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (17,709,398 samples, 0.21%)</title><rect x="995.6" y="213" width="2.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="998.62" y="223.5" ></text>
</g>
<g >
<title>choose_next_point (20,585,554 samples, 0.24%)</title><rect x="1001.6" y="325" width="2.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1004.59" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,073,966 samples, 0.01%)</title><rect x="1028.1" y="133" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1031.14" y="143.5" ></text>
</g>
<g >
<title>cfree (130,006,296 samples, 1.55%)</title><rect x="290.3" y="533" width="18.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="293.34" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (18,856,039 samples, 0.22%)</title><rect x="1085.0" y="325" width="2.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1087.97" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,344,425 samples, 0.02%)</title><rect x="1054.0" y="69" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1056.96" y="79.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,032,193 samples, 0.04%)</title><rect x="84.9" y="453" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="87.93" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (822,146 samples, 0.01%)</title><rect x="1053.8" y="85" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1056.77" y="95.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (11,637,233 samples, 0.14%)</title><rect x="743.1" y="501" width="1.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="746.08" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,339,366 samples, 0.04%)</title><rect x="1147.7" y="213" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1150.73" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (11,637,233 samples, 0.14%)</title><rect x="743.1" y="485" width="1.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="746.08" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,455,879 samples, 0.02%)</title><rect x="973.8" y="277" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="976.84" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (13,940,104 samples, 0.17%)</title><rect x="689.4" y="453" width="1.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="692.37" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (16,690,868 samples, 0.20%)</title><rect x="187.9" y="501" width="2.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="190.93" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (148,927,103 samples, 1.77%)</title><rect x="1039.4" y="245" width="20.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1042.38" y="255.5" ></text>
</g>
<g >
<title>cfree (2,016,221 samples, 0.02%)</title><rect x="1146.1" y="197" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1149.08" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,571,955 samples, 0.03%)</title><rect x="740.3" y="469" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="743.25" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (14,730,118 samples, 0.18%)</title><rect x="1085.1" y="309" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1088.13" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,184,471 samples, 0.05%)</title><rect x="1057.1" y="85" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1060.13" y="95.5" ></text>
</g>
<g >
<title>operator new (30,990,024 samples, 0.37%)</title><rect x="1062.9" y="165" width="4.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1065.90" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,324,402 samples, 0.04%)</title><rect x="952.0" y="245" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="954.98" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (77,628,741 samples, 0.92%)</title><rect x="551.9" y="517" width="10.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="554.93" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,752,242 samples, 0.04%)</title><rect x="1083.8" y="277" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1086.80" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,278,544 samples, 0.03%)</title><rect x="1162.2" y="261" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1165.20" y="271.5" ></text>
</g>
<g >
<title>choose_next_point (11,803,408 samples, 0.14%)</title><rect x="1012.2" y="309" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1015.21" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (64,064,453 samples, 0.76%)</title><rect x="1143.3" y="389" width="9.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1146.32" y="399.5" ></text>
</g>
<g >
<title>malloc (2,955,090 samples, 0.04%)</title><rect x="977.0" y="357" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="980.04" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,108,537 samples, 0.05%)</title><rect x="183.9" y="517" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="186.90" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,521,947 samples, 0.05%)</title><rect x="1084.3" y="293" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1087.33" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,834,491 samples, 0.02%)</title><rect x="1154.7" y="357" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1157.72" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,257,822 samples, 0.07%)</title><rect x="1119.6" y="229" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1122.58" y="239.5" ></text>
</g>
<g >
<title>operator delete (38,829,959 samples, 0.46%)</title><rect x="1171.7" y="549" width="5.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1174.73" y="559.5" ></text>
</g>
<g >
<title>malloc (813,593 samples, 0.01%)</title><rect x="1101.4" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1104.40" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,447,914 samples, 0.02%)</title><rect x="1126.3" y="229" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1129.30" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,709,157 samples, 0.06%)</title><rect x="180.0" y="469" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="183.00" y="479.5" ></text>
</g>
<g >
<title>operator new (1,207,572 samples, 0.01%)</title><rect x="1126.1" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.11" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,833,448 samples, 0.02%)</title><rect x="1163.0" y="357" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1166.02" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (924,295 samples, 0.01%)</title><rect x="947.8" y="245" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="950.78" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (65,704,917 samples, 0.78%)</title><rect x="175.3" y="533" width="9.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="178.26" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,033,906 samples, 0.01%)</title><rect x="889.7" y="517" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="892.69" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (39,563,836 samples, 0.47%)</title><rect x="582.4" y="453" width="5.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="585.35" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (11,962,472 samples, 0.14%)</title><rect x="1155.9" y="357" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1158.94" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,821,803 samples, 0.10%)</title><rect x="529.8" y="501" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="532.78" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (8,925,340 samples, 0.11%)</title><rect x="700.4" y="517" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="703.36" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,674,098 samples, 0.07%)</title><rect x="1129.1" y="341" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1132.08" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (16,690,868 samples, 0.20%)</title><rect x="187.9" y="485" width="2.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="190.93" y="495.5" ></text>
</g>
<g >
<title>gen_all_points (801,670 samples, 0.01%)</title><rect x="1161.2" y="421" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1164.16" y="431.5" ></text>
</g>
<g >
<title>decltype  (7,552,085 samples, 0.09%)</title><rect x="413.1" y="389" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="416.15" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,717,446 samples, 0.02%)</title><rect x="1161.8" y="341" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1164.83" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (9,386,927 samples, 0.11%)</title><rect x="380.2" y="453" width="1.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="383.19" y="463.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (811,053 samples, 0.01%)</title><rect x="1127.4" y="165" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1130.44" y="175.5" ></text>
</g>
<g >
<title>operator delete (924,322 samples, 0.01%)</title><rect x="1021.3" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1024.34" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,608,309 samples, 0.02%)</title><rect x="706.9" y="437" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="709.93" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (1,751,755,075 samples, 20.84%)</title><rect x="918.1" y="533" width="245.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="921.12" y="543.5" >__libc_start_main</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,236,423 samples, 0.06%)</title><rect x="851.1" y="421" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="854.12" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (913,033 samples, 0.01%)</title><rect x="1067.4" y="117" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1070.42" y="127.5" ></text>
</g>
<g >
<title>malloc (30,246,440 samples, 0.36%)</title><rect x="1050.1" y="165" width="4.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1053.13" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (937,963 samples, 0.01%)</title><rect x="586.4" y="357" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="589.44" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (7,377,078 samples, 0.09%)</title><rect x="1004.8" y="229" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1007.84" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (17,581,556 samples, 0.21%)</title><rect x="411.7" y="469" width="2.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="414.74" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,505,601 samples, 0.03%)</title><rect x="1087.9" y="325" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1090.87" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (10,732,442 samples, 0.13%)</title><rect x="406.7" y="453" width="1.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="409.73" y="463.5" ></text>
</g>
<g >
<title>gen_all_points (20,736,715 samples, 0.25%)</title><rect x="82.4" y="533" width="3.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="85.44" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,864,887 samples, 0.02%)</title><rect x="1087.6" y="341" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1090.61" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,278,544 samples, 0.03%)</title><rect x="1162.2" y="341" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1165.20" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (90,073,284 samples, 1.07%)</title><rect x="985.5" y="277" width="12.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="988.46" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (811,053 samples, 0.01%)</title><rect x="1127.4" y="149" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1130.44" y="159.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (4,928,979 samples, 0.06%)</title><rect x="888.2" y="517" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="891.20" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,834,491 samples, 0.02%)</title><rect x="1154.7" y="341" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1157.72" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (4,944,704 samples, 0.06%)</title><rect x="696.4" y="453" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="699.39" y="463.5" ></text>
</g>
<g >
<title>cfree (1,294,524 samples, 0.02%)</title><rect x="1058.4" y="53" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1061.43" y="63.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (17,189,249 samples, 0.20%)</title><rect x="995.6" y="165" width="2.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="998.62" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (11,795,146 samples, 0.14%)</title><rect x="1141.5" y="309" width="1.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1144.52" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (817,668 samples, 0.01%)</title><rect x="1101.7" y="245" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1104.68" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,319,343 samples, 0.06%)</title><rect x="587.0" y="357" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="589.99" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (76,663,021 samples, 0.91%)</title><rect x="927.4" y="373" width="10.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="930.43" y="383.5" ></text>
</g>
<g >
<title>operator delete (800,569 samples, 0.01%)</title><rect x="1142.6" y="245" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1145.63" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (25,057,488 samples, 0.30%)</title><rect x="691.3" y="501" width="3.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="694.32" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,896,825 samples, 0.02%)</title><rect x="1105.0" y="261" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1108.03" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (2,129,105 samples, 0.03%)</title><rect x="93.0" y="501" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="95.99" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (814,409 samples, 0.01%)</title><rect x="586.3" y="357" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="589.33" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (5,375,660 samples, 0.06%)</title><rect x="1160.4" y="405" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1163.41" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,338,575 samples, 0.02%)</title><rect x="1088.4" y="309" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1091.41" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (3,978,620 samples, 0.05%)</title><rect x="707.6" y="453" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="710.57" y="463.5" ></text>
</g>
<g >
<title>operator new (2,125,358 samples, 0.03%)</title><rect x="1151.8" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.82" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,913,728 samples, 0.03%)</title><rect x="1127.0" y="133" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1130.03" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,402,836 samples, 0.03%)</title><rect x="182.5" y="501" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="185.48" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,505,322 samples, 0.03%)</title><rect x="1115.3" y="181" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1118.34" y="191.5" ></text>
</g>
<g >
<title>operator new (933,803 samples, 0.01%)</title><rect x="1162.4" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1165.37" y="239.5" ></text>
</g>
<g >
<title>operator delete (2,524,124 samples, 0.03%)</title><rect x="1117.9" y="245" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1120.92" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (48,901,620 samples, 0.58%)</title><rect x="1060.7" y="229" width="6.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1063.68" y="239.5" ></text>
</g>
<g >
<title>choose_next_point (913,250 samples, 0.01%)</title><rect x="1162.9" y="389" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1165.89" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (10,308,090 samples, 0.12%)</title><rect x="1004.8" y="309" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1007.78" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,439,898 samples, 0.04%)</title><rect x="1151.7" y="277" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1154.66" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,081,910 samples, 0.01%)</title><rect x="991.4" y="181" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="994.43" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,323,790 samples, 0.05%)</title><rect x="1127.7" y="277" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1130.70" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (790,753 samples, 0.01%)</title><rect x="1123.3" y="181" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1126.27" y="191.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,553,980 samples, 0.03%)</title><rect x="1188.3" y="533" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.29" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,236,423 samples, 0.06%)</title><rect x="851.1" y="437" width="0.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="854.12" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,439,898 samples, 0.04%)</title><rect x="1151.7" y="293" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1154.66" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (2,012,927 samples, 0.02%)</title><rect x="432.9" y="469" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="435.91" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (11,689,133 samples, 0.14%)</title><rect x="1138.3" y="373" width="1.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1141.28" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,363,927 samples, 0.02%)</title><rect x="1163.3" y="341" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1166.27" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,228,531 samples, 0.05%)</title><rect x="1159.4" y="261" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1162.37" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (144,825,765 samples, 1.72%)</title><rect x="568.7" y="533" width="20.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="571.68" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (877,664 samples, 0.01%)</title><rect x="1168.1" y="533" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.14" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (149,326,341 samples, 1.78%)</title><rect x="1039.4" y="261" width="20.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1042.38" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,329,239 samples, 0.10%)</title><rect x="1056.7" y="149" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1059.66" y="159.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (793,010 samples, 0.01%)</title><rect x="308.2" y="421" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="311.17" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (819,301 samples, 0.01%)</title><rect x="1008.5" y="293" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1011.52" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (19,629,331 samples, 0.23%)</title><rect x="392.8" y="517" width="2.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="395.77" y="527.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,739,636 samples, 0.07%)</title><rect x="694.0" y="453" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="697.03" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (17,189,249 samples, 0.20%)</title><rect x="995.6" y="133" width="2.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="998.62" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (806,487 samples, 0.01%)</title><rect x="1028.1" y="101" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1031.14" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,864,887 samples, 0.02%)</title><rect x="1087.6" y="325" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1090.61" y="335.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (1,327,439 samples, 0.02%)</title><rect x="944.6" y="373" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="947.57" y="383.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (828,637 samples, 0.01%)</title><rect x="994.4" y="165" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="997.36" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (7,671,739 samples, 0.09%)</title><rect x="843.3" y="469" width="1.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="846.33" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,950,367 samples, 0.06%)</title><rect x="408.5" y="437" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="411.52" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,787,699 samples, 0.06%)</title><rect x="1153.7" y="309" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1156.67" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (931,613 samples, 0.01%)</title><rect x="1134.9" y="181" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1137.94" y="191.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,083,458 samples, 0.01%)</title><rect x="926.3" y="325" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="929.26" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (34,636,655 samples, 0.41%)</title><rect x="1076.2" y="277" width="4.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1079.16" y="287.5" ></text>
</g>
<g >
<title>operator delete (1,895,427 samples, 0.02%)</title><rect x="979.1" y="325" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="982.09" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,050,632 samples, 0.01%)</title><rect x="1029.0" y="181" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1032.05" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,151,686 samples, 0.03%)</title><rect x="1066.9" y="53" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1069.87" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,344,380 samples, 0.02%)</title><rect x="1015.2" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1018.24" y="319.5" ></text>
</g>
<g >
<title>malloc (3,773,092 samples, 0.04%)</title><rect x="1038.1" y="293" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1041.14" y="303.5" ></text>
</g>
<g >
<title>cfree (2,555,415 samples, 0.03%)</title><rect x="1149.3" y="197" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1152.32" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,639,344 samples, 0.06%)</title><rect x="1137.1" y="309" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1140.09" y="319.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (791,811 samples, 0.01%)</title><rect x="953.8" y="325" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="956.77" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (36,221,371 samples, 0.43%)</title><rect x="911.4" y="469" width="5.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="914.45" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,383,803 samples, 0.03%)</title><rect x="944.2" y="357" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="947.19" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (13,229,754 samples, 0.16%)</title><rect x="1058.4" y="117" width="1.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1061.41" y="127.5" ></text>
</g>
<g >
<title>malloc (288,491,150 samples, 3.43%)</title><rect x="745.0" y="533" width="40.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="748.03" y="543.5" >mal..</text>
</g>
<g >
<title>operator delete (70,657,362 samples, 0.84%)</title><rect x="458.5" y="533" width="9.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="461.48" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (100,545,952 samples, 1.20%)</title><rect x="1092.5" y="325" width="14.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1095.46" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,850,258 samples, 0.02%)</title><rect x="1090.9" y="325" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1093.91" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,983,848 samples, 0.02%)</title><rect x="1069.2" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1072.21" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (30,504,744 samples, 0.36%)</title><rect x="1130.8" y="357" width="4.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1133.79" y="367.5" ></text>
</g>
<g >
<title>std::abs (1,193,180 samples, 0.01%)</title><rect x="430.3" y="501" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="433.34" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,966,999 samples, 0.04%)</title><rect x="1124.3" y="165" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1127.27" y="175.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,221,038 samples, 0.09%)</title><rect x="925.3" y="325" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="928.25" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,070,190 samples, 0.01%)</title><rect x="1113.3" y="213" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1116.32" y="223.5" ></text>
</g>
<g >
<title>cfree (2,103,872 samples, 0.03%)</title><rect x="982.1" y="341" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="985.12" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (7,834,667 samples, 0.09%)</title><rect x="1135.1" y="373" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1138.11" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,074,357 samples, 0.13%)</title><rect x="1118.9" y="245" width="1.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1121.91" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,666,267 samples, 0.09%)</title><rect x="380.2" y="405" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="383.19" y="415.5" ></text>
</g>
<g >
<title>malloc (1,218,398 samples, 0.01%)</title><rect x="1151.9" y="165" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1154.92" y="175.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (34,636,655 samples, 0.41%)</title><rect x="1076.2" y="293" width="4.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1079.16" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (832,858 samples, 0.01%)</title><rect x="1092.3" y="341" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1095.35" y="351.5" ></text>
</g>
<g >
<title>malloc (1,759,513 samples, 0.02%)</title><rect x="1143.9" y="341" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1146.92" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (24,536,266 samples, 0.29%)</title><rect x="1033.6" y="165" width="3.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1036.63" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (21,579,046 samples, 0.26%)</title><rect x="1148.6" y="293" width="3.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1151.63" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (930,261 samples, 0.01%)</title><rect x="1128.6" y="325" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1131.57" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (23,932,272 samples, 0.28%)</title><rect x="994.7" y="245" width="3.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="997.74" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,538,501 samples, 0.03%)</title><rect x="1147.3" y="197" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1150.26" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (8,981,846 samples, 0.11%)</title><rect x="525.6" y="469" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="528.62" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,564,279 samples, 0.14%)</title><rect x="985.9" y="245" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="988.91" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,207,259 samples, 0.01%)</title><rect x="952.3" y="229" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="955.27" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,558,470 samples, 0.11%)</title><rect x="190.3" y="533" width="1.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="193.27" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (21,579,046 samples, 0.26%)</title><rect x="1148.6" y="229" width="3.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1151.63" y="239.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,214,383 samples, 0.01%)</title><rect x="1120.3" y="181" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1123.29" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,439,898 samples, 0.04%)</title><rect x="1151.7" y="309" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1154.66" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,966,999 samples, 0.04%)</title><rect x="1124.3" y="213" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1127.27" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (22,900,928 samples, 0.27%)</title><rect x="934.8" y="325" width="3.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="937.85" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,709,157 samples, 0.06%)</title><rect x="180.0" y="485" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="183.00" y="495.5" ></text>
</g>
<g >
<title>choose_next_point (1,605,131 samples, 0.02%)</title><rect x="1143.6" y="341" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1146.60" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,709,157 samples, 0.06%)</title><rect x="180.0" y="437" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="183.00" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,229,754 samples, 0.16%)</title><rect x="1058.4" y="69" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1061.41" y="79.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,835,783 samples, 0.12%)</title><rect x="936.0" y="245" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="939.00" y="255.5" ></text>
</g>
<g >
<title>[unknown] (2,314,225,547 samples, 27.53%)</title><rect x="593.3" y="549" width="324.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.30" y="559.5" >[unknown]</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,444,016 samples, 0.03%)</title><rect x="78.4" y="469" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="81.42" y="479.5" ></text>
</g>
<g >
<title>malloc (14,712,264 samples, 0.17%)</title><rect x="989.5" y="229" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="992.52" y="239.5" ></text>
</g>
<g >
<title>cfree (2,425,722 samples, 0.03%)</title><rect x="1020.6" y="197" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1023.57" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,346,828 samples, 0.11%)</title><rect x="854.4" y="501" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="857.43" y="511.5" ></text>
</g>
<g >
<title>cfree (791,762 samples, 0.01%)</title><rect x="937.4" y="245" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="940.40" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,420,119 samples, 0.03%)</title><rect x="432.3" y="453" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="435.33" y="463.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (7,552,085 samples, 0.09%)</title><rect x="413.1" y="421" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="416.15" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (793,205 samples, 0.01%)</title><rect x="1092.4" y="309" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1095.35" y="319.5" ></text>
</g>
<g >
<title>malloc (5,342,324 samples, 0.06%)</title><rect x="1146.4" y="197" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1149.40" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,074,351 samples, 0.04%)</title><rect x="1083.8" y="213" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1086.80" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,601,543 samples, 0.05%)</title><rect x="1141.6" y="261" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1144.59" y="271.5" ></text>
</g>
<g >
<title>decltype  (2,949,407 samples, 0.04%)</title><rect x="709.0" y="389" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="712.00" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (39,563,836 samples, 0.47%)</title><rect x="582.4" y="437" width="5.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="585.35" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,463,878 samples, 0.02%)</title><rect x="1154.7" y="309" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1157.73" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,539,979 samples, 0.04%)</title><rect x="1067.7" y="213" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1070.66" y="223.5" ></text>
</g>
<g >
<title>operator new (2,018,730 samples, 0.02%)</title><rect x="1054.8" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1057.75" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (437,993,629 samples, 5.21%)</title><rect x="1069.0" y="373" width="61.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1071.97" y="383.5" >std::_..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (59,007,630 samples, 0.70%)</title><rect x="68.3" y="485" width="8.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="71.33" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (57,797,393 samples, 0.69%)</title><rect x="1120.5" y="325" width="8.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1123.46" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (19,192,279 samples, 0.23%)</title><rect x="430.6" y="501" width="2.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="433.57" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (492,382,379 samples, 5.86%)</title><rect x="999.0" y="341" width="69.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1002.04" y="351.5" >std::_R..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (28,087,738 samples, 0.33%)</title><rect x="1148.2" y="325" width="3.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1151.20" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (1,888,118 samples, 0.02%)</title><rect x="391.9" y="469" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="394.89" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,759,028 samples, 0.02%)</title><rect x="1162.6" y="309" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1165.56" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,605,709 samples, 0.03%)</title><rect x="1099.4" y="213" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1102.39" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,762,466 samples, 0.07%)</title><rect x="1181.8" y="549" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1184.83" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,832,106 samples, 0.03%)</title><rect x="1129.9" y="341" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1132.88" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (794,775 samples, 0.01%)</title><rect x="1147.5" y="149" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1150.51" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (3,787,575 samples, 0.05%)</title><rect x="739.7" y="469" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="742.72" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (21,579,046 samples, 0.26%)</title><rect x="1148.6" y="213" width="3.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1151.63" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,323,790 samples, 0.05%)</title><rect x="1127.7" y="293" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.70" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,383,803 samples, 0.03%)</title><rect x="944.2" y="341" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="947.19" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (141,951,403 samples, 1.69%)</title><rect x="414.6" y="533" width="19.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="417.57" y="543.5" ></text>
</g>
<g >
<title>malloc (170,828,463 samples, 2.03%)</title><rect x="434.5" y="533" width="24.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="437.51" y="543.5" >m..</text>
</g>
<g >
<title>malloc (3,974,981 samples, 0.05%)</title><rect x="951.2" y="245" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="954.23" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (189,073,131 samples, 2.25%)</title><rect x="10.0" y="533" width="26.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.01" y="543.5" >[..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (813,388 samples, 0.01%)</title><rect x="588.9" y="437" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="591.89" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,066,334 samples, 0.06%)</title><rect x="1010.8" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1013.84" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (39,763,543 samples, 0.47%)</title><rect x="737.5" y="501" width="5.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="740.50" y="511.5" ></text>
</g>
<g >
<title>operator new (233,593,238 samples, 2.78%)</title><rect x="141.1" y="533" width="32.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="144.12" y="543.5" >op..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,086,852 samples, 0.01%)</title><rect x="1134.1" y="261" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1137.12" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (1,307,923 samples, 0.02%)</title><rect x="81.4" y="517" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="84.39" y="527.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (935,561 samples, 0.01%)</title><rect x="1139.9" y="341" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1142.92" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,209,414 samples, 0.01%)</title><rect x="1167.9" y="501" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1170.89" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,423,114 samples, 0.03%)</title><rect x="1163.3" y="373" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1166.27" y="383.5" ></text>
</g>
<g >
<title>operator new (3,490,156 samples, 0.04%)</title><rect x="1123.6" y="197" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1126.58" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (437,993,629 samples, 5.21%)</title><rect x="1069.0" y="389" width="61.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1071.97" y="399.5" >std::s..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,347,451 samples, 0.02%)</title><rect x="1167.9" y="533" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1170.89" y="543.5" ></text>
</g>
<g >
<title>cfree (7,785,834 samples, 0.09%)</title><rect x="1156.0" y="277" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1158.96" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (46,555,065 samples, 0.55%)</title><rect x="582.4" y="485" width="6.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="585.35" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (12,702,833 samples, 0.15%)</title><rect x="428.6" y="501" width="1.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="431.55" y="511.5" ></text>
</g>
<g >
<title>operator new (9,570,895 samples, 0.11%)</title><rect x="1058.8" y="53" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1061.77" y="63.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,593,029 samples, 0.02%)</title><rect x="1106.3" y="181" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1109.26" y="191.5" ></text>
</g>
<g >
<title>std::abs (1,734,876 samples, 0.02%)</title><rect x="947.9" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="950.93" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,485,361 samples, 0.02%)</title><rect x="431.6" y="453" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="434.59" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (2,300,319 samples, 0.03%)</title><rect x="392.4" y="501" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="395.45" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (24,400,205 samples, 0.29%)</title><rect x="1033.6" y="117" width="3.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1036.63" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (42,359,929 samples, 0.50%)</title><rect x="219.4" y="501" width="6.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="222.42" y="511.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,829,915 samples, 0.07%)</title><rect x="1002.8" y="229" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1005.78" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,068,049 samples, 0.05%)</title><rect x="1067.6" y="277" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1070.58" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,521,947 samples, 0.05%)</title><rect x="1084.3" y="261" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1087.33" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,539,979 samples, 0.04%)</title><rect x="1067.7" y="229" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1070.66" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,468,146 samples, 0.07%)</title><rect x="394.8" y="469" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="397.76" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (2,156,815 samples, 0.03%)</title><rect x="1140.3" y="373" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1143.31" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (18,856,039 samples, 0.22%)</title><rect x="1085.0" y="341" width="2.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1087.97" y="351.5" ></text>
</g>
<g >
<title>operator new (81,091,624 samples, 0.96%)</title><rect x="1046.4" y="181" width="11.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1049.45" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (2,740,136 samples, 0.03%)</title><rect x="80.9" y="485" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="83.91" y="495.5" ></text>
</g>
<g >
<title>cfree (10,633,977 samples, 0.13%)</title><rect x="1099.9" y="245" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1102.89" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (148,927,103 samples, 1.77%)</title><rect x="1039.4" y="197" width="20.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1042.38" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (8,518,062 samples, 0.10%)</title><rect x="708.2" y="469" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="711.22" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,236,423 samples, 0.06%)</title><rect x="851.1" y="469" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="854.12" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (9,143,930 samples, 0.11%)</title><rect x="1153.1" y="357" width="1.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1156.13" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (12,192,623 samples, 0.15%)</title><rect x="847.5" y="469" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="850.48" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (21,579,046 samples, 0.26%)</title><rect x="1148.6" y="277" width="3.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1151.63" y="287.5" ></text>
</g>
<g >
<title>malloc (1,217,944 samples, 0.01%)</title><rect x="982.4" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="985.43" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (12,619,593 samples, 0.15%)</title><rect x="1136.2" y="405" width="1.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1139.21" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,093,341 samples, 0.01%)</title><rect x="1099.9" y="229" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1102.91" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,505,322 samples, 0.03%)</title><rect x="1115.3" y="133" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1118.34" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (48,901,620 samples, 0.58%)</title><rect x="1060.7" y="181" width="6.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1063.68" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,209,811 samples, 0.01%)</title><rect x="1030.9" y="165" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1033.91" y="175.5" ></text>
</g>
<g >
<title>__mmput (738,795 samples, 0.01%)</title><rect x="1168.2" y="469" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1171.15" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,363,927 samples, 0.02%)</title><rect x="1163.3" y="325" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1166.27" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (90,073,284 samples, 1.07%)</title><rect x="985.5" y="309" width="12.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="988.46" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,671,139 samples, 0.03%)</title><rect x="1135.8" y="341" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1138.83" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,717,446 samples, 0.02%)</title><rect x="1161.8" y="325" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1164.83" y="335.5" ></text>
</g>
<g >
<title>is_close_int (1,071,950 samples, 0.01%)</title><rect x="1155.5" y="357" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1158.50" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (795,093 samples, 0.01%)</title><rect x="1113.4" y="181" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1116.36" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,450,272 samples, 0.05%)</title><rect x="586.1" y="373" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="589.14" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (158,589,368 samples, 1.89%)</title><rect x="669.1" y="501" width="22.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="672.06" y="511.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,425,642 samples, 0.05%)</title><rect x="851.9" y="485" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="854.85" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,966,999 samples, 0.04%)</title><rect x="1124.3" y="149" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1127.27" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (7,617,948 samples, 0.09%)</title><rect x="433.3" y="485" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="436.27" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (44,707,877 samples, 0.53%)</title><rect x="703.2" y="501" width="6.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="706.19" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,753,047 samples, 0.02%)</title><rect x="955.2" y="389" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="958.24" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (800,019 samples, 0.01%)</title><rect x="1004.4" y="277" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1007.37" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (770,426 samples, 0.01%)</title><rect x="1068.9" y="373" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1071.86" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (39,563,836 samples, 0.47%)</title><rect x="582.4" y="469" width="5.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="585.35" y="479.5" ></text>
</g>
<g >
<title>malloc (918,754 samples, 0.01%)</title><rect x="1058.6" y="53" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1061.65" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (2,103,271 samples, 0.03%)</title><rect x="926.7" y="341" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="929.71" y="351.5" ></text>
</g>
<g >
<title>operator new (12,058,570 samples, 0.14%)</title><rect x="950.8" y="261" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="953.75" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (931,613 samples, 0.01%)</title><rect x="1134.9" y="245" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1137.94" y="255.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (924,295 samples, 0.01%)</title><rect x="947.8" y="261" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="950.78" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (899,663 samples, 0.01%)</title><rect x="187.8" y="517" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="190.80" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (201,429,430 samples, 2.40%)</title><rect x="889.8" y="533" width="28.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="892.83" y="543.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (1,080,659 samples, 0.01%)</title><rect x="434.3" y="501" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="437.34" y="511.5" ></text>
</g>
<g >
<title>decltype  (8,810,852 samples, 0.10%)</title><rect x="224.1" y="437" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="227.13" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,440,722 samples, 0.05%)</title><rect x="1160.5" y="325" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1163.54" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,900,130 samples, 0.05%)</title><rect x="706.3" y="453" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="709.30" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (938,572 samples, 0.01%)</title><rect x="1151.3" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1154.30" y="175.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (10,573,618 samples, 0.13%)</title><rect x="223.9" y="453" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="226.88" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (258,396,119 samples, 3.07%)</title><rect x="593.4" y="533" width="36.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="596.36" y="543.5" >[li..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (11,236,954 samples, 0.13%)</title><rect x="180.7" y="501" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="183.66" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (2,819,653 samples, 0.03%)</title><rect x="868.9" y="517" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="871.89" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (6,807,403 samples, 0.08%)</title><rect x="391.2" y="501" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="394.20" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,073,966 samples, 0.01%)</title><rect x="1028.1" y="149" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1031.14" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,083,561 samples, 0.14%)</title><rect x="1121.6" y="213" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1124.58" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (13,023,079 samples, 0.15%)</title><rect x="387.1" y="437" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="390.06" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,507,962 samples, 0.05%)</title><rect x="70.6" y="469" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="73.56" y="479.5" ></text>
</g>
<g >
<title>cfree (1,186,236 samples, 0.01%)</title><rect x="1038.0" y="293" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1040.95" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,383,803 samples, 0.03%)</title><rect x="944.2" y="373" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="947.19" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (48,358,811 samples, 0.58%)</title><rect x="1120.8" y="245" width="6.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1123.77" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,505,322 samples, 0.03%)</title><rect x="1115.3" y="165" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1118.34" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (814,030 samples, 0.01%)</title><rect x="1151.7" y="181" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.66" y="191.5" ></text>
</g>
<g >
<title>operator new (1,041,434 samples, 0.01%)</title><rect x="991.9" y="229" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="994.92" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,062,198 samples, 0.01%)</title><rect x="1153.5" y="309" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1156.52" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,200,026 samples, 0.04%)</title><rect x="993.9" y="165" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="996.91" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (36,221,371 samples, 0.43%)</title><rect x="911.4" y="421" width="5.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="914.45" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,308,304 samples, 0.02%)</title><rect x="1101.8" y="197" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1104.83" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,593,877 samples, 0.02%)</title><rect x="1113.7" y="213" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1116.72" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (30,683,984 samples, 0.36%)</title><rect x="849.2" y="501" width="4.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="852.19" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,300,108 samples, 0.04%)</title><rect x="1151.7" y="229" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1154.66" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (39,576,162 samples, 0.47%)</title><rect x="1094.2" y="245" width="5.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.20" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (781,594 samples, 0.01%)</title><rect x="1013.7" y="277" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1016.66" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,211,888 samples, 0.01%)</title><rect x="587.7" y="325" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="590.74" y="335.5" ></text>
</g>
<g >
<title>choose_next_point (142,448,512 samples, 1.69%)</title><rect x="62.4" y="533" width="20.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="65.45" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,221,038 samples, 0.09%)</title><rect x="925.3" y="293" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="928.25" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,440,722 samples, 0.05%)</title><rect x="1160.5" y="341" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1163.54" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,711,691 samples, 0.02%)</title><rect x="1004.0" y="309" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1007.03" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (95,222,995 samples, 1.13%)</title><rect x="1107.1" y="309" width="13.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1110.10" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (39,563,836 samples, 0.47%)</title><rect x="582.4" y="421" width="5.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="585.35" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,539,979 samples, 0.04%)</title><rect x="1067.7" y="245" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1070.66" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (2,347,028 samples, 0.03%)</title><rect x="79.8" y="453" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="82.81" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,470,194 samples, 0.09%)</title><rect x="1126.5" y="229" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1129.50" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,758,776 samples, 0.02%)</title><rect x="1189.7" y="501" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1192.74" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (6,583,495 samples, 0.08%)</title><rect x="1086.3" y="277" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1089.28" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (8,112,034 samples, 0.10%)</title><rect x="1031.7" y="133" width="1.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1034.67" y="143.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,221,038 samples, 0.09%)</title><rect x="925.3" y="309" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="928.25" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (6,931,909 samples, 0.08%)</title><rect x="698.4" y="485" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="701.38" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,723,258 samples, 0.02%)</title><rect x="973.8" y="293" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="976.81" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,055,390 samples, 0.36%)</title><rect x="1016.3" y="197" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1019.33" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (48,358,811 samples, 0.58%)</title><rect x="1120.8" y="293" width="6.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1123.77" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,057,869 samples, 0.01%)</title><rect x="981.9" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="984.93" y="351.5" ></text>
</g>
<g >
<title>exit_mmap (738,795 samples, 0.01%)</title><rect x="1168.2" y="453" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1171.15" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (7,513,893 samples, 0.09%)</title><rect x="907.1" y="517" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="910.09" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,083,458 samples, 0.01%)</title><rect x="926.3" y="341" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="929.26" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (77,628,741 samples, 0.92%)</title><rect x="551.9" y="485" width="10.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="554.93" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,440,722 samples, 0.05%)</title><rect x="1160.5" y="357" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1163.54" y="367.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,214,383 samples, 0.01%)</title><rect x="1120.3" y="165" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1123.29" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (808,957 samples, 0.01%)</title><rect x="1128.0" y="85" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1131.04" y="95.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (16,690,868 samples, 0.20%)</title><rect x="187.9" y="517" width="2.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="190.93" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,211,888 samples, 0.01%)</title><rect x="587.7" y="357" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="590.74" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (50,046,568 samples, 0.60%)</title><rect x="927.8" y="277" width="7.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="930.82" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (12,192,623 samples, 0.15%)</title><rect x="847.5" y="485" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="850.48" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,905,229 samples, 0.02%)</title><rect x="1142.9" y="149" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1145.91" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,103,271 samples, 0.03%)</title><rect x="926.7" y="325" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="929.71" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (929,456 samples, 0.01%)</title><rect x="431.9" y="437" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="434.85" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,593,029 samples, 0.02%)</title><rect x="1106.3" y="149" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1109.26" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,065,526 samples, 0.06%)</title><rect x="693.3" y="469" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="696.32" y="479.5" ></text>
</g>
<g >
<title>operator new (7,655,399 samples, 0.09%)</title><rect x="1100.2" y="229" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1103.23" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,051,740 samples, 0.04%)</title><rect x="1075.7" y="293" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1078.73" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (4,021,085 samples, 0.05%)</title><rect x="1091.2" y="325" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1094.19" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (23,280,930 samples, 0.28%)</title><rect x="1144.9" y="261" width="3.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1147.93" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (10,732,442 samples, 0.13%)</title><rect x="406.7" y="437" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="409.73" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (11,359,078 samples, 0.14%)</title><rect x="1157.7" y="309" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1160.72" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,228,531 samples, 0.05%)</title><rect x="1159.4" y="325" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.37" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (36,554,455 samples, 0.43%)</title><rect x="948.8" y="357" width="5.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="951.76" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,228,198 samples, 0.01%)</title><rect x="955.5" y="389" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="958.48" y="399.5" ></text>
</g>
<g >
<title>cfree (1,998,285 samples, 0.02%)</title><rect x="1160.6" y="309" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1163.58" y="319.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (866,554 samples, 0.01%)</title><rect x="589.0" y="469" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="592.03" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (11,359,078 samples, 0.14%)</title><rect x="1157.7" y="341" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.72" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,476,252 samples, 0.02%)</title><rect x="308.1" y="501" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="311.10" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (33,651,879 samples, 0.40%)</title><rect x="1184.0" y="549" width="4.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1186.96" y="559.5" ></text>
</g>
<g >
<title>operator new (1,212,863 samples, 0.01%)</title><rect x="979.4" y="325" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="982.36" y="335.5" ></text>
</g>
<g >
<title>cfree (8,886,348 samples, 0.11%)</title><rect x="1131.6" y="293" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1134.56" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (24,536,266 samples, 0.29%)</title><rect x="1033.6" y="181" width="3.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1036.63" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,166,424 samples, 0.04%)</title><rect x="1119.8" y="165" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1122.85" y="175.5" ></text>
</g>
<g >
<title>operator new (2,292,073 samples, 0.03%)</title><rect x="1124.3" y="85" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1127.29" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,319,343 samples, 0.06%)</title><rect x="587.0" y="309" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="589.99" y="319.5" ></text>
</g>
<g >
<title>decltype  (1,045,398 samples, 0.01%)</title><rect x="381.4" y="405" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="384.36" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,739,432 samples, 0.02%)</title><rect x="182.2" y="501" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="185.24" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (7,377,078 samples, 0.09%)</title><rect x="1004.8" y="261" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1007.84" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (20,006,690 samples, 0.24%)</title><rect x="519.5" y="501" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="522.55" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,361,342 samples, 0.02%)</title><rect x="1151.5" y="165" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1154.47" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,230,114 samples, 0.01%)</title><rect x="1003.9" y="277" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1006.86" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (5,390,258 samples, 0.06%)</title><rect x="1162.1" y="421" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1165.09" y="431.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,663,900 samples, 0.03%)</title><rect x="1032.4" y="117" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1035.43" y="127.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (189,475,313 samples, 2.25%)</title><rect x="344.2" y="437" width="26.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="347.17" y="447.5" >a..</text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,064,235 samples, 0.01%)</title><rect x="693.9" y="437" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="696.88" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (2,110,973 samples, 0.03%)</title><rect x="392.2" y="517" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="395.15" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,485,361 samples, 0.02%)</title><rect x="431.6" y="421" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="434.59" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (4,872,220 samples, 0.06%)</title><rect x="81.8" y="517" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="84.76" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (118,901,164 samples, 1.41%)</title><rect x="957.4" y="357" width="16.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="960.36" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,608,669 samples, 0.02%)</title><rect x="699.4" y="501" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="702.35" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (6,991,229 samples, 0.08%)</title><rect x="587.9" y="453" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="590.91" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (819,945 samples, 0.01%)</title><rect x="1099.8" y="197" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1102.77" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (923,707 samples, 0.01%)</title><rect x="1163.5" y="357" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1166.46" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (52,585,319 samples, 0.63%)</title><rect x="869.3" y="517" width="7.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="872.28" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,564,491 samples, 0.03%)</title><rect x="1182.2" y="533" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1185.17" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (1,338,575 samples, 0.02%)</title><rect x="1088.4" y="325" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1091.41" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,905,229 samples, 0.02%)</title><rect x="1142.9" y="229" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1145.91" y="239.5" ></text>
</g>
<g >
<title>choose_next_point (1,610,546 samples, 0.02%)</title><rect x="308.1" y="517" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="311.08" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (20,006,690 samples, 0.24%)</title><rect x="519.5" y="469" width="2.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="522.55" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (808,957 samples, 0.01%)</title><rect x="1128.0" y="101" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1131.04" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (941,498 samples, 0.01%)</title><rect x="1152.2" y="341" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1155.18" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (1,972,673 samples, 0.02%)</title><rect x="1087.3" y="309" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1090.34" y="319.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (935,561 samples, 0.01%)</title><rect x="1139.9" y="357" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1142.92" y="367.5" ></text>
</g>
<g >
<title>gen_all_points (8,102,662 samples, 0.10%)</title><rect x="1135.1" y="405" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1138.07" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,308,304 samples, 0.02%)</title><rect x="1101.8" y="133" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1104.83" y="143.5" ></text>
</g>
<g >
<title>cfree (921,573 samples, 0.01%)</title><rect x="995.7" y="117" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="998.75" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (815,920 samples, 0.01%)</title><rect x="927.0" y="325" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="930.05" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,263,243 samples, 0.05%)</title><rect x="1106.0" y="245" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1108.98" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,509,266 samples, 0.02%)</title><rect x="1113.5" y="213" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1116.47" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (800,019 samples, 0.01%)</title><rect x="1004.4" y="293" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1007.37" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (62,724,713 samples, 0.75%)</title><rect x="1143.3" y="373" width="8.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1146.34" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (36,221,371 samples, 0.43%)</title><rect x="911.4" y="437" width="5.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="914.45" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (76,297,057 samples, 0.91%)</title><rect x="963.3" y="341" width="10.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="966.34" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,236,423 samples, 0.06%)</title><rect x="851.1" y="453" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="854.12" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,588,559 samples, 0.02%)</title><rect x="82.2" y="453" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="85.22" y="463.5" ></text>
</g>
<g >
<title>cfree (2,656,734 samples, 0.03%)</title><rect x="584.9" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="587.94" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,074,351 samples, 0.04%)</title><rect x="1083.8" y="229" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1086.80" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,005,057 samples, 0.07%)</title><rect x="548.4" y="517" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="551.38" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,056,969 samples, 0.01%)</title><rect x="926.6" y="341" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="929.57" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,724,781 samples, 0.04%)</title><rect x="1127.0" y="181" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1130.03" y="191.5" ></text>
</g>
<g >
<title>cfree (1,062,781 samples, 0.01%)</title><rect x="1163.0" y="293" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1166.03" y="303.5" ></text>
</g>
<g >
<title>malloc (2,026,424 samples, 0.02%)</title><rect x="1021.1" y="197" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1024.06" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (792,517 samples, 0.01%)</title><rect x="1182.3" y="517" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1185.34" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,278,544 samples, 0.03%)</title><rect x="1162.2" y="277" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1165.20" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (14,998,979 samples, 0.18%)</title><rect x="79.2" y="501" width="2.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="82.19" y="511.5" ></text>
</g>
<g >
<title>operator new (4,703,148 samples, 0.06%)</title><rect x="983.6" y="341" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="986.56" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,389,143 samples, 0.03%)</title><rect x="1005.9" y="213" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1008.87" y="223.5" ></text>
</g>
<g >
<title>operator new (10,332,440 samples, 0.12%)</title><rect x="585.5" y="405" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="588.52" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,086,852 samples, 0.01%)</title><rect x="1134.1" y="245" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1137.12" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (4,037,505 samples, 0.05%)</title><rect x="1008.9" y="309" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1011.90" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,624,452 samples, 0.02%)</title><rect x="431.6" y="469" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="434.57" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,034,475 samples, 0.04%)</title><rect x="178.5" y="453" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="181.55" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (48,901,620 samples, 0.58%)</title><rect x="1060.7" y="197" width="6.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1063.68" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (271,840,435 samples, 3.23%)</title><rect x="1092.1" y="357" width="38.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1095.12" y="367.5" >std..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (32,163,660 samples, 0.38%)</title><rect x="694.8" y="517" width="4.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="697.84" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,849,905 samples, 0.12%)</title><rect x="867.3" y="517" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="870.26" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,385,242 samples, 0.03%)</title><rect x="1183.0" y="533" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1185.96" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (813,388 samples, 0.01%)</title><rect x="588.9" y="517" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="591.89" y="527.5" ></text>
</g>
<g >
<title>operator delete (144,487,817 samples, 1.72%)</title><rect x="120.8" y="533" width="20.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="123.84" y="543.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (5,682,742 samples, 0.07%)</title><rect x="888.9" y="517" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="891.89" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (4,872,220 samples, 0.06%)</title><rect x="81.8" y="501" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="84.76" y="511.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (85,178,858 samples, 1.01%)</title><rect x="677.4" y="437" width="12.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="680.41" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (43,512,505 samples, 0.52%)</title><rect x="376.9" y="485" width="6.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="379.91" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,393,986 samples, 0.05%)</title><rect x="1163.0" y="389" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1166.02" y="399.5" ></text>
</g>
<g >
<title>operator delete (2,900,278 samples, 0.03%)</title><rect x="1104.1" y="261" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1107.07" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,358,579 samples, 0.05%)</title><rect x="852.5" y="485" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="855.48" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,487,111 samples, 0.02%)</title><rect x="1113.5" y="181" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1116.48" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,494,317 samples, 0.02%)</title><rect x="1151.5" y="181" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1154.45" y="191.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (7,552,085 samples, 0.09%)</title><rect x="413.1" y="405" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="416.15" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,192,786 samples, 0.01%)</title><rect x="80.7" y="485" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="83.74" y="495.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,605,529 samples, 0.03%)</title><rect x="998.4" y="309" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1001.36" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,348,093 samples, 0.02%)</title><rect x="431.8" y="469" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="434.80" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (95,222,995 samples, 1.13%)</title><rect x="1107.1" y="293" width="13.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1110.10" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (62,734,031 samples, 0.75%)</title><rect x="216.6" y="517" width="8.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="219.56" y="527.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (38,571,361 samples, 0.46%)</title><rect x="71.2" y="453" width="5.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="74.19" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,608,669 samples, 0.02%)</title><rect x="699.4" y="517" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="702.35" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,877,805 samples, 0.02%)</title><rect x="181.3" y="485" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="184.34" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (5,757,532 samples, 0.07%)</title><rect x="1009.5" y="309" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1012.46" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (48,358,811 samples, 0.58%)</title><rect x="1120.8" y="261" width="6.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1123.77" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,117,695 samples, 0.03%)</title><rect x="944.2" y="309" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="947.19" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (15,947,481 samples, 0.19%)</title><rect x="531.0" y="501" width="2.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="534.02" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,012,927 samples, 0.02%)</title><rect x="432.9" y="437" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="435.91" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (17,581,556 samples, 0.21%)</title><rect x="411.7" y="453" width="2.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="414.74" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,586,281 samples, 0.02%)</title><rect x="1101.8" y="245" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1104.79" y="255.5" ></text>
</g>
<g >
<title>malloc (9,276,096 samples, 0.11%)</title><rect x="591.0" y="533" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="594.02" y="543.5" ></text>
</g>
<g >
<title>cfree (929,979 samples, 0.01%)</title><rect x="1143.5" y="341" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1146.47" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,624,412 samples, 0.02%)</title><rect x="701.4" y="437" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="704.39" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,058,266 samples, 0.01%)</title><rect x="992.4" y="229" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="995.36" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,539,979 samples, 0.04%)</title><rect x="1067.7" y="165" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1070.66" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (144,369,485 samples, 1.72%)</title><rect x="955.9" y="389" width="20.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="958.93" y="399.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,991,229 samples, 0.08%)</title><rect x="587.9" y="469" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="590.91" y="479.5" ></text>
</g>
<g >
<title>malloc (1,607,045 samples, 0.02%)</title><rect x="1046.1" y="181" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1049.07" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (4,566,530 samples, 0.05%)</title><rect x="1167.0" y="501" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1170.00" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (940,544 samples, 0.01%)</title><rect x="1159.2" y="245" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1162.18" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (2,264,178 samples, 0.03%)</title><rect x="744.7" y="485" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="747.71" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (57,258,964 samples, 0.68%)</title><rect x="1152.4" y="405" width="8.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1155.35" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,886,803 samples, 0.02%)</title><rect x="1053.9" y="133" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1056.94" y="143.5" ></text>
</g>
<g >
<title>get_inbetween_points (12,589,860 samples, 0.15%)</title><rect x="1004.5" y="325" width="1.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1007.50" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,677,072 samples, 0.04%)</title><rect x="1067.6" y="261" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1070.64" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (11,962,472 samples, 0.14%)</title><rect x="1155.9" y="325" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1158.94" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,086,852 samples, 0.01%)</title><rect x="1134.1" y="293" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1137.12" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,034,475 samples, 0.04%)</title><rect x="178.5" y="517" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="181.55" y="527.5" ></text>
</g>
<g >
<title>choose_next_point (1,751,238,098 samples, 20.83%)</title><rect x="918.1" y="485" width="245.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="921.14" y="495.5" >choose_next_point</text>
</g>
<g >
<title>operator new (799,229 samples, 0.01%)</title><rect x="592.3" y="533" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="595.32" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (32,163,660 samples, 0.38%)</title><rect x="694.8" y="501" width="4.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="697.84" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (793,010 samples, 0.01%)</title><rect x="308.2" y="453" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="311.17" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,068,245 samples, 0.01%)</title><rect x="962.1" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="965.07" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (9,143,930 samples, 0.11%)</title><rect x="1153.1" y="341" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1156.13" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,833,448 samples, 0.02%)</title><rect x="1163.0" y="373" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1166.02" y="383.5" ></text>
</g>
<g >
<title>cfree (2,940,326 samples, 0.03%)</title><rect x="1149.8" y="181" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1152.79" y="191.5" ></text>
</g>
<g >
<title>gen_all_points (77,355,430 samples, 0.92%)</title><rect x="927.3" y="389" width="10.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="930.33" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (936,793 samples, 0.01%)</title><rect x="962.1" y="261" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="965.09" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,652,548 samples, 0.03%)</title><rect x="1161.7" y="389" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1164.72" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (4,583,313 samples, 0.05%)</title><rect x="1012.7" y="261" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1015.68" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,966,999 samples, 0.04%)</title><rect x="1124.3" y="181" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1127.27" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (47,442,506 samples, 0.56%)</title><rect x="911.4" y="485" width="6.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="914.45" y="495.5" ></text>
</g>
<g >
<title>get_inbetween_points (5,207,371 samples, 0.06%)</title><rect x="1049.4" y="165" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1052.40" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,730,118 samples, 0.18%)</title><rect x="1085.1" y="293" width="2.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1088.13" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,052,460 samples, 0.01%)</title><rect x="1058.0" y="181" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1061.00" y="191.5" ></text>
</g>
<g >
<title>malloc (1,058,697 samples, 0.01%)</title><rect x="1137.3" y="261" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1140.32" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,361,342 samples, 0.02%)</title><rect x="1151.5" y="85" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1154.47" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (29,452,046 samples, 0.35%)</title><rect x="1039.6" y="181" width="4.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.61" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (812,668 samples, 0.01%)</title><rect x="1119.5" y="229" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1122.47" y="239.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,285,463 samples, 0.03%)</title><rect x="1013.0" y="229" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1016.00" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,966,999 samples, 0.04%)</title><rect x="1124.3" y="101" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1127.27" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (6,583,495 samples, 0.08%)</title><rect x="1086.3" y="261" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1089.28" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,222,942 samples, 0.01%)</title><rect x="201.9" y="517" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="204.90" y="527.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,431,161 samples, 0.02%)</title><rect x="411.5" y="453" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="414.54" y="463.5" ></text>
</g>
<g >
<title>operator delete (148,346,477 samples, 1.76%)</title><rect x="785.5" y="533" width="20.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="788.52" y="543.5" ></text>
</g>
<g >
<title>is_close_int (7,402,528 samples, 0.09%)</title><rect x="91.1" y="517" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="94.13" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (12,280,881 samples, 0.15%)</title><rect x="1031.1" y="165" width="1.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1034.08" y="175.5" ></text>
</g>
<g >
<title>is_close_int (22,662,674 samples, 0.27%)</title><rect x="945.0" y="373" width="3.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="947.99" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (791,557 samples, 0.01%)</title><rect x="1134.3" y="293" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1137.29" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,769,952 samples, 0.06%)</title><rect x="1135.2" y="293" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1138.17" y="303.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (7,573,440 samples, 0.09%)</title><rect x="1135.1" y="357" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1138.15" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (944,566 samples, 0.01%)</title><rect x="1099.8" y="229" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1102.75" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (931,613 samples, 0.01%)</title><rect x="1134.9" y="261" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1137.94" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,144,881 samples, 0.03%)</title><rect x="1154.4" y="341" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1157.41" y="351.5" ></text>
</g>
<g >
<title>operator new (1,856,160 samples, 0.02%)</title><rect x="1005.9" y="197" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1008.95" y="207.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (4,403,859 samples, 0.05%)</title><rect x="190.8" y="517" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="193.77" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,308,304 samples, 0.02%)</title><rect x="1101.8" y="149" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1104.83" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (39,763,543 samples, 0.47%)</title><rect x="737.5" y="517" width="5.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="740.50" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (17,189,249 samples, 0.20%)</title><rect x="995.6" y="181" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="998.62" y="191.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,830,605 samples, 0.02%)</title><rect x="589.0" y="501" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="592.00" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (913,033 samples, 0.01%)</title><rect x="1067.4" y="101" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1070.42" y="111.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (9,271,500 samples, 0.11%)</title><rect x="979.8" y="325" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="982.77" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (8,981,846 samples, 0.11%)</title><rect x="525.6" y="437" width="1.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="528.62" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (6,924,752 samples, 0.08%)</title><rect x="697.1" y="453" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="700.09" y="463.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,083,458 samples, 0.01%)</title><rect x="926.3" y="309" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="929.26" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,711,691 samples, 0.02%)</title><rect x="1004.0" y="293" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1007.03" y="303.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (78,530,216 samples, 0.93%)</title><rect x="403.5" y="485" width="11.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="406.54" y="495.5" ></text>
</g>
<g >
<title>gen_all_points (135,657,973 samples, 1.61%)</title><rect x="395.5" y="533" width="19.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="398.53" y="543.5" ></text>
</g>
<g >
<title>operator new (1,307,426 samples, 0.02%)</title><rect x="948.5" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="951.46" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (3,032,193 samples, 0.04%)</title><rect x="84.9" y="469" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="87.93" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (21,579,046 samples, 0.26%)</title><rect x="1148.6" y="261" width="3.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1151.63" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (894,978 samples, 0.01%)</title><rect x="1137.1" y="277" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.09" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,064,141 samples, 0.01%)</title><rect x="1032.9" y="197" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1035.92" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,323,790 samples, 0.05%)</title><rect x="1127.7" y="261" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1130.70" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,040,787 samples, 0.01%)</title><rect x="593.0" y="469" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="596.03" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,966,999 samples, 0.04%)</title><rect x="1124.3" y="117" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1127.27" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (822,146 samples, 0.01%)</title><rect x="1053.8" y="101" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1056.77" y="111.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (793,010 samples, 0.01%)</title><rect x="308.2" y="437" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="311.17" y="447.5" ></text>
</g>
<g >
<title>cfree (1,184,138 samples, 0.01%)</title><rect x="987.6" y="245" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="990.55" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (11,800,835 samples, 0.14%)</title><rect x="406.6" y="469" width="1.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="409.58" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (24,541,100 samples, 0.29%)</title><rect x="733.3" y="501" width="3.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="736.30" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,200,026 samples, 0.04%)</title><rect x="993.9" y="133" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="996.91" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,838,457 samples, 0.02%)</title><rect x="1135.9" y="261" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1138.89" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (22,900,928 samples, 0.27%)</title><rect x="934.8" y="277" width="3.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="937.85" y="287.5" ></text>
</g>
<g >
<title>all (8,407,323,805 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>operator new (11,942,134 samples, 0.14%)</title><rect x="1149.8" y="197" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1152.76" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (1,159,767 samples, 0.01%)</title><rect x="548.2" y="501" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="551.21" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,001,291 samples, 0.05%)</title><rect x="693.3" y="405" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="696.32" y="415.5" ></text>
</g>
<g >
<title>operator new (18,036,541 samples, 0.21%)</title><rect x="1034.3" y="69" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1037.34" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (5,103,654 samples, 0.06%)</title><rect x="1160.4" y="373" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1163.45" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (7,834,667 samples, 0.09%)</title><rect x="1135.1" y="389" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1138.11" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (82,241,055 samples, 0.98%)</title><rect x="878.3" y="533" width="11.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="881.29" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (10,264,240 samples, 0.12%)</title><rect x="79.3" y="485" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="82.30" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (793,205 samples, 0.01%)</title><rect x="1092.4" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1095.35" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,380,807 samples, 0.05%)</title><rect x="1119.8" y="213" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1122.85" y="223.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,191,553 samples, 0.01%)</title><rect x="308.3" y="517" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="311.31" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,829,915 samples, 0.07%)</title><rect x="1002.8" y="261" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1005.78" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,336,762 samples, 0.02%)</title><rect x="1167.7" y="533" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1170.70" y="543.5" ></text>
</g>
<g >
<title>cfree (785,910 samples, 0.01%)</title><rect x="1113.9" y="213" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1116.95" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (85,178,858 samples, 1.01%)</title><rect x="677.4" y="469" width="12.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="680.41" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (64,064,453 samples, 0.76%)</title><rect x="1143.3" y="405" width="9.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1146.32" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,769,952 samples, 0.06%)</title><rect x="1135.2" y="325" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1138.17" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,717,446 samples, 0.02%)</title><rect x="1161.8" y="373" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1164.83" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,269,202 samples, 0.03%)</title><rect x="181.6" y="485" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="184.60" y="495.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,137,478 samples, 0.03%)</title><rect x="589.0" y="517" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="592.00" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,673,982 samples, 0.03%)</title><rect x="1147.8" y="181" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1150.83" y="191.5" ></text>
</g>
<g >
<title>cfree (2,908,853 samples, 0.03%)</title><rect x="950.8" y="245" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="953.83" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (498,335,516 samples, 5.93%)</title><rect x="998.9" y="373" width="70.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1001.92" y="383.5" >std::_R..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (12,192,623 samples, 0.15%)</title><rect x="847.5" y="501" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="850.48" y="511.5" ></text>
</g>
<g >
<title>cfree (2,664,932 samples, 0.03%)</title><rect x="950.3" y="261" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="953.28" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (7,617,948 samples, 0.09%)</title><rect x="433.3" y="517" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="436.27" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,195,186 samples, 0.01%)</title><rect x="1161.5" y="373" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1164.51" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (149,326,341 samples, 1.78%)</title><rect x="1039.4" y="277" width="20.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1042.38" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (161,903,029 samples, 1.93%)</title><rect x="976.2" y="373" width="22.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="979.19" y="383.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (2,129,105 samples, 0.03%)</title><rect x="93.0" y="485" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="95.99" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (154,568,411 samples, 1.84%)</title><rect x="541.1" y="533" width="21.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="544.13" y="543.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (1,469,116 samples, 0.02%)</title><rect x="700.2" y="517" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="703.15" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,709,157 samples, 0.06%)</title><rect x="180.0" y="453" width="0.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="183.00" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (931,613 samples, 0.01%)</title><rect x="1134.9" y="197" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1137.94" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,190,005 samples, 0.01%)</title><rect x="947.7" y="325" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="950.75" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (74,572,102 samples, 0.89%)</title><rect x="191.6" y="533" width="10.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="194.61" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,308,304 samples, 0.02%)</title><rect x="1101.8" y="229" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1104.83" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,074,351 samples, 0.04%)</title><rect x="1083.8" y="245" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1086.80" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (814,409 samples, 0.01%)</title><rect x="586.3" y="341" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="589.33" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,211,888 samples, 0.01%)</title><rect x="587.7" y="373" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="590.74" y="383.5" ></text>
</g>
<g >
<title>cfree (935,382 samples, 0.01%)</title><rect x="1144.7" y="325" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1147.67" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,803,410 samples, 0.03%)</title><rect x="1167.3" y="485" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1170.25" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,439,898 samples, 0.04%)</title><rect x="1151.7" y="261" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1154.66" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,034,864 samples, 0.02%)</title><rect x="1142.9" y="261" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1145.89" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (954,767 samples, 0.01%)</title><rect x="527.9" y="421" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="530.89" y="431.5" ></text>
</g>
<g >
<title>get_inbetween_points (253,360,039 samples, 3.01%)</title><rect x="709.5" y="533" width="35.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="712.47" y="543.5" >get..</text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (949,725 samples, 0.01%)</title><rect x="992.2" y="197" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="995.23" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (22,673,605 samples, 0.27%)</title><rect x="1029.6" y="181" width="3.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1032.62" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (53,784,908 samples, 0.64%)</title><rect x="375.5" y="501" width="7.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="378.47" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (3,078,172 samples, 0.04%)</title><rect x="952.6" y="325" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="955.63" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (2,286,577 samples, 0.03%)</title><rect x="698.1" y="485" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="701.06" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,673,982 samples, 0.03%)</title><rect x="1147.8" y="165" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1150.83" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,028,868 samples, 0.02%)</title><rect x="78.4" y="437" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="81.42" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,192,031 samples, 0.01%)</title><rect x="84.3" y="453" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="87.27" y="463.5" ></text>
</g>
<g >
<title>std::abs (2,799,975 samples, 0.03%)</title><rect x="736.7" y="501" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="739.75" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,605,529 samples, 0.03%)</title><rect x="998.4" y="341" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1001.36" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (787,775 samples, 0.01%)</title><rect x="81.6" y="501" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="84.65" y="511.5" ></text>
</g>
<g >
<title>malloc (30,701,654 samples, 0.37%)</title><rect x="1024.0" y="181" width="4.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1026.98" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,206,654 samples, 0.01%)</title><rect x="955.8" y="389" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="958.76" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,655,758 samples, 0.09%)</title><rect x="1066.2" y="149" width="1.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1069.17" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (17,455,745 samples, 0.21%)</title><rect x="1157.6" y="357" width="2.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1160.62" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (6,931,909 samples, 0.08%)</title><rect x="698.4" y="469" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="701.38" y="479.5" ></text>
</g>
<g >
<title>malloc (12,574,111 samples, 0.15%)</title><rect x="1063.9" y="149" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1066.94" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,278,544 samples, 0.03%)</title><rect x="1162.2" y="309" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1165.20" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,741,010 samples, 0.02%)</title><rect x="992.1" y="229" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="995.12" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,389,143 samples, 0.03%)</title><rect x="1005.9" y="245" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1008.87" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,034,475 samples, 0.04%)</title><rect x="178.5" y="469" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="181.55" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,300,108 samples, 0.04%)</title><rect x="1151.7" y="213" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1154.66" y="223.5" ></text>
</g>
<g >
<title>is_close_int (3,033,495 samples, 0.04%)</title><rect x="1090.7" y="341" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1093.74" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,318,019 samples, 0.03%)</title><rect x="1162.5" y="341" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1165.52" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,390,258 samples, 0.06%)</title><rect x="1162.1" y="373" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1165.09" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,032,193 samples, 0.04%)</title><rect x="84.9" y="437" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="87.93" y="447.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (932,839 samples, 0.01%)</title><rect x="1140.5" y="341" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1143.49" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,711,992 samples, 0.02%)</title><rect x="593.0" y="485" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="596.03" y="495.5" ></text>
</g>
<g >
<title>cfree (219,357,676 samples, 2.61%)</title><rect x="629.6" y="533" width="30.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="632.63" y="543.5" >cf..</text>
</g>
<g >
<title>operator delete (2,280,590 samples, 0.03%)</title><rect x="1140.9" y="357" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1143.90" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (2,264,178 samples, 0.03%)</title><rect x="744.7" y="469" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="747.71" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,468,146 samples, 0.07%)</title><rect x="394.8" y="437" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="397.76" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,833,448 samples, 0.02%)</title><rect x="1163.0" y="309" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1166.02" y="319.5" ></text>
</g>
<g >
<title>gen_all_points (55,966,838 samples, 0.67%)</title><rect x="701.6" y="533" width="7.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="704.61" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,389,143 samples, 0.03%)</title><rect x="1005.9" y="229" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1008.87" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (80,814,147 samples, 0.96%)</title><rect x="844.4" y="517" width="11.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="847.40" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (21,575,496 samples, 0.26%)</title><rect x="538.1" y="517" width="3.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="541.10" y="527.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (949,725 samples, 0.01%)</title><rect x="992.2" y="181" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="995.23" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,197,302 samples, 0.01%)</title><rect x="985.1" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="988.14" y="287.5" ></text>
</g>
<g >
<title>operator delete (2,361,929 samples, 0.03%)</title><rect x="991.6" y="229" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="994.58" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (954,767 samples, 0.01%)</title><rect x="527.9" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="530.89" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,296,688 samples, 0.02%)</title><rect x="1118.7" y="245" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1121.73" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,151,686 samples, 0.03%)</title><rect x="1066.9" y="85" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1069.87" y="95.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (5,552,461 samples, 0.07%)</title><rect x="92.2" y="501" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="95.21" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,752,242 samples, 0.04%)</title><rect x="1083.8" y="293" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1086.80" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (931,613 samples, 0.01%)</title><rect x="1134.9" y="213" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1137.94" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (361,942,921 samples, 4.31%)</title><rect x="324.7" y="517" width="50.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="327.67" y="527.5" >std::..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (31,786,311 samples, 0.38%)</title><rect x="219.4" y="453" width="4.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="222.42" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,805,537 samples, 0.03%)</title><rect x="952.7" y="309" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="955.67" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,086,852 samples, 0.01%)</title><rect x="1134.1" y="213" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1137.12" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,463,878 samples, 0.02%)</title><rect x="1154.7" y="325" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1157.73" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,349,366 samples, 0.02%)</title><rect x="1127.8" y="197" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.76" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (5,442,719 samples, 0.06%)</title><rect x="1162.9" y="421" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1165.89" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,040,787 samples, 0.01%)</title><rect x="593.0" y="421" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="596.03" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (76,297,057 samples, 0.91%)</title><rect x="963.3" y="325" width="10.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="966.34" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (33,505,202 samples, 0.40%)</title><rect x="370.8" y="485" width="4.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="373.76" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,278,544 samples, 0.03%)</title><rect x="1162.2" y="293" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1165.20" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (17,972,328 samples, 0.21%)</title><rect x="409.2" y="469" width="2.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="412.22" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (4,021,085 samples, 0.05%)</title><rect x="1091.2" y="341" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1094.19" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,588,559 samples, 0.02%)</title><rect x="82.2" y="437" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="85.22" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,228,531 samples, 0.05%)</title><rect x="1159.4" y="309" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1162.37" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (2,740,136 samples, 0.03%)</title><rect x="80.9" y="469" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="83.91" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,308,304 samples, 0.02%)</title><rect x="1101.8" y="181" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1104.83" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (14,454,130 samples, 0.17%)</title><rect x="924.4" y="373" width="2.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="927.39" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (46,555,065 samples, 0.55%)</title><rect x="582.4" y="501" width="6.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="585.35" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,128,662 samples, 0.03%)</title><rect x="926.4" y="373" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="929.42" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (801,670 samples, 0.01%)</title><rect x="1161.2" y="405" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1164.16" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (67,966,604 samples, 0.81%)</title><rect x="1072.6" y="325" width="9.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1075.59" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (49,172,359 samples, 0.58%)</title><rect x="1060.7" y="261" width="6.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1063.68" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,607,438 samples, 0.02%)</title><rect x="1160.1" y="357" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1163.07" y="367.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (10,203,721 samples, 0.12%)</title><rect x="402.1" y="485" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="405.11" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (36,554,455 samples, 0.43%)</title><rect x="948.8" y="373" width="5.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="951.76" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,363,927 samples, 0.02%)</title><rect x="1163.3" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1166.27" y="367.5" ></text>
</g>
<g >
<title>operator new (1,333,816 samples, 0.02%)</title><rect x="950.5" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="953.45" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,152,131 samples, 0.06%)</title><rect x="949.6" y="261" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="952.56" y="271.5" ></text>
</g>
<g >
<title>operator new (5,740,732 samples, 0.07%)</title><rect x="1114.2" y="213" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1117.17" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,877,805 samples, 0.02%)</title><rect x="181.3" y="437" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="184.34" y="447.5" ></text>
</g>
<g >
<title>cfree (58,184,810 samples, 0.69%)</title><rect x="1107.5" y="245" width="8.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1110.53" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,881,357 samples, 0.09%)</title><rect x="1081.0" y="309" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1084.02" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (929,456 samples, 0.01%)</title><rect x="431.9" y="453" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="434.85" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,054,966 samples, 0.01%)</title><rect x="947.8" y="293" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="950.77" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (7,781,450 samples, 0.09%)</title><rect x="528.2" y="485" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="531.22" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (23,280,930 samples, 0.28%)</title><rect x="1144.9" y="325" width="3.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1147.93" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,668,043 samples, 0.08%)</title><rect x="587.0" y="405" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="589.97" y="415.5" ></text>
</g>
<g >
<title>cfree (8,940,329 samples, 0.11%)</title><rect x="932.3" y="245" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="935.30" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (929,456 samples, 0.01%)</title><rect x="431.9" y="421" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="434.85" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,323,790 samples, 0.05%)</title><rect x="1127.7" y="229" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1130.70" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (813,930 samples, 0.01%)</title><rect x="1054.0" y="53" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1057.03" y="63.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (15,270,879 samples, 0.18%)</title><rect x="974.0" y="341" width="2.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="977.05" y="351.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (13,940,104 samples, 0.17%)</title><rect x="689.4" y="469" width="1.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="692.37" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,946,233 samples, 0.08%)</title><rect x="1138.9" y="357" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1141.95" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,739,636 samples, 0.07%)</title><rect x="694.0" y="469" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="697.03" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,711,992 samples, 0.02%)</title><rect x="593.0" y="501" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="596.03" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,416,151 samples, 0.06%)</title><rect x="1159.3" y="341" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1162.31" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,671,139 samples, 0.03%)</title><rect x="1135.8" y="293" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1138.83" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,040,787 samples, 0.01%)</title><rect x="593.0" y="437" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="596.03" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (32,229,430 samples, 0.38%)</title><rect x="1109.0" y="229" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1111.95" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,256,439 samples, 0.34%)</title><rect x="589.3" y="549" width="4.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="592.30" y="559.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (52,585,319 samples, 0.63%)</title><rect x="869.3" y="485" width="7.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="872.28" y="495.5" ></text>
</g>
<g >
<title>cfree (15,430,145 samples, 0.18%)</title><rect x="935.7" y="261" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="938.69" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,905,231 samples, 0.03%)</title><rect x="853.1" y="485" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="856.09" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (4,037,505 samples, 0.05%)</title><rect x="1008.9" y="325" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1011.90" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,673,982 samples, 0.03%)</title><rect x="1147.8" y="197" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1150.83" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,687,055 samples, 0.03%)</title><rect x="1066.9" y="101" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1069.87" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,673,982 samples, 0.03%)</title><rect x="1147.8" y="101" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1150.83" y="111.5" ></text>
</g>
<g >
<title>operator new (1,590,118 samples, 0.02%)</title><rect x="1135.6" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.59" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (12,192,623 samples, 0.15%)</title><rect x="847.5" y="453" width="1.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="850.48" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (8,925,340 samples, 0.11%)</title><rect x="700.4" y="501" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="703.36" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,137,478 samples, 0.03%)</title><rect x="589.0" y="549" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="592.00" y="559.5" ></text>
</g>
<g >
<title>operator new (2,387,178 samples, 0.03%)</title><rect x="1118.3" y="245" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1121.28" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,355,025 samples, 0.02%)</title><rect x="1189.7" y="437" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1192.74" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (1,659,203 samples, 0.02%)</title><rect x="1168.5" y="533" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1171.46" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,913,728 samples, 0.03%)</title><rect x="1127.0" y="117" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1130.03" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (808,957 samples, 0.01%)</title><rect x="1128.0" y="197" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1131.04" y="207.5" ></text>
</g>
<g >
<title>update_process_times (928,305 samples, 0.01%)</title><rect x="1113.5" y="117" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1116.51" y="127.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (820,306 samples, 0.01%)</title><rect x="1057.7" y="85" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1060.71" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,490,109 samples, 0.02%)</title><rect x="1157.4" y="277" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1160.41" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,624,412 samples, 0.02%)</title><rect x="701.4" y="453" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="704.39" y="463.5" ></text>
</g>
<g >
<title>cfree (4,917,904 samples, 0.06%)</title><rect x="988.8" y="229" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="991.75" y="239.5" ></text>
</g>
<g >
<title>cfree (5,161,825 samples, 0.06%)</title><rect x="1062.1" y="165" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1065.08" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,717,446 samples, 0.02%)</title><rect x="1161.8" y="293" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1164.83" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,319,343 samples, 0.06%)</title><rect x="587.0" y="373" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="589.99" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (10,993,119 samples, 0.13%)</title><rect x="77.6" y="501" width="1.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="80.64" y="511.5" ></text>
</g>
<g >
<title>malloc (3,355,149 samples, 0.04%)</title><rect x="933.6" y="245" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="936.58" y="255.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (15,270,879 samples, 0.18%)</title><rect x="974.0" y="325" width="2.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="977.05" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (11,795,146 samples, 0.14%)</title><rect x="1141.5" y="293" width="1.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1144.52" y="303.5" ></text>
</g>
<g >
<title>malloc (8,362,307 samples, 0.10%)</title><rect x="1014.0" y="309" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1016.96" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (11,005,122 samples, 0.13%)</title><rect x="1166.6" y="549" width="1.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1169.59" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (49,172,359 samples, 0.58%)</title><rect x="1060.7" y="245" width="6.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1063.68" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (50,046,568 samples, 0.60%)</title><rect x="927.8" y="309" width="7.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="930.82" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,648,095 samples, 0.04%)</title><rect x="739.7" y="437" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="742.74" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,335,087 samples, 0.02%)</title><rect x="1161.5" y="389" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1164.49" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,769,921 samples, 0.02%)</title><rect x="84.0" y="469" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="87.02" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,199,773 samples, 0.01%)</title><rect x="927.5" y="341" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="930.54" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,301,332 samples, 0.02%)</title><rect x="1099.5" y="149" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1102.48" y="159.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (11,221,135 samples, 0.13%)</title><rect x="916.5" y="453" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="919.53" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (6,612,254 samples, 0.08%)</title><rect x="432.0" y="469" width="0.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="434.98" y="479.5" ></text>
</g>
<g >
<title>decltype  (6,464,632 samples, 0.08%)</title><rect x="588.0" y="437" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="590.98" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (4,337,796 samples, 0.05%)</title><rect x="81.8" y="485" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="84.83" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,376,732 samples, 0.06%)</title><rect x="1157.9" y="245" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.94" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,236,972 samples, 0.04%)</title><rect x="742.4" y="437" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="745.38" y="447.5" ></text>
</g>
<g >
<title>cfree (184,417,651 samples, 2.19%)</title><rect x="36.6" y="533" width="25.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="39.57" y="543.5" >c..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (828,637 samples, 0.01%)</title><rect x="994.4" y="149" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="997.36" y="159.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,997,370 samples, 0.04%)</title><rect x="78.8" y="469" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="81.77" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (812,816 samples, 0.01%)</title><rect x="1155.0" y="341" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1158.05" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,900,130 samples, 0.05%)</title><rect x="706.3" y="421" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="709.30" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,910,939 samples, 0.03%)</title><rect x="699.6" y="517" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="702.58" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,361,342 samples, 0.02%)</title><rect x="1151.5" y="133" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1154.47" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,913,728 samples, 0.03%)</title><rect x="1127.0" y="165" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1130.03" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,751,044 samples, 0.02%)</title><rect x="1054.0" y="101" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1056.96" y="111.5" ></text>
</g>
<g >
<title>roundf32x (8,173,395 samples, 0.10%)</title><rect x="174.1" y="533" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="177.11" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,387,791 samples, 0.09%)</title><rect x="76.6" y="453" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="79.61" y="463.5" ></text>
</g>
<g >
<title>is_close_int (1,729,499 samples, 0.02%)</title><rect x="1136.7" y="389" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1139.73" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (813,388 samples, 0.01%)</title><rect x="588.9" y="469" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="591.89" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,227,422 samples, 0.03%)</title><rect x="1099.4" y="197" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1102.44" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (895,875 samples, 0.01%)</title><rect x="1130.5" y="373" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1133.50" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,057,523 samples, 0.01%)</title><rect x="985.1" y="245" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="988.14" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (960,805 samples, 0.01%)</title><rect x="1053.8" y="133" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1056.75" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (954,767 samples, 0.01%)</title><rect x="527.9" y="405" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="530.89" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (6,924,752 samples, 0.08%)</title><rect x="697.1" y="437" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="700.09" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (148,927,103 samples, 1.77%)</title><rect x="1039.4" y="229" width="20.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1042.38" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (70,952,869 samples, 0.84%)</title><rect x="908.1" y="517" width="10.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="911.15" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (161,903,029 samples, 1.93%)</title><rect x="976.2" y="389" width="22.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="979.19" y="399.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (22,900,928 samples, 0.27%)</title><rect x="934.8" y="309" width="3.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="937.85" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,417,014 samples, 0.08%)</title><rect x="1144.9" y="213" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.93" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,754,399 samples, 0.04%)</title><rect x="1066.7" y="133" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1069.72" y="143.5" ></text>
</g>
<g >
<title>malloc (13,743,152 samples, 0.16%)</title><rect x="1102.1" y="261" width="2.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1105.14" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (90,749,695 samples, 1.08%)</title><rect x="985.5" y="325" width="12.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="988.46" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (1,036,866 samples, 0.01%)</title><rect x="926.9" y="309" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="929.86" y="319.5" ></text>
</g>
<g >
<title>operator delete (2,683,721 samples, 0.03%)</title><rect x="1054.4" y="165" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1057.38" y="175.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,538,639 samples, 0.03%)</title><rect x="414.2" y="469" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="417.21" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,208,155 samples, 0.18%)</title><rect x="1058.2" y="181" width="2.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1061.15" y="191.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,829,915 samples, 0.07%)</title><rect x="1002.8" y="245" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1005.78" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,671,139 samples, 0.03%)</title><rect x="1135.8" y="309" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1138.83" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,435,305 samples, 0.03%)</title><rect x="1008.3" y="309" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1011.33" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (17,709,398 samples, 0.21%)</title><rect x="995.6" y="197" width="2.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="998.62" y="207.5" ></text>
</g>
<g >
<title>decltype  (1,231,262 samples, 0.01%)</title><rect x="83.5" y="469" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.45" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,439,006 samples, 0.02%)</title><rect x="1099.5" y="165" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1102.46" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,333,388 samples, 0.02%)</title><rect x="998.7" y="357" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1001.73" y="367.5" ></text>
</g>
<g >
<title>operator new (1,200,755 samples, 0.01%)</title><rect x="977.5" y="357" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="980.50" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (793,205 samples, 0.01%)</title><rect x="1092.4" y="293" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1095.35" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,040,787 samples, 0.01%)</title><rect x="593.0" y="453" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="596.03" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,361,342 samples, 0.02%)</title><rect x="1151.5" y="149" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1154.47" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,914,460 samples, 0.11%)</title><rect x="999.6" y="325" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1002.58" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (110,483,016 samples, 1.31%)</title><rect x="399.1" y="517" width="15.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="402.06" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,231,262 samples, 0.01%)</title><rect x="83.5" y="485" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="86.45" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,662,448 samples, 0.03%)</title><rect x="1128.7" y="325" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1131.71" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (813,388 samples, 0.01%)</title><rect x="588.9" y="501" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="591.89" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,200,026 samples, 0.04%)</title><rect x="993.9" y="149" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="996.91" y="159.5" ></text>
</g>
<g >
<title>do_exit (738,795 samples, 0.01%)</title><rect x="1168.2" y="485" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1171.15" y="495.5" ></text>
</g>
<g >
<title>operator new (1,738,617 samples, 0.02%)</title><rect x="955.0" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="957.99" y="399.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (1,862,851 samples, 0.02%)</title><rect x="568.1" y="517" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="571.07" y="527.5" ></text>
</g>
<g >
<title>malloc (5,627,061 samples, 0.07%)</title><rect x="1132.8" y="293" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1135.80" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (95,222,995 samples, 1.13%)</title><rect x="1107.1" y="277" width="13.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1110.10" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (4,932,034 samples, 0.06%)</title><rect x="953.9" y="373" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="956.89" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,016,157 samples, 0.02%)</title><rect x="1013.4" y="277" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1016.38" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (13,544,343 samples, 0.16%)</title><rect x="1138.2" y="405" width="1.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1141.15" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (14,998,979 samples, 0.18%)</title><rect x="79.2" y="517" width="2.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="82.19" y="527.5" ></text>
</g>
<g >
<title>cfree (1,608,542 samples, 0.02%)</title><rect x="931.4" y="245" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="934.39" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,211,888 samples, 0.01%)</title><rect x="587.7" y="389" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="590.74" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (3,580,307 samples, 0.04%)</title><rect x="91.6" y="501" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="94.58" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (821,054 samples, 0.01%)</title><rect x="585.3" y="373" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="588.31" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,452,954 samples, 0.04%)</title><rect x="587.0" y="277" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="589.99" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,086,852 samples, 0.01%)</title><rect x="1134.1" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1137.12" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (19,192,279 samples, 0.23%)</title><rect x="430.6" y="517" width="2.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="433.57" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (804,014 samples, 0.01%)</title><rect x="84.7" y="453" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="87.70" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,910,939 samples, 0.03%)</title><rect x="699.6" y="501" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="702.58" y="511.5" ></text>
</g>
<g >
<title>roundf32x (1,971,423 samples, 0.02%)</title><rect x="1181.6" y="549" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.55" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,732,126 samples, 0.02%)</title><rect x="868.6" y="517" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="871.64" y="527.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (2,664,110 samples, 0.03%)</title><rect x="742.0" y="453" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="745.00" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (19,629,331 samples, 0.23%)</title><rect x="392.8" y="501" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="395.77" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,333,855 samples, 0.02%)</title><rect x="1113.5" y="165" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1116.48" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (942,056 samples, 0.01%)</title><rect x="1183.8" y="533" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1186.83" y="543.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,949,407 samples, 0.04%)</title><rect x="709.0" y="421" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="712.00" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__strip_reference_wrapper&lt;std::decay&lt;int const&amp;&gt;::type&gt;::__type, std::__strip_reference_wrapper&lt;std::decay&lt;int&amp;&gt;::type&gt;::__type&gt; std::make_pair&lt;int const&amp;, int&amp;&gt; (1,058,571 samples, 0.01%)</title><rect x="737.3" y="517" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="740.35" y="527.5" ></text>
</g>
<g >
<title>operator new (1,765,140 samples, 0.02%)</title><rect x="937.6" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="940.57" y="255.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,195,186 samples, 0.01%)</title><rect x="1161.5" y="341" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1164.51" y="351.5" ></text>
</g>
<g >
<title>cfree (15,518,384 samples, 0.18%)</title><rect x="1043.8" y="181" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1046.80" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,228,531 samples, 0.05%)</title><rect x="1159.4" y="293" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1162.37" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,605,709 samples, 0.03%)</title><rect x="1099.4" y="229" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1102.39" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (1,080,659 samples, 0.01%)</title><rect x="434.3" y="517" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="437.34" y="527.5" ></text>
</g>
<g >
<title>do_group_exit (738,795 samples, 0.01%)</title><rect x="1168.2" y="501" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1171.15" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (792,508 samples, 0.01%)</title><rect x="92.7" y="453" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="95.71" y="463.5" ></text>
</g>
<g >
<title>operator new (3,898,198 samples, 0.05%)</title><rect x="659.8" y="517" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="662.82" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,877,805 samples, 0.02%)</title><rect x="181.3" y="453" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="184.34" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (808,957 samples, 0.01%)</title><rect x="1128.0" y="165" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1131.04" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (44,707,877 samples, 0.53%)</title><rect x="703.2" y="517" width="6.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="706.19" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,077,278 samples, 0.01%)</title><rect x="740.5" y="421" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="743.46" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,077,278 samples, 0.01%)</title><rect x="740.5" y="437" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="743.46" y="447.5" ></text>
</g>
<g >
<title>is_close_int (40,804,145 samples, 0.49%)</title><rect x="731.4" y="517" width="5.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="734.41" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,080,224 samples, 0.06%)</title><rect x="390.5" y="517" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="393.48" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,648,095 samples, 0.04%)</title><rect x="739.7" y="421" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="742.74" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (95,222,995 samples, 1.13%)</title><rect x="1107.1" y="325" width="13.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.10" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,184,471 samples, 0.05%)</title><rect x="1057.1" y="69" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1060.13" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (3,483,853 samples, 0.04%)</title><rect x="84.4" y="469" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="87.44" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,028,663 samples, 0.05%)</title><rect x="993.9" y="181" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="996.91" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,505,322 samples, 0.03%)</title><rect x="1115.3" y="117" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1118.34" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (4,182,833 samples, 0.05%)</title><rect x="1085.7" y="261" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1088.69" y="271.5" ></text>
</g>
<g >
<title>operator new (2,004,188 samples, 0.02%)</title><rect x="1147.9" y="85" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1150.92" y="95.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,016,157 samples, 0.02%)</title><rect x="1013.4" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1016.38" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,769,952 samples, 0.06%)</title><rect x="1135.2" y="341" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1138.17" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (151,207,477 samples, 1.80%)</title><rect x="1016.0" y="293" width="21.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1019.01" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,195,186 samples, 0.01%)</title><rect x="1161.5" y="357" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1164.51" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,905,229 samples, 0.02%)</title><rect x="1142.9" y="181" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1145.91" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,962,472 samples, 0.14%)</title><rect x="1155.9" y="293" width="1.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1158.94" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (813,388 samples, 0.01%)</title><rect x="588.9" y="421" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="591.89" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (11,608,134 samples, 0.14%)</title><rect x="876.7" y="533" width="1.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="879.66" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,694,388 samples, 0.06%)</title><rect x="1008.2" y="325" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1011.20" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,144,881 samples, 0.03%)</title><rect x="1154.4" y="357" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1157.41" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (13,229,754 samples, 0.16%)</title><rect x="1058.4" y="101" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1061.41" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,253,027 samples, 0.04%)</title><rect x="187.3" y="517" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="190.29" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (9,271,500 samples, 0.11%)</title><rect x="979.8" y="341" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="982.77" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,271,147 samples, 0.03%)</title><rect x="1106.3" y="213" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1109.26" y="223.5" ></text>
</g>
<g >
<title>operator delete (1,737,750 samples, 0.02%)</title><rect x="1125.9" y="229" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1128.87" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (790,753 samples, 0.01%)</title><rect x="1123.3" y="213" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1126.27" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,104,572 samples, 0.11%)</title><rect x="1105.3" y="261" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1108.30" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (954,767 samples, 0.01%)</title><rect x="527.9" y="453" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="530.89" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,323,790 samples, 0.05%)</title><rect x="1127.7" y="245" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1130.70" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,005,091 samples, 0.02%)</title><rect x="181.9" y="485" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="184.92" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (90,073,284 samples, 1.07%)</title><rect x="985.5" y="293" width="12.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="988.46" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (13,895,447 samples, 0.17%)</title><rect x="512.9" y="453" width="2.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="515.93" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,210,411 samples, 0.01%)</title><rect x="991.4" y="213" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="994.41" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,759,028 samples, 0.02%)</title><rect x="1162.6" y="261" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1165.56" y="271.5" ></text>
</g>
<g >
<title>operator new (2,955,462 samples, 0.04%)</title><rect x="1133.7" y="293" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1136.71" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (913,033 samples, 0.01%)</title><rect x="1067.4" y="149" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1070.42" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,300,108 samples, 0.04%)</title><rect x="1151.7" y="197" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1154.66" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,264,178 samples, 0.03%)</title><rect x="744.7" y="517" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="747.71" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,639,344 samples, 0.06%)</title><rect x="1137.1" y="341" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1140.09" y="351.5" ></text>
</g>
<g >
<title>decltype  (2,538,639 samples, 0.03%)</title><rect x="414.2" y="453" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="417.21" y="463.5" ></text>
</g>
<g >
<title>main (1,751,628,296 samples, 20.83%)</title><rect x="918.1" y="501" width="245.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="921.14" y="511.5" >main</text>
</g>
<g >
<title>scheduler_tick (794,468 samples, 0.01%)</title><rect x="947.8" y="213" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="950.78" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,187,706 samples, 0.01%)</title><rect x="998.2" y="341" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1001.20" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (412,406,864 samples, 4.91%)</title><rect x="1010.3" y="325" width="57.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1013.27" y="335.5" >std::_..</text>
</g>
<g >
<title>operator delete (2,541,222 samples, 0.03%)</title><rect x="1028.3" y="181" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1031.29" y="191.5" ></text>
</g>
<g >
<title>malloc (1,085,904 samples, 0.01%)</title><rect x="996.0" y="117" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="998.97" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (125,659,369 samples, 1.49%)</title><rect x="981.1" y="357" width="17.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="984.09" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (10,993,119 samples, 0.13%)</title><rect x="77.6" y="517" width="1.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="80.64" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,505,322 samples, 0.03%)</title><rect x="1115.3" y="213" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1118.34" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,833,448 samples, 0.02%)</title><rect x="1163.0" y="341" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1166.02" y="351.5" ></text>
</g>
<g >
<title>cfree (7,193,817 samples, 0.09%)</title><rect x="1157.8" y="261" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1160.76" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (158,589,368 samples, 1.89%)</title><rect x="669.1" y="517" width="22.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="672.06" y="527.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (26,785,266 samples, 0.32%)</title><rect x="1131.3" y="309" width="3.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1134.31" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (1,751,238,098 samples, 20.83%)</title><rect x="918.1" y="469" width="245.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="921.14" y="479.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,666,047 samples, 0.07%)</title><rect x="1127.6" y="309" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1130.55" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,344,425 samples, 0.02%)</title><rect x="1054.0" y="85" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1056.96" y="95.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (10,308,090 samples, 0.12%)</title><rect x="1004.8" y="277" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1007.78" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,724,781 samples, 0.04%)</title><rect x="1127.0" y="197" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1130.03" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (1,068,471 samples, 0.01%)</title><rect x="984.4" y="341" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="987.37" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (42,359,929 samples, 0.50%)</title><rect x="219.4" y="485" width="6.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="222.42" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,468,146 samples, 0.07%)</title><rect x="394.8" y="453" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="397.76" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,456,376 samples, 0.02%)</title><rect x="1120.9" y="229" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1123.90" y="239.5" ></text>
</g>
<g >
<title>roundf32x (4,263,337 samples, 0.05%)</title><rect x="504.8" y="533" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="507.77" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,588,559 samples, 0.02%)</title><rect x="82.2" y="469" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="85.22" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,995,868 samples, 0.17%)</title><rect x="992.5" y="229" width="2.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="995.51" y="239.5" ></text>
</g>
<g >
<title>malloc (15,470,255 samples, 0.18%)</title><rect x="1115.8" y="245" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1118.75" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (37,440,233 samples, 0.45%)</title><rect x="383.6" y="485" width="5.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="386.64" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,913,728 samples, 0.03%)</title><rect x="1127.0" y="149" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1130.03" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,034,475 samples, 0.04%)</title><rect x="178.5" y="485" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="181.55" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (819,945 samples, 0.01%)</title><rect x="1099.8" y="181" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1102.77" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,805,537 samples, 0.03%)</title><rect x="952.7" y="293" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="955.67" y="303.5" ></text>
</g>
<g >
<title>operator new (30,902,058 samples, 0.37%)</title><rect x="1177.2" y="549" width="4.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1180.18" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (7,671,739 samples, 0.09%)</title><rect x="843.3" y="517" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="846.33" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (913,033 samples, 0.01%)</title><rect x="1067.4" y="53" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1070.42" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,505,322 samples, 0.03%)</title><rect x="1115.3" y="197" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1118.34" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (25,057,488 samples, 0.30%)</title><rect x="691.3" y="517" width="3.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="694.32" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (2,347,028 samples, 0.03%)</title><rect x="79.8" y="437" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="82.81" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,166,424 samples, 0.04%)</title><rect x="1119.8" y="149" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1122.85" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,631,224 samples, 0.02%)</title><rect x="84.0" y="421" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="87.04" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,490,276 samples, 0.10%)</title><rect x="78.0" y="485" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="81.00" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (819,945 samples, 0.01%)</title><rect x="1099.8" y="165" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1102.77" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (24,143,916 samples, 0.29%)</title><rect x="977.7" y="357" width="3.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="980.68" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (941,498 samples, 0.01%)</title><rect x="1152.2" y="357" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1155.18" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (4,296,764 samples, 0.05%)</title><rect x="80.1" y="437" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="83.14" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,228,531 samples, 0.05%)</title><rect x="1159.4" y="277" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1162.37" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,962,472 samples, 0.14%)</title><rect x="1155.9" y="309" width="1.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1158.94" y="319.5" ></text>
</g>
<g >
<title>gen_all_points (2,447,752 samples, 0.03%)</title><rect x="1168.4" y="549" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1171.35" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (26,785,266 samples, 0.32%)</title><rect x="1131.3" y="341" width="3.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1134.31" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (10,308,090 samples, 0.12%)</title><rect x="1004.8" y="293" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1007.78" y="303.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,282,497 samples, 0.03%)</title><rect x="568.3" y="517" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="571.34" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (7,377,078 samples, 0.09%)</title><rect x="1004.8" y="213" width="1.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1007.84" y="223.5" ></text>
</g>
<g >
<title>cfree (5,409,348 samples, 0.06%)</title><rect x="931.2" y="261" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="934.19" y="271.5" ></text>
</g>
<g >
<title>cfree (4,435,079 samples, 0.05%)</title><rect x="1011.6" y="309" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1014.58" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,154,430 samples, 0.03%)</title><rect x="1151.1" y="181" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1154.13" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (17,189,249 samples, 0.20%)</title><rect x="995.6" y="149" width="2.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="998.62" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (5,375,660 samples, 0.06%)</title><rect x="1160.4" y="389" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1163.41" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (13,895,447 samples, 0.17%)</title><rect x="512.9" y="469" width="2.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="515.93" y="479.5" ></text>
</g>
<g >
<title>operator new (1,094,870 samples, 0.01%)</title><rect x="1143.0" y="133" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1146.02" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,197,302 samples, 0.01%)</title><rect x="985.1" y="293" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="988.14" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (813,388 samples, 0.01%)</title><rect x="588.9" y="453" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="591.89" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,833,448 samples, 0.02%)</title><rect x="1163.0" y="325" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1166.02" y="335.5" ></text>
</g>
<g >
<title>operator new (3,852,204 samples, 0.05%)</title><rect x="994.9" y="229" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="997.95" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,361,342 samples, 0.02%)</title><rect x="1151.5" y="101" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1154.47" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (802,547 samples, 0.01%)</title><rect x="1151.3" y="149" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1154.32" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,086,852 samples, 0.01%)</title><rect x="1134.1" y="229" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1137.12" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (29,102,452 samples, 0.35%)</title><rect x="1033.1" y="197" width="4.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1036.07" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,509,266 samples, 0.02%)</title><rect x="1113.5" y="229" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1116.47" y="239.5" ></text>
</g>
<g >
<title>cfree (25,542,981 samples, 0.30%)</title><rect x="1121.1" y="229" width="3.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1124.10" y="239.5" ></text>
</g>
<g >
<title>malloc (1,434,957 samples, 0.02%)</title><rect x="1034.1" y="69" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1037.14" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (4,788,113 samples, 0.06%)</title><rect x="1183.3" y="549" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1186.29" y="559.5" ></text>
</g>
<g >
<title>cfree (2,256,281 samples, 0.03%)</title><rect x="1135.9" y="277" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1138.89" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,905,229 samples, 0.02%)</title><rect x="1142.9" y="197" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1145.91" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (6,994,002 samples, 0.08%)</title><rect x="408.2" y="469" width="1.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="411.24" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (12,761,176 samples, 0.15%)</title><rect x="1002.0" y="293" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1005.02" y="303.5" ></text>
</g>
<g >
<title>operator new (5,411,647 samples, 0.06%)</title><rect x="1005.0" y="197" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1008.04" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,324,204 samples, 0.02%)</title><rect x="973.9" y="245" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="976.86" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (11,637,233 samples, 0.14%)</title><rect x="743.1" y="469" width="1.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="746.08" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,673,982 samples, 0.03%)</title><rect x="1147.8" y="133" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1150.83" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,620,896 samples, 0.02%)</title><rect x="1003.8" y="293" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1006.81" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,631,645 samples, 0.02%)</title><rect x="976.7" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="979.70" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,363,927 samples, 0.02%)</title><rect x="1163.3" y="293" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1166.27" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,278,544 samples, 0.03%)</title><rect x="1162.2" y="325" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1165.20" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (3,991,799 samples, 0.05%)</title><rect x="1068.3" y="325" width="0.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1071.30" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (23,334,755 samples, 0.28%)</title><rect x="855.7" y="517" width="3.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="858.75" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (8,007,352 samples, 0.10%)</title><rect x="962.2" y="341" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="965.22" y="351.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,741,471 samples, 0.02%)</title><rect x="742.8" y="469" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="745.83" y="479.5" ></text>
</g>
<g >
<title>malloc (195,915,422 samples, 2.33%)</title><rect x="93.3" y="533" width="27.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="96.34" y="543.5" >m..</text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,476,306 samples, 0.02%)</title><rect x="1003.6" y="277" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1006.60" y="287.5" ></text>
</g>
<g >
<title>operator new (12,779,727 samples, 0.15%)</title><rect x="996.1" y="117" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="999.12" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,209,414 samples, 0.01%)</title><rect x="1167.9" y="485" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1170.89" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (4,182,833 samples, 0.05%)</title><rect x="1085.7" y="277" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1088.69" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,347,451 samples, 0.02%)</title><rect x="1167.9" y="517" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1170.89" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (5,390,258 samples, 0.06%)</title><rect x="1162.1" y="405" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1165.09" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (916,144 samples, 0.01%)</title><rect x="1140.1" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.15" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (58,472,200 samples, 0.70%)</title><rect x="580.7" y="517" width="8.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="583.68" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (5,918,253 samples, 0.07%)</title><rect x="704.3" y="485" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="707.30" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (14,454,130 samples, 0.17%)</title><rect x="924.4" y="357" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="927.39" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,211,888 samples, 0.01%)</title><rect x="587.7" y="341" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="590.74" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (3,199,126 samples, 0.04%)</title><rect x="926.7" y="373" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="929.71" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (816,914 samples, 0.01%)</title><rect x="1002.7" y="261" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1005.67" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (928,305 samples, 0.01%)</title><rect x="1113.5" y="133" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1116.51" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (815,920 samples, 0.01%)</title><rect x="927.0" y="341" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="930.05" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (4,753,963 samples, 0.06%)</title><rect x="1155.2" y="373" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1158.16" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (76,663,021 samples, 0.91%)</title><rect x="927.4" y="357" width="10.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="930.43" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,073,966 samples, 0.01%)</title><rect x="1028.1" y="117" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1031.14" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,335,087 samples, 0.02%)</title><rect x="1161.5" y="405" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1164.49" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,505,322 samples, 0.03%)</title><rect x="1115.3" y="149" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1118.34" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,925,034 samples, 0.03%)</title><rect x="1161.7" y="421" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1164.68" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,881,357 samples, 0.09%)</title><rect x="1081.0" y="293" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1084.02" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (95,222,995 samples, 1.13%)</title><rect x="1107.1" y="261" width="13.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1110.10" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (13,178,495 samples, 0.16%)</title><rect x="946.1" y="357" width="1.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="949.06" y="367.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (3,888,125 samples, 0.05%)</title><rect x="1091.2" y="309" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1094.20" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (5,835,771 samples, 0.07%)</title><rect x="1137.1" y="373" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1140.07" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (153,587,060 samples, 1.83%)</title><rect x="1015.7" y="309" width="21.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1018.67" y="319.5" >s..</text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,605,529 samples, 0.03%)</title><rect x="998.4" y="325" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1001.36" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,159,767 samples, 0.01%)</title><rect x="548.2" y="517" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="551.21" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,620,896 samples, 0.02%)</title><rect x="1003.8" y="309" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1006.81" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,300,108 samples, 0.04%)</title><rect x="1151.7" y="245" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1154.66" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (41,238,525 samples, 0.49%)</title><rect x="184.5" y="533" width="5.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="187.48" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (808,957 samples, 0.01%)</title><rect x="1128.0" y="117" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1131.04" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (16,356,379 samples, 0.19%)</title><rect x="83.1" y="517" width="2.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="86.06" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (49,172,359 samples, 0.58%)</title><rect x="1060.7" y="277" width="6.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1063.68" y="287.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,735,503 samples, 0.02%)</title><rect x="877.8" y="501" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="880.75" y="511.5" ></text>
</g>
<g >
<title>operator delete (794,691 samples, 0.01%)</title><rect x="1133.6" y="293" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1136.59" y="303.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (2,365,374 samples, 0.03%)</title><rect x="1183.5" y="533" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1186.50" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (10,506,296 samples, 0.12%)</title><rect x="385.6" y="437" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="388.59" y="447.5" ></text>
</g>
<g >
<title>operator new (2,925,597 samples, 0.03%)</title><rect x="1062.3" y="149" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1065.34" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (801,670 samples, 0.01%)</title><rect x="1161.2" y="389" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1164.16" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (7,051,115 samples, 0.08%)</title><rect x="410.6" y="453" width="0.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="413.55" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (160,530,585 samples, 1.91%)</title><rect x="838.0" y="533" width="22.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="840.99" y="543.5" >s..</text>
</g>
<g >
<title>local_Rb_tree_rotate_right (918,892 samples, 0.01%)</title><rect x="985.3" y="325" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="988.33" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (33,505,202 samples, 0.40%)</title><rect x="370.8" y="469" width="4.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="373.76" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (1,565,101 samples, 0.02%)</title><rect x="191.4" y="517" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="194.39" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (813,388 samples, 0.01%)</title><rect x="588.9" y="485" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="591.89" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,028,868 samples, 0.02%)</title><rect x="78.4" y="405" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="81.42" y="415.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (1,896,150 samples, 0.02%)</title><rect x="427.1" y="517" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="430.13" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,166,424 samples, 0.04%)</title><rect x="1119.8" y="181" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1122.85" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (6,913,246 samples, 0.08%)</title><rect x="389.5" y="453" width="1.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="392.51" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (13,895,447 samples, 0.17%)</title><rect x="512.9" y="485" width="2.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="515.93" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (3,313,244 samples, 0.04%)</title><rect x="580.2" y="517" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="583.22" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (4,642,006 samples, 0.06%)</title><rect x="1068.2" y="341" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1071.21" y="351.5" ></text>
</g>
<g >
<title>operator new (810,896 samples, 0.01%)</title><rect x="1065.8" y="149" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1068.82" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,018,741 samples, 0.02%)</title><rect x="1053.9" y="149" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1056.92" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (54,552,489 samples, 0.65%)</title><rect x="1144.5" y="341" width="7.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1147.49" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,229,754 samples, 0.16%)</title><rect x="1058.4" y="165" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1061.41" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,780,713 samples, 0.06%)</title><rect x="1126.9" y="213" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1129.88" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,671,139 samples, 0.03%)</title><rect x="1135.8" y="325" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1138.83" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,769,952 samples, 0.06%)</title><rect x="1135.2" y="309" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1138.17" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (1,730,061,162 samples, 20.58%)</title><rect x="918.3" y="421" width="242.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="921.34" y="431.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (916,752 samples, 0.01%)</title><rect x="699.9" y="485" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="702.86" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,560,063 samples, 0.02%)</title><rect x="953.3" y="309" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="956.33" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,319,343 samples, 0.06%)</title><rect x="587.0" y="389" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="589.99" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (913,033 samples, 0.01%)</title><rect x="1067.4" y="133" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1070.42" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (5,900,482 samples, 0.07%)</title><rect x="978.9" y="341" width="0.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="981.94" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (808,335 samples, 0.01%)</title><rect x="1015.4" y="309" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1018.43" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (23,378,297 samples, 0.28%)</title><rect x="340.9" y="469" width="3.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="343.89" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (31,967,449 samples, 0.38%)</title><rect x="1155.9" y="373" width="4.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1158.87" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,946,308 samples, 0.04%)</title><rect x="1029.2" y="181" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1032.21" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,363,927 samples, 0.02%)</title><rect x="1163.3" y="309" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1166.27" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,673,982 samples, 0.03%)</title><rect x="1147.8" y="117" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1150.83" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,751,044 samples, 0.02%)</title><rect x="1054.0" y="117" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1056.96" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (57,258,964 samples, 0.68%)</title><rect x="1152.4" y="389" width="8.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1155.35" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,361,342 samples, 0.02%)</title><rect x="1151.5" y="117" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1154.47" y="127.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,028,868 samples, 0.02%)</title><rect x="78.4" y="389" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="81.42" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,440,719 samples, 0.06%)</title><rect x="866.5" y="517" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="869.50" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (895,875 samples, 0.01%)</title><rect x="1130.5" y="389" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1133.50" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,377,078 samples, 0.09%)</title><rect x="1004.8" y="245" width="1.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1007.84" y="255.5" ></text>
</g>
<g >
<title>update_process_times (924,295 samples, 0.01%)</title><rect x="947.8" y="229" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="950.78" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (3,199,126 samples, 0.04%)</title><rect x="926.7" y="357" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="929.71" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,631,224 samples, 0.02%)</title><rect x="84.0" y="437" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="87.04" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,355,025 samples, 0.02%)</title><rect x="1189.7" y="485" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1192.74" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,323,289 samples, 0.02%)</title><rect x="1055.1" y="165" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1058.15" y="175.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (34,636,655 samples, 0.41%)</title><rect x="1076.2" y="261" width="4.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1079.16" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (954,767 samples, 0.01%)</title><rect x="527.9" y="437" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="530.89" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (808,957 samples, 0.01%)</title><rect x="1128.0" y="133" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1131.04" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,488,628 samples, 0.02%)</title><rect x="1053.7" y="149" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1056.68" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,355,025 samples, 0.02%)</title><rect x="1189.7" y="469" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.74" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (7,721,385 samples, 0.09%)</title><rect x="182.8" y="517" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="185.82" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (936,793 samples, 0.01%)</title><rect x="962.1" y="309" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="965.09" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,050,270 samples, 0.01%)</title><rect x="944.3" y="277" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="947.32" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,905,229 samples, 0.02%)</title><rect x="1142.9" y="213" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1145.91" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,709,157 samples, 0.06%)</title><rect x="180.0" y="501" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="183.00" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (15,270,879 samples, 0.18%)</title><rect x="974.0" y="357" width="2.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="977.05" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,448,134 samples, 0.06%)</title><rect x="1031.7" y="69" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1034.67" y="79.5" ></text>
</g>
<g >
<title>operator new (9,526,285 samples, 0.11%)</title><rect x="1044.5" y="165" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1047.55" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,448,134 samples, 0.06%)</title><rect x="1031.7" y="85" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1034.67" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (26,785,266 samples, 0.32%)</title><rect x="1131.3" y="325" width="3.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1134.31" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (47,442,506 samples, 0.56%)</title><rect x="911.4" y="501" width="6.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="914.45" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (781,594 samples, 0.01%)</title><rect x="1013.7" y="293" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1016.66" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (10,680,713 samples, 0.13%)</title><rect x="859.0" y="517" width="1.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="862.02" y="527.5" ></text>
</g>
<g >
<title>cfree (5,286,312 samples, 0.06%)</title><rect x="1000.8" y="325" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1003.85" y="335.5" ></text>
</g>
<g >
<title>is_close_int (19,909,188 samples, 0.24%)</title><rect x="427.7" y="517" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="430.71" y="527.5" ></text>
</g>
<g >
<title>malloc (1,163,555 samples, 0.01%)</title><rect x="1142.5" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1145.46" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,034,475 samples, 0.04%)</title><rect x="178.5" y="501" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="181.55" y="511.5" ></text>
</g>
<g >
<title>malloc (12,933,396 samples, 0.15%)</title><rect x="1006.3" y="325" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1009.27" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,319,343 samples, 0.06%)</title><rect x="587.0" y="325" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="589.99" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (8,650,800 samples, 0.10%)</title><rect x="389.3" y="485" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="392.27" y="495.5" ></text>
</g>
<g >
<title>round@plt (1,859,812 samples, 0.02%)</title><rect x="835.6" y="533" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="838.63" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,359,078 samples, 0.14%)</title><rect x="1157.7" y="277" width="1.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1160.72" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (2,300,319 samples, 0.03%)</title><rect x="392.4" y="517" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="395.45" y="527.5" ></text>
</g>
<g >
<title>choose_next_point (293,490,632 samples, 3.49%)</title><rect x="660.4" y="533" width="41.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="663.42" y="543.5" >cho..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,194,696 samples, 0.06%)</title><rect x="993.7" y="213" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="996.75" y="223.5" ></text>
</g>
<g >
<title>update_process_times (1,050,270 samples, 0.01%)</title><rect x="944.3" y="261" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="947.32" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,012,927 samples, 0.02%)</title><rect x="432.9" y="453" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="435.91" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (5,552,461 samples, 0.07%)</title><rect x="92.2" y="517" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="95.21" y="527.5" ></text>
</g>
<g >
<title>operator new (258,709,543 samples, 3.08%)</title><rect x="468.4" y="533" width="36.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="471.40" y="543.5" >ope..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (50,046,568 samples, 0.60%)</title><rect x="927.8" y="325" width="7.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="930.82" y="335.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (12,319,918 samples, 0.15%)</title><rect x="83.6" y="485" width="1.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="86.62" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,739,936 samples, 0.02%)</title><rect x="1013.4" y="261" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1016.42" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,211,888 samples, 0.01%)</title><rect x="587.7" y="293" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="590.74" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,296,295 samples, 0.03%)</title><rect x="1138.6" y="357" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1141.62" y="367.5" ></text>
</g>
<g >
<title>operator new (1,872,626 samples, 0.02%)</title><rect x="931.7" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="934.67" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (100,545,952 samples, 1.20%)</title><rect x="1092.5" y="309" width="14.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1095.46" y="319.5" ></text>
</g>
<g >
<title>cfree (1,737,775 samples, 0.02%)</title><rect x="587.5" y="277" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="590.48" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,058,790 samples, 0.01%)</title><rect x="973.9" y="229" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="976.86" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,070,613 samples, 0.04%)</title><rect x="592.8" y="517" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="595.84" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,487,111 samples, 0.02%)</title><rect x="1113.5" y="197" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1116.48" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,758,776 samples, 0.02%)</title><rect x="1189.7" y="517" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1192.74" y="527.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,803,410 samples, 0.03%)</title><rect x="1167.3" y="469" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1170.25" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (791,336 samples, 0.01%)</title><rect x="1161.8" y="277" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.83" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (4,320,334 samples, 0.05%)</title><rect x="741.4" y="453" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="744.40" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (492,382,379 samples, 5.86%)</title><rect x="999.0" y="357" width="69.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1002.04" y="367.5" >std::_R..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (5,374,713 samples, 0.06%)</title><rect x="1166.9" y="533" width="0.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1169.95" y="543.5" ></text>
</g>
<g >
<title>operator new (80,756,038 samples, 0.96%)</title><rect x="1021.5" y="197" width="11.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1024.47" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,236,423 samples, 0.06%)</title><rect x="851.1" y="485" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="854.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (2,284,295 samples, 0.03%)</title><rect x="670.7" y="485" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="673.73" y="495.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (4,761,813 samples, 0.06%)</title><rect x="201.2" y="517" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="204.24" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,965,908 samples, 0.02%)</title><rect x="1067.3" y="165" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1070.27" y="175.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (10,712,548 samples, 0.13%)</title><rect x="381.5" y="453" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="384.51" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,725,164 samples, 0.02%)</title><rect x="1154.5" y="325" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1157.47" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (23,371,830 samples, 0.28%)</title><rect x="949.4" y="325" width="3.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="952.35" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (940,497 samples, 0.01%)</title><rect x="1128.3" y="309" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1131.35" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1,295,927 samples, 0.02%)</title><rect x="1091.8" y="293" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1094.75" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (21,977,185 samples, 0.26%)</title><rect x="691.8" y="485" width="3.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="694.75" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,054,966 samples, 0.01%)</title><rect x="947.8" y="277" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="950.77" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (9,473,537 samples, 0.11%)</title><rect x="526.9" y="485" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="529.89" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (71,996,476 samples, 0.86%)</title><rect x="67.5" y="517" width="10.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="70.54" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (8,112,034 samples, 0.10%)</title><rect x="1031.7" y="149" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1034.67" y="159.5" ></text>
</g>
<g >
<title>malloc (1,361,749 samples, 0.02%)</title><rect x="1157.1" y="277" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1160.07" y="287.5" ></text>
</g>
<g >
<title>_start (1,751,755,075 samples, 20.84%)</title><rect x="918.1" y="549" width="245.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="921.12" y="559.5" >_start</text>
</g>
<g >
<title>update_process_times (813,930 samples, 0.01%)</title><rect x="1054.0" y="37" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1057.03" y="47.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (23,230,728 samples, 0.28%)</title><rect x="949.4" y="277" width="3.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="952.37" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (5,390,258 samples, 0.06%)</title><rect x="1162.1" y="389" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1165.09" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (808,957 samples, 0.01%)</title><rect x="1128.0" y="181" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1131.04" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,780,431 samples, 0.06%)</title><rect x="1134.4" y="293" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1137.40" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,147,182 samples, 0.03%)</title><rect x="706.9" y="469" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="709.85" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,264,178 samples, 0.03%)</title><rect x="744.7" y="501" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="747.71" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (498,335,516 samples, 5.93%)</title><rect x="998.9" y="389" width="70.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1001.92" y="399.5" >std::se..</text>
</g>
<g >
<title>malloc (2,554,381 samples, 0.03%)</title><rect x="1158.8" y="261" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1161.78" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,820,557 samples, 0.09%)</title><rect x="585.9" y="389" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="588.87" y="399.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,283,634 samples, 0.06%)</title><rect x="92.2" y="485" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="95.25" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (944,566 samples, 0.01%)</title><rect x="1099.8" y="245" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1102.75" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (297,631,574 samples, 3.54%)</title><rect x="329.0" y="485" width="41.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="331.99" y="495.5" >std..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,539,979 samples, 0.04%)</title><rect x="1067.7" y="181" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1070.66" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (822,146 samples, 0.01%)</title><rect x="1053.8" y="117" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1056.77" y="127.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,505,601 samples, 0.03%)</title><rect x="1087.9" y="341" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1090.87" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (6,242,010 samples, 0.07%)</title><rect x="562.8" y="533" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="565.82" y="543.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (1,088,402 samples, 0.01%)</title><rect x="91.0" y="517" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="93.98" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,932,438 samples, 0.03%)</title><rect x="1189.6" y="533" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1192.57" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,663,900 samples, 0.03%)</title><rect x="1032.4" y="101" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1035.43" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (4,296,764 samples, 0.05%)</title><rect x="80.1" y="453" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.14" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (11,637,233 samples, 0.14%)</title><rect x="743.1" y="517" width="1.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="746.08" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,684,907 samples, 0.08%)</title><rect x="853.5" y="501" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="856.50" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (21,712,491 samples, 0.26%)</title><rect x="1148.6" y="309" width="3.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1151.61" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,717,446 samples, 0.02%)</title><rect x="1161.8" y="357" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1164.83" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (944,435 samples, 0.01%)</title><rect x="68.2" y="485" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="71.19" y="495.5" ></text>
</g>
<g >
<title>cfree (1,454,528 samples, 0.02%)</title><rect x="1044.2" y="165" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1047.23" y="175.5" ></text>
</g>
<g >
<title>choose_next_point (1,749,501,459 samples, 20.81%)</title><rect x="918.2" y="437" width="245.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="921.19" y="447.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,271,147 samples, 0.03%)</title><rect x="1106.3" y="229" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1109.26" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,192,031 samples, 0.01%)</title><rect x="84.3" y="469" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="87.27" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (770,426 samples, 0.01%)</title><rect x="1068.9" y="389" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1071.86" y="399.5" ></text>
</g>
<g >
<title>malloc (14,912,886 samples, 0.18%)</title><rect x="1169.6" y="549" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1172.63" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (1,972,673 samples, 0.02%)</title><rect x="1087.3" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1090.34" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (5,442,719 samples, 0.06%)</title><rect x="1162.9" y="405" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1165.89" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (7,671,739 samples, 0.09%)</title><rect x="843.3" y="501" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="846.33" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (13,577,530 samples, 0.16%)</title><rect x="393.6" y="485" width="1.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="396.62" y="495.5" ></text>
</g>
<g >
<title>roundf32x (14,922,403 samples, 0.18%)</title><rect x="835.9" y="533" width="2.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="838.89" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,227,422 samples, 0.03%)</title><rect x="1099.4" y="181" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1102.44" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (1,888,118 samples, 0.02%)</title><rect x="391.9" y="485" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="394.89" y="495.5" ></text>
</g>
<g >
<title>cfree (15,166,156 samples, 0.18%)</title><rect x="1047.3" y="165" width="2.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1050.25" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,264,240 samples, 0.12%)</title><rect x="79.3" y="469" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="82.30" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (55,655,361 samples, 0.66%)</title><rect x="1060.3" y="293" width="7.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1063.34" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,905,229 samples, 0.02%)</title><rect x="1142.9" y="245" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1145.91" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,166,424 samples, 0.04%)</title><rect x="1119.8" y="133" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1122.85" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,047,554 samples, 0.01%)</title><rect x="1008.7" y="309" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1011.67" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,229,754 samples, 0.16%)</title><rect x="1058.4" y="85" width="1.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1061.41" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,197,302 samples, 0.01%)</title><rect x="985.1" y="309" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="988.14" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (11,238,186 samples, 0.13%)</title><rect x="924.7" y="341" width="1.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="927.69" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (916,752 samples, 0.01%)</title><rect x="699.9" y="469" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="702.86" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (62,724,713 samples, 0.75%)</title><rect x="1143.3" y="357" width="8.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1146.34" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (48,901,620 samples, 0.58%)</title><rect x="1060.7" y="213" width="6.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1063.68" y="223.5" ></text>
</g>
<g >
<title>cfree (2,148,727 samples, 0.03%)</title><rect x="590.7" y="533" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="593.72" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (100,545,952 samples, 1.20%)</title><rect x="1092.5" y="293" width="14.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1095.46" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (36,221,371 samples, 0.43%)</title><rect x="911.4" y="453" width="5.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="914.45" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,387,791 samples, 0.09%)</title><rect x="76.6" y="469" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="79.61" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (1,693,402 samples, 0.02%)</title><rect x="866.3" y="501" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="869.26" y="511.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,946,233 samples, 0.08%)</title><rect x="1138.9" y="325" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1141.95" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (100,545,952 samples, 1.20%)</title><rect x="1092.5" y="277" width="14.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1095.46" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (7,937,404 samples, 0.09%)</title><rect x="1153.2" y="325" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1156.23" y="335.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (38,254,284 samples, 0.46%)</title><rect x="737.7" y="485" width="5.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="740.71" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,877,805 samples, 0.02%)</title><rect x="181.3" y="469" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="184.34" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,666,267 samples, 0.09%)</title><rect x="380.2" y="389" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="383.19" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (31,786,311 samples, 0.38%)</title><rect x="219.4" y="421" width="4.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="222.42" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,081,640 samples, 0.01%)</title><rect x="1162.2" y="229" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.20" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (71,996,476 samples, 0.86%)</title><rect x="67.5" y="501" width="10.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="70.54" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,966,999 samples, 0.04%)</title><rect x="1124.3" y="197" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1127.27" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,631,224 samples, 0.02%)</title><rect x="84.0" y="453" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="87.04" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (90,073,284 samples, 1.07%)</title><rect x="985.5" y="261" width="12.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="988.46" y="271.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (820,306 samples, 0.01%)</title><rect x="1057.7" y="101" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1060.71" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,469,116 samples, 0.02%)</title><rect x="700.2" y="501" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="703.15" y="511.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (3,736,591 samples, 0.04%)</title><rect x="730.5" y="517" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="733.50" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (35,456,173 samples, 0.42%)</title><rect x="563.7" y="533" width="5.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="566.70" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,319,343 samples, 0.06%)</title><rect x="587.0" y="293" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="589.99" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,355,025 samples, 0.02%)</title><rect x="1189.7" y="453" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1192.74" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (930,457 samples, 0.01%)</title><rect x="979.6" y="325" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="982.62" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (7,671,739 samples, 0.09%)</title><rect x="843.3" y="453" width="1.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="846.33" y="463.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (30,929,869 samples, 0.37%)</title><rect x="705.1" y="485" width="4.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="708.13" y="495.5" ></text>
</g>
<g >
<title>[anon] (2,590,738,343 samples, 30.82%)</title><rect x="225.4" y="549" width="363.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="228.38" y="559.5" >[anon]</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (949,264 samples, 0.01%)</title><rect x="1087.2" y="309" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1090.20" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,608,309 samples, 0.02%)</title><rect x="706.9" y="421" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="709.93" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (67,966,604 samples, 0.81%)</title><rect x="1072.6" y="341" width="9.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1075.59" y="351.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (2,801,209 samples, 0.03%)</title><rect x="731.0" y="517" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="734.02" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (11,359,078 samples, 0.14%)</title><rect x="1157.7" y="325" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1160.72" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (944,566 samples, 0.01%)</title><rect x="1099.8" y="213" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1102.75" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (949,725 samples, 0.01%)</title><rect x="992.2" y="213" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="995.23" y="223.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (38,571,361 samples, 0.46%)</title><rect x="71.2" y="437" width="5.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="74.19" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (13,544,343 samples, 0.16%)</title><rect x="1138.2" y="389" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1141.15" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,077,278 samples, 0.01%)</title><rect x="740.5" y="453" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="743.46" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (23,230,728 samples, 0.28%)</title><rect x="949.4" y="309" width="3.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="952.37" y="319.5" ></text>
</g>
<g >
<title>operator new (208,705,660 samples, 2.48%)</title><rect x="806.3" y="533" width="29.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="809.34" y="543.5" >op..</text>
</g>
<g >
<title>std::pair&lt;int, int&gt;::pair&lt;int const&amp;, int&amp;&gt; (1,058,571 samples, 0.01%)</title><rect x="737.3" y="501" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="740.35" y="511.5" ></text>
</g>
<g >
<title>operator new (19,176,878 samples, 0.23%)</title><rect x="932.1" y="261" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="935.14" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (2,129,105 samples, 0.03%)</title><rect x="93.0" y="517" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="95.99" y="527.5" ></text>
</g>
<g >
<title>choose_next_point (19,613,078 samples, 0.23%)</title><rect x="1152.4" y="373" width="2.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1155.41" y="383.5" ></text>
</g>
<g >
<title>operator new (2,560,192 samples, 0.03%)</title><rect x="1104.5" y="261" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1107.48" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,673,982 samples, 0.03%)</title><rect x="1147.8" y="149" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1150.83" y="159.5" ></text>
</g>
<g >
<title>cfree (956,774 samples, 0.01%)</title><rect x="1163.3" y="277" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1166.29" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (24,400,205 samples, 0.29%)</title><rect x="1033.6" y="101" width="3.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1036.63" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (13,229,754 samples, 0.16%)</title><rect x="1058.4" y="133" width="1.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1061.41" y="143.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,787,699 samples, 0.06%)</title><rect x="1153.7" y="293" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1156.67" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (90,749,695 samples, 1.08%)</title><rect x="985.5" y="341" width="12.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="988.46" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (20,006,690 samples, 0.24%)</title><rect x="519.5" y="453" width="2.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="522.55" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (3,236,972 samples, 0.04%)</title><rect x="742.4" y="469" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="745.38" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,319,343 samples, 0.06%)</title><rect x="587.0" y="341" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="589.99" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (150,658,308 samples, 1.79%)</title><rect x="1016.0" y="229" width="21.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1019.01" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (150,658,308 samples, 1.79%)</title><rect x="1016.0" y="245" width="21.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1019.01" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (936,793 samples, 0.01%)</title><rect x="962.1" y="293" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="965.09" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (31,786,311 samples, 0.38%)</title><rect x="219.4" y="437" width="4.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="222.42" y="447.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,385,242 samples, 0.03%)</title><rect x="1183.0" y="501" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1185.96" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,687,055 samples, 0.03%)</title><rect x="1066.9" y="117" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1069.87" y="127.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (9,271,500 samples, 0.11%)</title><rect x="979.8" y="309" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="982.77" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,525,951 samples, 0.03%)</title><rect x="1135.2" y="277" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1138.17" y="287.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (791,786 samples, 0.01%)</title><rect x="84.8" y="453" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="87.82" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,887,083 samples, 0.02%)</title><rect x="978.6" y="341" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="981.60" y="351.5" ></text>
</g>
<g >
<title>attempt7_cpp (8,407,304,065 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >attempt7_cpp</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,539,979 samples, 0.04%)</title><rect x="1067.7" y="197" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1070.66" y="207.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,064,235 samples, 0.01%)</title><rect x="693.9" y="421" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="696.88" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (4,932,034 samples, 0.06%)</title><rect x="953.9" y="341" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="956.89" y="351.5" ></text>
</g>
<g >
<title>choose_next_point (1,225,871 samples, 0.01%)</title><rect x="585.3" y="405" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="588.31" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,224,895 samples, 0.01%)</title><rect x="1136.8" y="373" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.77" y="383.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (2,218,866 samples, 0.03%)</title><rect x="427.4" y="517" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="430.40" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (814,409 samples, 0.01%)</title><rect x="586.3" y="309" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="589.33" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (7,594,833 samples, 0.09%)</title><rect x="707.2" y="469" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="710.15" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (4,932,034 samples, 0.06%)</title><rect x="953.9" y="357" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="956.89" y="367.5" ></text>
</g>
<g >
<title>operator new (2,168,872 samples, 0.03%)</title><rect x="1028.6" y="181" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1031.65" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (808,957 samples, 0.01%)</title><rect x="1128.0" y="149" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1131.04" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (803,946 samples, 0.01%)</title><rect x="944.3" y="245" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="947.34" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (10,712,548 samples, 0.13%)</title><rect x="381.5" y="469" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="384.51" y="479.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (3,602,606 samples, 0.04%)</title><rect x="200.7" y="517" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="203.73" y="527.5" ></text>
</g>
<g >
<title>cfree (5,274,558 samples, 0.06%)</title><rect x="1063.2" y="149" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1066.20" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,624,412 samples, 0.02%)</title><rect x="701.4" y="469" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="704.39" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (2,817,233 samples, 0.03%)</title><rect x="551.0" y="517" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="553.95" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (4,944,704 samples, 0.06%)</title><rect x="696.4" y="437" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="699.39" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (20,072,493 samples, 0.24%)</title><rect x="695.2" y="485" width="2.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="698.24" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,072,493 samples, 0.24%)</title><rect x="695.2" y="469" width="2.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="698.24" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,285,463 samples, 0.03%)</title><rect x="1013.0" y="213" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1016.00" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (10,732,442 samples, 0.13%)</title><rect x="406.7" y="421" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="409.73" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (3,583,202 samples, 0.04%)</title><rect x="328.5" y="485" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="331.49" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,064,651 samples, 0.14%)</title><rect x="1141.5" y="341" width="1.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1144.52" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (31,786,311 samples, 0.38%)</title><rect x="219.4" y="469" width="4.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="222.42" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (8,981,846 samples, 0.11%)</title><rect x="525.6" y="453" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="528.62" y="463.5" ></text>
</g>
<g >
<title>get_inbetween_points (6,702,380 samples, 0.08%)</title><rect x="1168.7" y="549" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1171.69" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (805,574 samples, 0.01%)</title><rect x="955.3" y="373" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="958.27" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,192,031 samples, 0.01%)</title><rect x="84.3" y="421" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="87.27" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (148,927,103 samples, 1.77%)</title><rect x="1039.4" y="213" width="20.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1042.38" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (2,110,973 samples, 0.03%)</title><rect x="392.2" y="501" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="395.15" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (144,369,485 samples, 1.72%)</title><rect x="955.9" y="373" width="20.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="958.93" y="383.5" ></text>
</g>
<g >
<title>get_inbetween_points (23,762,015 samples, 0.28%)</title><rect x="1088.6" y="357" width="3.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1091.60" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (53,486,231 samples, 0.64%)</title><rect x="1073.5" y="309" width="7.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1076.52" y="319.5" ></text>
</g>
<g >
<title>operator delete (818,073 samples, 0.01%)</title><rect x="1065.7" y="149" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1068.71" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,639,344 samples, 0.06%)</title><rect x="1137.1" y="293" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1140.09" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (5,374,713 samples, 0.06%)</title><rect x="1166.9" y="517" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1169.95" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (1,295,927 samples, 0.02%)</title><rect x="1091.8" y="325" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1094.75" y="335.5" ></text>
</g>
<g >
<title>operator new (43,055,168 samples, 0.51%)</title><rect x="988.4" y="245" width="6.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="991.43" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,970,804 samples, 0.02%)</title><rect x="187.0" y="517" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="190.01" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (4,637,484 samples, 0.06%)</title><rect x="1182.6" y="549" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1185.64" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (934,118 samples, 0.01%)</title><rect x="528.0" y="469" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="531.03" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (814,409 samples, 0.01%)</title><rect x="586.3" y="293" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="589.33" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,210,411 samples, 0.01%)</title><rect x="991.4" y="197" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="994.41" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,950,367 samples, 0.06%)</title><rect x="408.5" y="453" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="411.52" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,184,471 samples, 0.05%)</title><rect x="1057.1" y="101" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1060.13" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (130,883,732 samples, 1.56%)</title><rect x="514.9" y="517" width="18.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="517.88" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,945,877 samples, 0.12%)</title><rect x="676.0" y="469" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="679.01" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,128,662 samples, 0.03%)</title><rect x="926.4" y="357" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="929.42" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,211,888 samples, 0.01%)</title><rect x="587.7" y="277" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="590.74" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (100,545,952 samples, 1.20%)</title><rect x="1092.5" y="341" width="14.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1095.46" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (53,784,908 samples, 0.64%)</title><rect x="375.5" y="517" width="7.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="378.47" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (6,724,132 samples, 0.08%)</title><rect x="984.5" y="341" width="1.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="987.52" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,900,130 samples, 0.05%)</title><rect x="706.3" y="437" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="709.30" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,081,041 samples, 0.01%)</title><rect x="952.5" y="261" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="955.48" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,199,088 samples, 0.01%)</title><rect x="308.1" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="311.12" y="479.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,835,771 samples, 0.07%)</title><rect x="1137.1" y="357" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1140.07" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,004,777 samples, 0.06%)</title><rect x="1057.1" y="133" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1060.13" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (8,518,062 samples, 0.10%)</title><rect x="708.2" y="437" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="711.22" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (24,536,266 samples, 0.29%)</title><rect x="1033.6" y="149" width="3.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1036.63" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (4,642,006 samples, 0.06%)</title><rect x="1068.2" y="357" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1071.21" y="367.5" ></text>
</g>
<g >
<title>cfree (2,375,125 samples, 0.03%)</title><rect x="1159.4" y="245" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1162.39" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (20,202,431 samples, 0.24%)</title><rect x="1082.1" y="325" width="2.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1085.13" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (16,356,379 samples, 0.19%)</title><rect x="83.1" y="501" width="2.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="86.06" y="511.5" ></text>
</g>
<g >
<title>choose_next_point (23,786,555 samples, 0.28%)</title><rect x="924.0" y="389" width="3.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="926.99" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,359,078 samples, 0.14%)</title><rect x="1157.7" y="293" width="1.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1160.72" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,385,242 samples, 0.03%)</title><rect x="1183.0" y="517" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1185.96" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (151,207,477 samples, 1.80%)</title><rect x="1016.0" y="277" width="21.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1019.01" y="287.5" ></text>
</g>
<g >
<title>cfree (18,164,753 samples, 0.22%)</title><rect x="1164.0" y="549" width="2.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1167.04" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,666,267 samples, 0.09%)</title><rect x="380.2" y="437" width="1.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="383.19" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (20,006,690 samples, 0.24%)</title><rect x="519.5" y="437" width="2.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="522.55" y="447.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (3,072,441 samples, 0.04%)</title><rect x="563.2" y="517" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="566.19" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (8,518,062 samples, 0.10%)</title><rect x="708.2" y="453" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="711.22" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,476,306 samples, 0.02%)</title><rect x="1003.6" y="261" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1006.60" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (48,358,811 samples, 0.58%)</title><rect x="1120.8" y="277" width="6.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1123.77" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (2,468,575 samples, 0.03%)</title><rect x="80.9" y="453" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="83.95" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,743,751 samples, 0.07%)</title><rect x="934.9" y="261" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="937.88" y="271.5" ></text>
</g>
<g >
<title>decltype  (805,338 samples, 0.01%)</title><rect x="1120.3" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1123.35" y="159.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,137,478 samples, 0.03%)</title><rect x="589.0" y="533" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="592.00" y="543.5" ></text>
</g>
<g >
<title>malloc (1,357,426 samples, 0.02%)</title><rect x="954.6" y="389" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="957.61" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (4,391,962 samples, 0.05%)</title><rect x="953.1" y="325" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="956.07" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,190,471 samples, 0.01%)</title><rect x="1147.5" y="181" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1150.45" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,200,026 samples, 0.04%)</title><rect x="993.9" y="117" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="996.91" y="127.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (821,054 samples, 0.01%)</title><rect x="585.3" y="389" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="588.31" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (795,093 samples, 0.01%)</title><rect x="1113.4" y="165" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1116.36" y="175.5" ></text>
</g>
<g >
<title>decltype  (10,203,721 samples, 0.12%)</title><rect x="402.1" y="469" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="405.11" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,245,711 samples, 0.03%)</title><rect x="585.5" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="588.52" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (1,080,659 samples, 0.01%)</title><rect x="434.3" y="469" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="437.34" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (934,419 samples, 0.01%)</title><rect x="1167.8" y="501" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1170.76" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (6,807,403 samples, 0.08%)</title><rect x="391.2" y="517" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="394.20" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (936,793 samples, 0.01%)</title><rect x="962.1" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="965.09" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,151,686 samples, 0.03%)</title><rect x="1066.9" y="69" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1069.87" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (10,506,296 samples, 0.12%)</title><rect x="385.6" y="453" width="1.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="388.59" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,666,267 samples, 0.09%)</title><rect x="380.2" y="421" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="383.19" y="431.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,949,407 samples, 0.04%)</title><rect x="709.0" y="405" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="712.00" y="415.5" ></text>
</g>
<g >
<title>choose_next_point (619,418,113 samples, 7.37%)</title><rect x="308.6" y="533" width="86.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="311.59" y="543.5" >choose_nex..</text>
</g>
<g >
<title>[libc.so.6] (4,379,171 samples, 0.05%)</title><rect x="1148.7" y="197" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1151.71" y="207.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,285,463 samples, 0.03%)</title><rect x="1013.0" y="245" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1016.00" y="255.5" ></text>
</g>
<g >
<title>get_inbetween_points (56,939,966 samples, 0.68%)</title><rect x="85.4" y="533" width="7.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="88.35" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,054,966 samples, 0.01%)</title><rect x="947.8" y="309" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="950.77" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,004,777 samples, 0.06%)</title><rect x="1057.1" y="117" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1060.13" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,953,461 samples, 0.07%)</title><rect x="592.4" y="533" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="595.43" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1,295,927 samples, 0.02%)</title><rect x="1091.8" y="309" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1094.75" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (787,775 samples, 0.01%)</title><rect x="81.6" y="517" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="84.65" y="527.5" ></text>
</g>
<g >
<title>cfree (1,613,552 samples, 0.02%)</title><rect x="923.8" y="389" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="926.77" y="399.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,997,370 samples, 0.04%)</title><rect x="78.8" y="453" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="81.77" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (812,816 samples, 0.01%)</title><rect x="1155.0" y="357" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1158.05" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,648,095 samples, 0.04%)</title><rect x="739.7" y="453" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="742.74" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,380,807 samples, 0.05%)</title><rect x="1119.8" y="197" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1122.85" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,001,291 samples, 0.05%)</title><rect x="693.3" y="421" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="696.32" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (24,400,205 samples, 0.29%)</title><rect x="1033.6" y="133" width="3.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1036.63" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,766,408 samples, 0.19%)</title><rect x="1082.8" y="309" width="2.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1085.75" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (189,475,313 samples, 2.25%)</title><rect x="344.2" y="469" width="26.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="347.17" y="479.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (23,280,930 samples, 0.28%)</title><rect x="1144.9" y="309" width="3.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1147.93" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (790,753 samples, 0.01%)</title><rect x="1123.3" y="197" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1126.27" y="207.5" ></text>
</g>
<g >
<title>cfree (10,095,401 samples, 0.12%)</title><rect x="1113.7" y="229" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1116.69" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,064,759 samples, 0.01%)</title><rect x="1113.5" y="149" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1116.50" y="159.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (932,839 samples, 0.01%)</title><rect x="1140.5" y="357" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1143.49" y="367.5" ></text>
</g>
<g >
<title>operator new (2,795,833 samples, 0.03%)</title><rect x="1137.3" y="277" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1140.29" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,505,322 samples, 0.03%)</title><rect x="1115.3" y="229" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1118.34" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,997,939 samples, 0.23%)</title><rect x="1140.6" y="373" width="2.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1143.62" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (85,178,858 samples, 1.01%)</title><rect x="677.4" y="453" width="12.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="680.41" y="463.5" ></text>
</g>
<g >
<title>decltype  (1,199,773 samples, 0.01%)</title><rect x="927.5" y="325" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="930.54" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (1,295,927 samples, 0.02%)</title><rect x="1091.8" y="341" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1094.75" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (31,700,485 samples, 0.38%)</title><rect x="1130.6" y="373" width="4.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1133.62" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,476,252 samples, 0.02%)</title><rect x="308.1" y="485" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="311.10" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,382,675 samples, 0.06%)</title><rect x="1131.9" y="277" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1134.92" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (1,338,575 samples, 0.02%)</title><rect x="1088.4" y="341" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1091.41" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,058,790 samples, 0.01%)</title><rect x="973.9" y="213" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="976.86" y="223.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (1,345,166 samples, 0.02%)</title><rect x="1188.1" y="533" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1191.10" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (913,033 samples, 0.01%)</title><rect x="1067.4" y="85" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1070.42" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,936,444 samples, 0.08%)</title><rect x="215.6" y="517" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="218.58" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,383,803 samples, 0.03%)</title><rect x="944.2" y="325" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="947.19" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (1,036,866 samples, 0.01%)</title><rect x="926.9" y="293" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="929.86" y="303.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,803,410 samples, 0.03%)</title><rect x="1167.3" y="453" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1170.25" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,091,863 samples, 0.01%)</title><rect x="1141.4" y="357" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1144.36" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,639,344 samples, 0.06%)</title><rect x="1137.1" y="325" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1140.09" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (27,413,668 samples, 0.33%)</title><rect x="179.0" y="517" width="3.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="181.97" y="527.5" ></text>
</g>
<g >
<title>cfree (65,904,410 samples, 0.78%)</title><rect x="1092.8" y="261" width="9.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1095.76" y="271.5" ></text>
</g>
<g >
<title>operator new (11,648,313 samples, 0.14%)</title><rect x="1146.0" y="213" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1148.99" y="223.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (10,573,618 samples, 0.13%)</title><rect x="223.9" y="469" width="1.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="226.88" y="479.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,425,959 samples, 0.02%)</title><rect x="1161.3" y="421" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1164.28" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,521,947 samples, 0.05%)</title><rect x="1084.3" y="277" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1087.33" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,389,143 samples, 0.03%)</title><rect x="1005.9" y="261" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1008.87" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,950,367 samples, 0.06%)</title><rect x="408.5" y="421" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="411.52" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (220,315,667 samples, 2.62%)</title><rect x="1037.2" y="309" width="31.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1040.23" y="319.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (9,386,927 samples, 0.11%)</title><rect x="380.2" y="469" width="1.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="383.19" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (20,202,431 samples, 0.24%)</title><rect x="1082.1" y="341" width="2.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1085.13" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,759,028 samples, 0.02%)</title><rect x="1162.6" y="277" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1165.56" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,044,204 samples, 0.01%)</title><rect x="1004.1" y="277" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1007.05" y="287.5" ></text>
</g>
<g >
<title>cfree (11,954,212 samples, 0.14%)</title><rect x="1022.2" y="181" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1025.21" y="191.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (74,658,151 samples, 0.89%)</title><rect x="927.7" y="341" width="10.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="930.71" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (936,793 samples, 0.01%)</title><rect x="962.1" y="277" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="965.09" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (913,033 samples, 0.01%)</title><rect x="1067.4" y="69" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1070.42" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,190,005 samples, 0.01%)</title><rect x="947.7" y="341" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="950.75" y="351.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (943,872 samples, 0.01%)</title><rect x="953.6" y="309" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="956.55" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (254,799,236 samples, 3.03%)</title><rect x="505.4" y="533" width="35.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="508.37" y="543.5" >std..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (932,839 samples, 0.01%)</title><rect x="1140.5" y="325" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1143.49" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (53,210,227 samples, 0.63%)</title><rect x="383.0" y="501" width="7.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="386.01" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,905,229 samples, 0.02%)</title><rect x="1142.9" y="165" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1145.91" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,065,709 samples, 0.01%)</title><rect x="1092.6" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1095.60" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,593,029 samples, 0.02%)</title><rect x="1106.3" y="165" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1109.26" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (5,917,169 samples, 0.07%)</title><rect x="1012.5" y="293" width="0.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1015.55" y="303.5" ></text>
</g>
<g >
<title>operator delete (3,166,307 samples, 0.04%)</title><rect x="934.0" y="245" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="937.05" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (12,064,651 samples, 0.14%)</title><rect x="1141.5" y="357" width="1.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1144.52" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,278,544 samples, 0.03%)</title><rect x="1162.2" y="245" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1165.20" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,044,204 samples, 0.01%)</title><rect x="1004.1" y="261" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1007.05" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,739,636 samples, 0.07%)</title><rect x="694.0" y="437" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="697.03" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (12,761,176 samples, 0.15%)</title><rect x="1002.0" y="309" width="1.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1005.02" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,001,291 samples, 0.05%)</title><rect x="693.3" y="389" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="696.32" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,951,408 samples, 0.02%)</title><rect x="1134.8" y="277" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1137.80" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,593,029 samples, 0.02%)</title><rect x="1106.3" y="197" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1109.26" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,452,383 samples, 0.11%)</title><rect x="1060.8" y="165" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1063.76" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (932,301 samples, 0.01%)</title><rect x="1113.3" y="197" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1116.34" y="207.5" ></text>
</g>
<g >
<title>operator new (963,384 samples, 0.01%)</title><rect x="587.8" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="590.76" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (1,659,203 samples, 0.02%)</title><rect x="1168.5" y="517" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1171.46" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,028,868 samples, 0.02%)</title><rect x="78.4" y="421" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="81.42" y="431.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (1,729,253 samples, 0.02%)</title><rect x="944.8" y="373" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="947.75" y="383.5" ></text>
</g>
<g >
<title>decltype  (2,663,900 samples, 0.03%)</title><rect x="1032.4" y="85" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1035.43" y="95.5" ></text>
</g>
<g >
<title>operator new (2,295,610 samples, 0.03%)</title><rect x="1149.3" y="181" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1152.34" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (13,229,754 samples, 0.16%)</title><rect x="1058.4" y="149" width="1.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1061.41" y="159.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,214,420 samples, 0.01%)</title><rect x="191.2" y="501" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="194.17" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (1,834,312 samples, 0.02%)</title><rect x="1087.4" y="277" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1090.35" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,349,827 samples, 0.04%)</title><rect x="529.3" y="485" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="532.31" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,189,274 samples, 0.01%)</title><rect x="700.0" y="517" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="702.99" y="527.5" ></text>
</g>
<g >
<title>operator new (2,412,794 samples, 0.03%)</title><rect x="1033.3" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1036.28" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (34,536,541 samples, 0.41%)</title><rect x="533.3" y="517" width="4.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="536.25" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (53,210,227 samples, 0.63%)</title><rect x="383.0" y="517" width="7.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="386.01" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (5,835,771 samples, 0.07%)</title><rect x="1137.1" y="389" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1140.07" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (165,916,489 samples, 1.97%)</title><rect x="202.1" y="533" width="23.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="205.08" y="543.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,001,291 samples, 0.05%)</title><rect x="693.3" y="437" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="696.32" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,235,710 samples, 0.22%)</title><rect x="995.5" y="229" width="2.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="998.54" y="239.5" ></text>
</g>
<g >
<title>operator new (813,457 samples, 0.01%)</title><rect x="934.5" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="937.49" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,448,134 samples, 0.06%)</title><rect x="1031.7" y="117" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1034.67" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (9,963,104 samples, 0.12%)</title><rect x="1002.2" y="277" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1005.20" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (50,046,568 samples, 0.60%)</title><rect x="927.8" y="293" width="7.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="930.82" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (800,019 samples, 0.01%)</title><rect x="1004.4" y="309" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1007.37" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,444,016 samples, 0.03%)</title><rect x="78.4" y="453" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="81.42" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,057,523 samples, 0.01%)</title><rect x="985.1" y="261" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="988.14" y="271.5" ></text>
</g>
<g >
<title>choose_next_point (1,538,831,612 samples, 18.30%)</title><rect x="919.1" y="405" width="216.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="922.09" y="415.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,728,440 samples, 0.06%)</title><rect x="1162.2" y="357" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1165.19" y="367.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (11,221,135 samples, 0.13%)</title><rect x="916.5" y="469" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="919.53" y="479.5" ></text>
</g>
<g >
<title>decltype  (10,007,378 samples, 0.12%)</title><rect x="916.7" y="437" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="919.70" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (813,388 samples, 0.01%)</title><rect x="588.9" y="405" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="591.89" y="415.5" ></text>
</g>
<g >
<title>operator delete (6,803,143 samples, 0.08%)</title><rect x="982.6" y="341" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="985.60" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,966,999 samples, 0.04%)</title><rect x="1124.3" y="133" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1127.27" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (23,290,097 samples, 0.28%)</title><rect x="1140.1" y="389" width="3.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1143.05" y="399.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (77,628,741 samples, 0.92%)</title><rect x="551.9" y="501" width="10.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="554.93" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,028,663 samples, 0.05%)</title><rect x="993.9" y="197" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="996.91" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,324,204 samples, 0.02%)</title><rect x="973.9" y="261" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="976.86" y="271.5" ></text>
</g>
<g >
<title>[[stack]] (1,534,571,349 samples, 18.25%)</title><rect x="10.0" y="549" width="215.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >[[stack]]</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,787,699 samples, 0.06%)</title><rect x="1153.7" y="277" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1156.67" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (1,307,923 samples, 0.02%)</title><rect x="81.4" y="501" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="84.39" y="511.5" ></text>
</g>
<g >
<title>malloc (931,369 samples, 0.01%)</title><rect x="952.9" y="261" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="955.86" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,494,317 samples, 0.02%)</title><rect x="1151.5" y="197" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1154.45" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (2,129,105 samples, 0.03%)</title><rect x="93.0" y="469" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="95.99" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,979,555 samples, 0.02%)</title><rect x="584.9" y="389" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="587.94" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (150,658,308 samples, 1.79%)</title><rect x="1016.0" y="213" width="21.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1019.01" y="223.5" ></text>
</g>
<g >
<title>get_inbetween_points (117,016,940 samples, 1.39%)</title><rect x="938.2" y="389" width="16.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="941.19" y="399.5" ></text>
</g>
<g >
<title>operator new (802,354 samples, 0.01%)</title><rect x="587.6" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="590.55" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (8,981,846 samples, 0.11%)</title><rect x="525.6" y="485" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="528.62" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (23,280,930 samples, 0.28%)</title><rect x="1144.9" y="293" width="3.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1147.93" y="303.5" ></text>
</g>
<g >
<title>operator new (1,445,980 samples, 0.02%)</title><rect x="1115.5" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1118.47" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (31,700,485 samples, 0.38%)</title><rect x="1130.6" y="389" width="4.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1133.62" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (794,775 samples, 0.01%)</title><rect x="1147.5" y="165" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1150.51" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (738,795 samples, 0.01%)</title><rect x="1168.2" y="517" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1171.15" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (935,561 samples, 0.01%)</title><rect x="1139.9" y="373" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1142.92" y="383.5" ></text>
</g>
<g >
<title>cfree (795,765 samples, 0.01%)</title><rect x="1142.4" y="245" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1145.35" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,759,028 samples, 0.02%)</title><rect x="1162.6" y="293" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1165.56" y="303.5" ></text>
</g>
<g >
<title>choose_next_point (1,751,109,576 samples, 20.83%)</title><rect x="918.1" y="453" width="245.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="921.14" y="463.5" >choose_next_point</text>
</g>
<g >
<title>malloc (8,130,504 samples, 0.10%)</title><rect x="1124.7" y="229" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1127.73" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (8,981,846 samples, 0.11%)</title><rect x="525.6" y="421" width="1.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="528.62" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,236,972 samples, 0.04%)</title><rect x="742.4" y="453" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="745.38" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (17,581,556 samples, 0.21%)</title><rect x="411.7" y="437" width="2.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="414.74" y="447.5" ></text>
</g>
<g >
<title>malloc (939,497 samples, 0.01%)</title><rect x="1067.9" y="133" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1070.89" y="143.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,387,791 samples, 0.09%)</title><rect x="76.6" y="485" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="79.61" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,852,861 samples, 0.02%)</title><rect x="944.2" y="293" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="947.21" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,080,486 samples, 0.01%)</title><rect x="1159.2" y="261" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1162.16" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,476,306 samples, 0.02%)</title><rect x="1003.6" y="245" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1006.60" y="255.5" ></text>
</g>
<g >
<title>round@plt (1,454,649 samples, 0.02%)</title><rect x="173.9" y="533" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="176.91" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,332,170 samples, 0.02%)</title><rect x="1056.5" y="149" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1059.47" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (23,230,728 samples, 0.28%)</title><rect x="949.4" y="293" width="3.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="952.37" y="303.5" ></text>
</g>
<g >
<title>cfree (1,069,354 samples, 0.01%)</title><rect x="952.7" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="955.71" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,201,161 samples, 0.01%)</title><rect x="1091.5" y="293" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1094.49" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (13,895,447 samples, 0.17%)</title><rect x="512.9" y="501" width="2.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="515.93" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (4,932,034 samples, 0.06%)</title><rect x="953.9" y="325" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="956.89" y="335.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,743,456 samples, 0.02%)</title><rect x="589.0" y="485" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="592.00" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (152,168,429 samples, 1.81%)</title><rect x="1039.0" y="293" width="21.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1041.98" y="303.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (1,858,870 samples, 0.02%)</title><rect x="1033.7" y="69" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1036.65" y="79.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,720,660 samples, 0.02%)</title><rect x="381.3" y="437" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="384.27" y="447.5" ></text>
</g>
<g >
<title>malloc (5,521,230 samples, 0.07%)</title><rect x="1150.2" y="181" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1153.23" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (5,917,169 samples, 0.07%)</title><rect x="1012.5" y="277" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1015.55" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,081,910 samples, 0.01%)</title><rect x="991.4" y="165" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="994.43" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,759,028 samples, 0.02%)</title><rect x="1162.6" y="229" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1165.56" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (941,498 samples, 0.01%)</title><rect x="1152.2" y="373" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1155.18" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (23,712,902 samples, 0.28%)</title><rect x="927.8" y="261" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="930.84" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (10,712,548 samples, 0.13%)</title><rect x="381.5" y="437" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="384.51" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (814,409 samples, 0.01%)</title><rect x="586.3" y="325" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="589.33" y="335.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,997,370 samples, 0.04%)</title><rect x="78.8" y="437" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="81.77" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (8,650,800 samples, 0.10%)</title><rect x="389.3" y="469" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="392.27" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,925,034 samples, 0.03%)</title><rect x="1161.7" y="405" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1164.68" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,717,446 samples, 0.02%)</title><rect x="1161.8" y="309" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1164.83" y="319.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (18,793,223 samples, 0.22%)</title><rect x="430.6" y="485" width="2.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="433.63" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (5,481,925 samples, 0.07%)</title><rect x="698.6" y="453" width="0.8" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="701.58" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,151,686 samples, 0.03%)</title><rect x="1066.9" y="37" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1069.87" y="47.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,805,537 samples, 0.03%)</title><rect x="952.7" y="277" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="955.67" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,881,357 samples, 0.09%)</title><rect x="1081.0" y="277" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1084.02" y="287.5" ></text>
</g>
<g >
<title>operator new (2,413,730 samples, 0.03%)</title><rect x="1067.8" y="149" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1070.79" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;::pair&lt;int, double&gt; (1,478,595 samples, 0.02%)</title><rect x="737.1" y="517" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="740.14" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (11,795,146 samples, 0.14%)</title><rect x="1141.5" y="325" width="1.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1144.52" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (22,900,928 samples, 0.27%)</title><rect x="934.8" y="293" width="3.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="937.85" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,159,218 samples, 0.01%)</title><rect x="957.2" y="357" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="960.20" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (23,280,930 samples, 0.28%)</title><rect x="1144.9" y="245" width="3.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1147.93" y="255.5" ></text>
</g>
<g >
<title>decltype  (791,811 samples, 0.01%)</title><rect x="953.8" y="309" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="956.77" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1,080,659 samples, 0.01%)</title><rect x="434.3" y="485" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="437.34" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (802,547 samples, 0.01%)</title><rect x="1151.3" y="133" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1154.32" y="143.5" ></text>
</g>
<g >
<title>operator delete (1,056,295 samples, 0.01%)</title><rect x="1046.3" y="181" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1049.30" y="191.5" ></text>
</g>
<g >
<title>decltype  (5,918,253 samples, 0.07%)</title><rect x="704.3" y="469" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="707.30" y="479.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,749,740 samples, 0.02%)</title><rect x="432.7" y="453" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="435.67" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,206,636 samples, 0.01%)</title><rect x="1028.1" y="165" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1031.12" y="175.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (5,884,420 samples, 0.07%)</title><rect x="877.2" y="517" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="880.20" y="527.5" ></text>
</g>
<g >
<title>choose_next_point (939,121 samples, 0.01%)</title><rect x="1148.4" y="309" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1151.41" y="319.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,946,233 samples, 0.08%)</title><rect x="1138.9" y="341" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1141.95" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (2,120,986 samples, 0.03%)</title><rect x="92.6" y="469" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="95.62" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (20,006,690 samples, 0.24%)</title><rect x="519.5" y="485" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="522.55" y="495.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (33,505,202 samples, 0.40%)</title><rect x="370.8" y="453" width="4.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="373.76" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (5,878,342 samples, 0.07%)</title><rect x="700.8" y="485" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="703.79" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (7,617,948 samples, 0.09%)</title><rect x="433.3" y="501" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="436.27" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (23,290,097 samples, 0.28%)</title><rect x="1140.1" y="405" width="3.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1143.05" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (110,483,016 samples, 1.31%)</title><rect x="399.1" y="501" width="15.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="402.06" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,197,302 samples, 0.01%)</title><rect x="985.1" y="325" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="988.14" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,336,762 samples, 0.02%)</title><rect x="1167.7" y="517" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1170.70" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (115,018,305 samples, 1.37%)</title><rect x="860.5" y="533" width="16.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="863.52" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,308,433 samples, 0.05%)</title><rect x="706.2" y="469" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="709.25" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (11,962,472 samples, 0.14%)</title><rect x="1155.9" y="341" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1158.94" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (52,870,597 samples, 0.63%)</title><rect x="522.4" y="501" width="7.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="525.36" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (925,905 samples, 0.01%)</title><rect x="993.6" y="213" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="996.62" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (48,358,811 samples, 0.58%)</title><rect x="1120.8" y="309" width="6.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1123.77" y="319.5" ></text>
</g>
<g >
<title>operator new (910,523 samples, 0.01%)</title><rect x="1101.9" y="117" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1104.89" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,308,304 samples, 0.02%)</title><rect x="1101.8" y="165" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1104.83" y="175.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (76,297,057 samples, 0.91%)</title><rect x="963.3" y="309" width="10.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="966.34" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (12,192,623 samples, 0.15%)</title><rect x="847.5" y="437" width="1.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="850.48" y="447.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (36,554,455 samples, 0.43%)</title><rect x="948.8" y="341" width="5.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="951.76" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,211,888 samples, 0.01%)</title><rect x="587.7" y="309" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="590.74" y="319.5" ></text>
</g>
</g>
</svg>
