<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>operator delete (5,580,877 samples, 0.07%)</title><rect x="1168.7" y="213" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1171.72" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,370,049 samples, 0.04%)</title><rect x="1001.0" y="133" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1003.96" y="143.5" ></text>
</g>
<g >
<title>ktime_get (1,287,273 samples, 0.02%)</title><rect x="431.1" y="85" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="434.14" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,839,967 samples, 0.02%)</title><rect x="513.4" y="165" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="516.42" y="175.5" ></text>
</g>
<g >
<title>read_hpet (1,277,009 samples, 0.02%)</title><rect x="1168.1" y="85" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1171.09" y="95.5" ></text>
</g>
<g >
<title>malloc (416,106,809 samples, 5.21%)</title><rect x="452.2" y="197" width="61.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="455.19" y="207.5" >malloc</text>
</g>
<g >
<title>tick_nohz_highres_handler (830,067 samples, 0.01%)</title><rect x="223.4" y="101" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="226.41" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,603,276 samples, 0.03%)</title><rect x="640.3" y="133" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="643.33" y="143.5" ></text>
</g>
<g >
<title>task_tick_fair (1,394,036 samples, 0.02%)</title><rect x="431.6" y="37" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="434.56" y="47.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,961,118 samples, 0.02%)</title><rect x="837.5" y="133" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="840.51" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,808,233 samples, 0.04%)</title><rect x="837.5" y="197" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="840.49" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (34,097,290 samples, 0.43%)</title><rect x="690.1" y="197" width="5.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="693.09" y="207.5" ></text>
</g>
<g >
<title>[unknown] (856,907 samples, 0.01%)</title><rect x="200.2" y="197" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="203.18" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (2,157,610 samples, 0.03%)</title><rect x="187.9" y="69" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="190.87" y="79.5" ></text>
</g>
<g >
<title>scheduler_tick (1,611,186 samples, 0.02%)</title><rect x="1001.2" y="69" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1004.22" y="79.5" ></text>
</g>
<g >
<title>tick_sched_handle (836,930 samples, 0.01%)</title><rect x="513.6" y="85" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="516.55" y="95.5" ></text>
</g>
<g >
<title>update_process_times (836,930 samples, 0.01%)</title><rect x="513.6" y="69" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="516.55" y="79.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,816,322 samples, 0.02%)</title><rect x="837.5" y="117" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="840.51" y="127.5" ></text>
</g>
<g >
<title>[unknown] (3,910,769,547 samples, 48.98%)</title><rect x="188.4" y="213" width="578.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="191.40" y="223.5" >[unknown]</text>
</g>
<g >
<title>do_exit (866,007 samples, 0.01%)</title><rect x="837.9" y="149" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="840.91" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (971,760 samples, 0.01%)</title><rect x="223.4" y="149" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="226.41" y="159.5" ></text>
</g>
<g >
<title>read_hpet (902,419 samples, 0.01%)</title><rect x="1001.0" y="85" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1003.96" y="95.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (737,146 samples, 0.01%)</title><rect x="431.3" y="85" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="434.33" y="95.5" ></text>
</g>
<g >
<title>task_tick_fair (711,139 samples, 0.01%)</title><rect x="640.5" y="37" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="643.49" y="47.5" ></text>
</g>
<g >
<title>operator new (210,470,721 samples, 2.64%)</title><rect x="530.0" y="197" width="31.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="533.00" y="207.5" >op..</text>
</g>
<g >
<title>hrtimer_interrupt (4,645,698 samples, 0.06%)</title><rect x="1168.0" y="149" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1171.03" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,594,893 samples, 0.05%)</title><rect x="187.7" y="133" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="190.68" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,954,112 samples, 0.02%)</title><rect x="560.8" y="165" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="563.81" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,281,117 samples, 0.03%)</title><rect x="187.9" y="101" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="190.87" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,705,095 samples, 0.02%)</title><rect x="513.4" y="117" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="516.42" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,807,529 samples, 0.02%)</title><rect x="560.8" y="149" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="563.84" y="159.5" ></text>
</g>
<g >
<title>exit_mmap (866,007 samples, 0.01%)</title><rect x="837.9" y="117" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="840.91" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,824,942 samples, 0.04%)</title><rect x="640.3" y="165" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="643.30" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,430,000 samples, 0.02%)</title><rect x="689.8" y="117" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="692.78" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,603,276 samples, 0.03%)</title><rect x="640.3" y="149" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="643.33" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (867,052 samples, 0.01%)</title><rect x="766.2" y="181" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="769.15" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (701,057 samples, 0.01%)</title><rect x="560.9" y="85" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="563.92" y="95.5" ></text>
</g>
<g >
<title>all (7,983,645,391 samples, 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>timekeeping_advance (774,042 samples, 0.01%)</title><rect x="187.8" y="69" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="190.76" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,262,372 samples, 0.08%)</title><rect x="187.5" y="197" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="190.47" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,747,144 samples, 0.08%)</title><rect x="431.0" y="181" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="433.97" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,807,529 samples, 0.02%)</title><rect x="560.8" y="133" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="563.84" y="143.5" ></text>
</g>
<g >
<title>do_group_exit (866,007 samples, 0.01%)</title><rect x="837.9" y="165" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="840.91" y="175.5" ></text>
</g>
<g >
<title>read_hpet (1,005,086 samples, 0.01%)</title><rect x="431.2" y="69" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="434.18" y="79.5" ></text>
</g>
<g >
<title>update_process_times (701,057 samples, 0.01%)</title><rect x="560.9" y="69" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="563.92" y="79.5" ></text>
</g>
<g >
<title>get_inbetween_points (128,870,523 samples, 1.61%)</title><rect x="433.1" y="197" width="19.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="436.15" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,645,698 samples, 0.06%)</title><rect x="1168.0" y="165" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1171.03" y="175.5" ></text>
</g>
<g >
<title>update_process_times (717,552 samples, 0.01%)</title><rect x="689.9" y="69" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="692.88" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,824,942 samples, 0.04%)</title><rect x="640.3" y="181" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="643.30" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,195,238 samples, 0.03%)</title><rect x="640.3" y="101" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="643.33" y="111.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (856,907 samples, 0.01%)</title><rect x="200.2" y="181" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="203.18" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (166,437,671 samples, 2.08%)</title><rect x="695.1" y="197" width="24.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="698.13" y="207.5" >s..</text>
</g>
<g >
<title>tick_nohz_highres_handler (1,430,000 samples, 0.02%)</title><rect x="689.8" y="101" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="692.78" y="111.5" ></text>
</g>
<g >
<title>scheduler_tick (1,948,567 samples, 0.02%)</title><rect x="431.5" y="53" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="434.48" y="63.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (833,039 samples, 0.01%)</title><rect x="187.6" y="165" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="190.56" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (971,760 samples, 0.01%)</title><rect x="223.4" y="133" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="226.41" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (900,735 samples, 0.01%)</title><rect x="452.1" y="181" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="455.06" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (867,052 samples, 0.01%)</title><rect x="766.2" y="165" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="769.15" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,932,885 samples, 0.04%)</title><rect x="1168.1" y="117" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1171.07" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (866,007 samples, 0.01%)</title><rect x="837.9" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="840.91" y="223.5" ></text>
</g>
<g >
<title>attempt7_cpp (7,983,635,719 samples, 100.00%)</title><rect x="10.0" y="229" width="1180.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >attempt7_cpp</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (760,048 samples, 0.01%)</title><rect x="452.1" y="165" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="455.08" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (718,093 samples, 0.01%)</title><rect x="766.2" y="133" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="769.17" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,954,112 samples, 0.02%)</title><rect x="560.8" y="181" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="563.81" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (61,629,973 samples, 0.77%)</title><rect x="1180.9" y="213" width="9.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1183.88" y="223.5" ></text>
</g>
<g >
<title>update_wall_time (702,999 samples, 0.01%)</title><rect x="640.4" y="69" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="643.37" y="79.5" ></text>
</g>
<g >
<title>scheduler_tick (1,140,606 samples, 0.01%)</title><rect x="640.5" y="53" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="643.49" y="63.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (760,048 samples, 0.01%)</title><rect x="452.1" y="149" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="455.08" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,670,566 samples, 0.03%)</title><rect x="837.5" y="149" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="840.51" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,152,828 samples, 0.03%)</title><rect x="689.8" y="149" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="692.78" y="159.5" ></text>
</g>
<g >
<title>update_process_times (2,384,744 samples, 0.03%)</title><rect x="431.4" y="69" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="434.43" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,231,052 samples, 0.03%)</title><rect x="689.8" y="181" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="692.76" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (807,578 samples, 0.01%)</title><rect x="837.7" y="69" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="840.66" y="79.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,839,967 samples, 0.02%)</title><rect x="513.4" y="149" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="516.42" y="159.5" ></text>
</g>
<g >
<title>task_tick_fair (1,295,141 samples, 0.02%)</title><rect x="188.0" y="53" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="191.00" y="63.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (976,117 samples, 0.01%)</title><rect x="10.0" y="197" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.03" y="207.5" ></text>
</g>
<g >
<title>cfree (483,234,443 samples, 6.05%)</title><rect x="766.5" y="213" width="71.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="769.48" y="223.5" >cfree</text>
</g>
<g >
<title>hrtimer_interrupt (4,516,433 samples, 0.06%)</title><rect x="1000.9" y="149" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1003.93" y="159.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,761,141 samples, 0.02%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,335,837 samples, 0.08%)</title><rect x="431.0" y="149" width="1.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="434.03" y="159.5" ></text>
</g>
<g >
<title>timekeeping_advance (737,146 samples, 0.01%)</title><rect x="431.3" y="53" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="434.33" y="63.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,645,698 samples, 0.06%)</title><rect x="1168.0" y="181" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1171.03" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (4,409,163 samples, 0.06%)</title><rect x="431.1" y="101" width="0.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="434.14" y="111.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,698,861 samples, 0.07%)</title><rect x="187.6" y="181" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="190.56" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,843,078 samples, 0.06%)</title><rect x="431.1" y="117" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="434.07" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,469,581 samples, 0.08%)</title><rect x="431.0" y="165" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="434.01" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,516,433 samples, 0.06%)</title><rect x="1000.9" y="181" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1003.93" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,152,828 samples, 0.03%)</title><rect x="689.8" y="133" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="692.78" y="143.5" ></text>
</g>
<g >
<title>__do_softirq (833,039 samples, 0.01%)</title><rect x="187.6" y="149" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="190.56" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,865,822 samples, 0.06%)</title><rect x="187.7" y="149" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="190.68" y="159.5" ></text>
</g>
<g >
<title>read_hpet (854,384 samples, 0.01%)</title><rect x="1168.6" y="117" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1171.59" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (717,552 samples, 0.01%)</title><rect x="689.9" y="85" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="692.88" y="95.5" ></text>
</g>
<g >
<title>ktime_get (1,408,229 samples, 0.02%)</title><rect x="1168.1" y="101" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1171.07" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,516,433 samples, 0.06%)</title><rect x="1000.9" y="165" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1003.93" y="175.5" ></text>
</g>
<g >
<title>cfree (157,295,625 samples, 1.97%)</title><rect x="200.3" y="197" width="23.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="203.30" y="207.5" >c..</text>
</g>
<g >
<title>tick_sched_handle (1,217,416 samples, 0.02%)</title><rect x="640.5" y="85" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="643.48" y="95.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (855,687 samples, 0.01%)</title><rect x="10.0" y="181" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.03" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (961,166 samples, 0.01%)</title><rect x="1168.4" y="101" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1171.36" y="111.5" ></text>
</g>
<g >
<title>operator new (29,687,628 samples, 0.37%)</title><rect x="1169.5" y="213" width="4.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1172.54" y="223.5" ></text>
</g>
<g >
<title>timekeeping_advance (702,999 samples, 0.01%)</title><rect x="640.4" y="53" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="643.37" y="63.5" ></text>
</g>
<g >
<title>choose_next_point (1,410,091,091 samples, 17.66%)</title><rect x="223.6" y="197" width="208.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="226.55" y="207.5" >choose_next_point</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,839,967 samples, 0.02%)</title><rect x="513.4" y="181" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="516.42" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (3,594,893 samples, 0.05%)</title><rect x="187.7" y="117" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="190.68" y="127.5" ></text>
</g>
<g >
<title>scheduler_tick (836,930 samples, 0.01%)</title><rect x="513.6" y="53" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="516.55" y="63.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (718,093 samples, 0.01%)</title><rect x="766.2" y="149" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="769.17" y="159.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,384,744 samples, 0.03%)</title><rect x="431.4" y="85" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="434.43" y="95.5" ></text>
</g>
<g >
<title>get_inbetween_points (976,707,478 samples, 12.23%)</title><rect x="857.3" y="213" width="144.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="860.26" y="223.5" >get_inbetween_points</text>
</g>
<g >
<title>tick_sched_do_timer (774,042 samples, 0.01%)</title><rect x="187.8" y="101" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="190.76" y="111.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (3,370,049 samples, 0.04%)</title><rect x="1001.0" y="117" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1003.96" y="127.5" ></text>
</g>
<g >
<title>malloc (1,130,537,365 samples, 14.16%)</title><rect x="1001.6" y="213" width="167.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1004.62" y="223.5" >malloc</text>
</g>
<g >
<title>read_hpet (705,698 samples, 0.01%)</title><rect x="1001.5" y="117" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1004.50" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,808,233 samples, 0.04%)</title><rect x="837.5" y="181" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="840.49" y="191.5" ></text>
</g>
<g >
<title>__mmput (866,007 samples, 0.01%)</title><rect x="837.9" y="133" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="840.91" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (971,760 samples, 0.01%)</title><rect x="223.4" y="165" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="226.41" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,195,238 samples, 0.03%)</title><rect x="640.3" y="117" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="643.33" y="127.5" ></text>
</g>
<g >
<title>round@plt (21,407,388 samples, 0.27%)</title><rect x="1173.9" y="213" width="3.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1176.93" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (866,007 samples, 0.01%)</title><rect x="837.9" y="181" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="840.91" y="191.5" ></text>
</g>
<g >
<title>ktime_get (902,419 samples, 0.01%)</title><rect x="1001.0" y="101" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1003.96" y="111.5" ></text>
</g>
<g >
<title>gen_all_points (7,767,217 samples, 0.10%)</title><rect x="432.0" y="197" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="435.00" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1,899,763 samples, 0.02%)</title><rect x="1001.2" y="85" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1004.17" y="95.5" ></text>
</g>
<g >
<title>task_tick_fair (1,467,689 samples, 0.02%)</title><rect x="1001.2" y="53" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1004.24" y="63.5" ></text>
</g>
<g >
<title>roundf32x (25,605,846 samples, 0.32%)</title><rect x="1177.1" y="213" width="3.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1180.09" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,107,694 samples, 0.01%)</title><rect x="560.9" y="117" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="563.86" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,899,763 samples, 0.02%)</title><rect x="1001.2" y="101" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1004.17" y="111.5" ></text>
</g>
<g >
<title>gen_all_points (130,079,502 samples, 1.63%)</title><rect x="838.0" y="213" width="19.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="841.04" y="223.5" ></text>
</g>
<g >
<title>update_process_times (1,217,416 samples, 0.02%)</title><rect x="640.5" y="69" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="643.48" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (314,918,474 samples, 3.94%)</title><rect x="719.7" y="197" width="46.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="722.73" y="207.5" >std:..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,231,052 samples, 0.03%)</title><rect x="689.8" y="165" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="692.76" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (760,048 samples, 0.01%)</title><rect x="452.1" y="133" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="455.08" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (334,067,292 samples, 4.18%)</title><rect x="640.7" y="197" width="49.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="643.72" y="207.5" >std:..</text>
</g>
<g >
<title>tick_sched_handle (1,102,528 samples, 0.01%)</title><rect x="837.6" y="101" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="840.62" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (79,514,523 samples, 1.00%)</title><rect x="188.4" y="197" width="11.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="191.42" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (971,760 samples, 0.01%)</title><rect x="223.4" y="181" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="226.41" y="191.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,705,095 samples, 0.02%)</title><rect x="513.4" y="101" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="516.42" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,670,566 samples, 0.03%)</title><rect x="837.5" y="165" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="840.51" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,865,822 samples, 0.06%)</title><rect x="187.7" y="165" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="190.68" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (967,469 samples, 0.01%)</title><rect x="560.9" y="101" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="563.88" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,194,189 samples, 0.08%)</title><rect x="431.0" y="133" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="434.05" y="143.5" ></text>
</g>
<g >
<title>update_process_times (961,166 samples, 0.01%)</title><rect x="1168.4" y="85" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1171.36" y="95.5" ></text>
</g>
<g >
<title>operator delete (110,285,750 samples, 1.38%)</title><rect x="513.7" y="197" width="16.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="516.69" y="207.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (851,878 samples, 0.01%)</title><rect x="1001.5" y="133" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1004.48" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (538,661,452 samples, 6.75%)</title><rect x="561.1" y="197" width="79.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="564.10" y="207.5" >std::_Rb_..</text>
</g>
<g >
<title>scheduler_tick (814,001 samples, 0.01%)</title><rect x="1168.4" y="69" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1171.36" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (866,007 samples, 0.01%)</title><rect x="837.9" y="197" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="840.91" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,205,250,087 samples, 15.10%)</title><rect x="10.3" y="213" width="178.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.26" y="223.5" >[libc.so.6]</text>
</g>
<g >
<title>update_wall_time (737,146 samples, 0.01%)</title><rect x="431.3" y="69" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="434.33" y="79.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,839,967 samples, 0.02%)</title><rect x="513.4" y="133" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="516.42" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,063,966 samples, 0.06%)</title><rect x="1168.0" y="197" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1170.97" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (830,067 samples, 0.01%)</title><rect x="223.4" y="117" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="226.41" y="127.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (702,999 samples, 0.01%)</title><rect x="640.4" y="85" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="643.37" y="95.5" ></text>
</g>
<g >
<title>update_process_times (2,281,117 samples, 0.03%)</title><rect x="187.9" y="85" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="190.87" y="95.5" ></text>
</g>
<g >
<title>update_load_avg (934,229 samples, 0.01%)</title><rect x="1001.3" y="37" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1004.32" y="47.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,516,433 samples, 0.06%)</title><rect x="1000.9" y="197" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1003.93" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1,102,528 samples, 0.01%)</title><rect x="837.6" y="85" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.62" y="95.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,220,118 samples, 0.04%)</title><rect x="1168.0" y="133" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1171.03" y="143.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1,141,368 samples, 0.01%)</title><rect x="1168.5" y="133" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1171.55" y="143.5" ></text>
</g>
<g >
<title>update_wall_time (774,042 samples, 0.01%)</title><rect x="187.8" y="85" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="190.76" y="95.5" ></text>
</g>
</g>
</svg>
