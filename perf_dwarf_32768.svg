<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (3,818,032 samples, 0.04%)</title><rect x="695.6" y="517" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="698.57" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,688,423 samples, 0.05%)</title><rect x="398.3" y="485" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="401.31" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,438,756 samples, 0.02%)</title><rect x="584.4" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="587.38" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,940,257 samples, 0.02%)</title><rect x="432.2" y="485" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="435.24" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (22,014,780 samples, 0.26%)</title><rect x="853.3" y="533" width="3.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="856.32" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,520,014 samples, 0.04%)</title><rect x="993.8" y="181" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="996.82" y="191.5" ></text>
</g>
<g >
<title>choose_next_point (1,289,289 samples, 0.02%)</title><rect x="313.4" y="533" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="316.37" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (195,927,016 samples, 2.28%)</title><rect x="348.1" y="485" width="26.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="351.12" y="495.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (6,153,175 samples, 0.07%)</title><rect x="434.0" y="517" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="436.95" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,192,448 samples, 0.07%)</title><rect x="1122.3" y="245" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1125.31" y="255.5" ></text>
</g>
<g >
<title>cfree (1,272,752 samples, 0.01%)</title><rect x="586.8" y="293" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="589.80" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,061,403 samples, 0.01%)</title><rect x="1104.1" y="197" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1107.14" y="207.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,779,758 samples, 0.08%)</title><rect x="1155.0" y="293" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1158.04" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,053,457 samples, 0.01%)</title><rect x="585.4" y="389" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="588.39" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (5,405,425 samples, 0.06%)</title><rect x="1004.2" y="277" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1007.17" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,919,255 samples, 0.05%)</title><rect x="1137.3" y="309" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1140.35" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (12,481,698 samples, 0.15%)</title><rect x="920.8" y="389" width="1.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="923.81" y="399.5" ></text>
</g>
<g >
<title>choose_next_point (18,354,736 samples, 0.21%)</title><rect x="1154.0" y="389" width="2.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1157.04" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,704,796 samples, 0.02%)</title><rect x="949.6" y="197" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="952.60" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (28,939,299 samples, 0.34%)</title><rect x="223.4" y="485" width="4.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="226.45" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (807,723 samples, 0.01%)</title><rect x="1149.7" y="117" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1152.70" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (25,777,509 samples, 0.30%)</title><rect x="1032.8" y="133" width="3.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1035.81" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,244,176 samples, 0.07%)</title><rect x="1130.2" y="245" width="0.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1133.23" y="255.5" ></text>
</g>
<g >
<title>is_close_int (17,752,116 samples, 0.21%)</title><rect x="428.8" y="533" width="2.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="431.78" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (8,514,798 samples, 0.10%)</title><rect x="412.3" y="469" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="415.28" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (11,779,994 samples, 0.14%)</title><rect x="1154.5" y="373" width="1.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1157.52" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,163,516 samples, 0.01%)</title><rect x="313.4" y="501" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="316.37" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (758,743 samples, 0.01%)</title><rect x="1093.7" y="293" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1096.74" y="303.5" ></text>
</g>
<g >
<title>choose_next_point (9,955,168 samples, 0.12%)</title><rect x="1011.1" y="325" width="1.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1014.12" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (3,919,255 samples, 0.05%)</title><rect x="1137.3" y="357" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1140.35" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,115,341 samples, 0.05%)</title><rect x="997.9" y="341" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1000.89" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,838,468 samples, 0.02%)</title><rect x="1102.1" y="245" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1105.09" y="255.5" ></text>
</g>
<g >
<title>choose_next_point (21,093,588 samples, 0.25%)</title><rect x="1001.0" y="341" width="2.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1004.00" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (891,791 samples, 0.01%)</title><rect x="502.3" y="517" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="505.32" y="527.5" ></text>
</g>
<g >
<title>cfree (14,228,682 samples, 0.17%)</title><rect x="1020.6" y="197" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1023.64" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (12,481,698 samples, 0.15%)</title><rect x="920.8" y="373" width="1.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="923.81" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (16,343,949 samples, 0.19%)</title><rect x="79.8" y="517" width="2.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="82.85" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (25,465,374 samples, 0.30%)</title><rect x="1133.8" y="357" width="3.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1136.81" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (31,137,326 samples, 0.36%)</title><rect x="1157.0" y="389" width="4.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1160.02" y="399.5" ></text>
</g>
<g >
<title>malloc (5,472,991 samples, 0.06%)</title><rect x="948.3" y="261" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="951.25" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (1,302,411 samples, 0.02%)</title><rect x="1169.6" y="533" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1172.62" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,519,085 samples, 0.04%)</title><rect x="1139.6" y="309" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1142.57" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,953,037 samples, 0.07%)</title><rect x="586.2" y="373" width="0.8" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="589.19" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,670,794 samples, 0.02%)</title><rect x="952.9" y="405" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="955.92" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,356,970 samples, 0.02%)</title><rect x="1164.3" y="325" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1167.27" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (914,897 samples, 0.01%)</title><rect x="972.7" y="245" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="975.69" y="255.5" ></text>
</g>
<g >
<title>cfree (1,454,051 samples, 0.02%)</title><rect x="1018.9" y="213" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1021.91" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,368,746 samples, 0.05%)</title><rect x="1161.5" y="373" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1164.46" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (16,394,359 samples, 0.19%)</title><rect x="390.5" y="469" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="393.47" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,722,027 samples, 0.02%)</title><rect x="992.6" y="245" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="995.59" y="255.5" ></text>
</g>
<g >
<title>operator new (2,444,184 samples, 0.03%)</title><rect x="1053.8" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1056.77" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (2,070,895 samples, 0.02%)</title><rect x="865.6" y="533" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="868.55" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,421,768 samples, 0.02%)</title><rect x="1092.5" y="309" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1095.50" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,105,855 samples, 0.02%)</title><rect x="1068.2" y="181" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1071.17" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,437,866 samples, 0.02%)</title><rect x="85.0" y="485" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="87.99" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (2,740,529 samples, 0.03%)</title><rect x="1088.1" y="325" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1091.06" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,436,054 samples, 0.03%)</title><rect x="1068.5" y="293" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1071.50" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,052,900 samples, 0.01%)</title><rect x="955.2" y="373" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="958.19" y="383.5" ></text>
</g>
<g >
<title>update_process_times (914,897 samples, 0.01%)</title><rect x="972.7" y="197" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="975.69" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (2,890,907 samples, 0.03%)</title><rect x="1142.5" y="389" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1145.51" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,436,054 samples, 0.03%)</title><rect x="1068.5" y="181" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1071.50" y="191.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,637,058 samples, 0.02%)</title><rect x="1162.2" y="437" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1165.19" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,341,120 samples, 0.03%)</title><rect x="1163.3" y="357" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1166.26" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,608,777 samples, 0.11%)</title><rect x="1121.8" y="261" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1124.84" y="271.5" ></text>
</g>
<g >
<title>operator delete (1,142,182 samples, 0.01%)</title><rect x="1149.2" y="213" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1152.18" y="223.5" ></text>
</g>
<g >
<title>malloc (2,649,759 samples, 0.03%)</title><rect x="987.3" y="261" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="990.34" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (37,192,292 samples, 0.43%)</title><rect x="581.9" y="469" width="5.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="584.94" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (9,010,894 samples, 0.10%)</title><rect x="408.9" y="437" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="411.93" y="447.5" ></text>
</g>
<g >
<title>operator delete (1,261,902 samples, 0.01%)</title><rect x="1103.7" y="261" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1106.75" y="271.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (16,583,933 samples, 0.19%)</title><rect x="972.9" y="357" width="2.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="975.88" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (13,710,113 samples, 0.16%)</title><rect x="397.1" y="501" width="1.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="400.07" y="511.5" ></text>
</g>
<g >
<title>malloc (775,794 samples, 0.01%)</title><rect x="1159.8" y="277" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.76" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (771,605 samples, 0.01%)</title><rect x="1145.3" y="197" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1148.35" y="207.5" ></text>
</g>
<g >
<title>clone_endio (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="133" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1109.59" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,950,121 samples, 0.14%)</title><rect x="78.2" y="501" width="1.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="81.21" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (19,085,146 samples, 0.22%)</title><rect x="1083.7" y="341" width="2.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1086.71" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (30,699,951 samples, 0.36%)</title><rect x="846.9" y="517" width="4.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="849.95" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,606,808 samples, 0.02%)</title><rect x="591.1" y="485" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="594.13" y="495.5" ></text>
</g>
<g >
<title>choose_next_point (136,966,277 samples, 1.59%)</title><rect x="1070.4" y="373" width="18.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1073.41" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (59,692,726 samples, 0.69%)</title><rect x="1145.6" y="373" width="8.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1148.60" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (907,913 samples, 0.01%)</title><rect x="1133.1" y="389" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1136.13" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,982,846 samples, 0.05%)</title><rect x="689.0" y="421" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="692.04" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (771,605 samples, 0.01%)</title><rect x="1145.3" y="245" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1148.35" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,378,703 samples, 0.02%)</title><rect x="972.7" y="261" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="975.69" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (56,620,702 samples, 0.66%)</title><rect x="1061.1" y="309" width="7.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1064.06" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (7,123,130 samples, 0.08%)</title><rect x="692.2" y="453" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="695.17" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,688,423 samples, 0.05%)</title><rect x="398.3" y="469" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="401.31" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,421,989 samples, 0.02%)</title><rect x="1121.6" y="261" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1124.64" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,255,905 samples, 0.01%)</title><rect x="1189.8" y="469" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1192.76" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (9,670,105 samples, 0.11%)</title><rect x="408.8" y="485" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="411.84" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,805,323 samples, 0.02%)</title><rect x="432.3" y="437" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="435.26" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (199,914,382 samples, 2.33%)</title><rect x="10.0" y="549" width="27.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >[..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,787,323 samples, 0.03%)</title><rect x="1031.5" y="117" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1034.53" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (9,267,933 samples, 0.11%)</title><rect x="389.2" y="469" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="392.20" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,592,374 samples, 0.02%)</title><rect x="1013.8" y="325" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1016.81" y="335.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (907,405 samples, 0.01%)</title><rect x="1146.2" y="309" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1149.17" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,620,411 samples, 0.02%)</title><rect x="1163.6" y="341" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1166.60" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,698,877 samples, 0.02%)</title><rect x="1053.0" y="101" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1056.00" y="111.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (1,209,706 samples, 0.01%)</title><rect x="941.5" y="389" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="944.48" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,138,976 samples, 0.13%)</title><rect x="1157.1" y="325" width="1.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1160.11" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,497,934 samples, 0.03%)</title><rect x="1027.1" y="165" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1030.12" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,548,477 samples, 0.03%)</title><rect x="189.5" y="533" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="192.48" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (518,534,148 samples, 6.03%)</title><rect x="998.6" y="389" width="71.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1001.63" y="399.5" >std::_Rb..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (76,886,785 samples, 0.89%)</title><rect x="923.6" y="389" width="10.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="926.61" y="399.5" ></text>
</g>
<g >
<title>operator new (1,442,713 samples, 0.02%)</title><rect x="1058.8" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1061.77" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,773,559 samples, 0.02%)</title><rect x="1189.8" y="533" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1192.76" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,648,337 samples, 0.07%)</title><rect x="1158.9" y="261" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.90" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,029,887 samples, 0.01%)</title><rect x="1169.1" y="501" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1172.07" y="511.5" ></text>
</g>
<g >
<title>cfree (1,153,877 samples, 0.01%)</title><rect x="1143.1" y="373" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1146.08" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,704,796 samples, 0.02%)</title><rect x="949.6" y="181" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="952.60" y="191.5" ></text>
</g>
<g >
<title>operator new (777,642 samples, 0.01%)</title><rect x="586.8" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="589.85" y="287.5" ></text>
</g>
<g >
<title>cfree (14,662,095 samples, 0.17%)</title><rect x="1045.9" y="181" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1048.85" y="191.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (909,748 samples, 0.01%)</title><rect x="1142.8" y="341" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1145.78" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,256,649 samples, 0.05%)</title><rect x="850.2" y="501" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="853.21" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,455,943 samples, 0.06%)</title><rect x="946.5" y="277" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="949.53" y="287.5" ></text>
</g>
<g >
<title>blk_mq_end_request_batch (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="149" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1109.59" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (14,136,385 samples, 0.16%)</title><rect x="1059.0" y="149" width="1.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1061.99" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,725,343 samples, 0.02%)</title><rect x="1027.2" y="117" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1030.16" y="127.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (54,544,061 samples, 0.63%)</title><rect x="386.8" y="533" width="7.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="389.82" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (767,270 samples, 0.01%)</title><rect x="972.7" y="181" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="975.71" y="191.5" ></text>
</g>
<g >
<title>operator delete (766,837 samples, 0.01%)</title><rect x="1158.2" y="293" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1161.20" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (9,586,682 samples, 0.11%)</title><rect x="523.2" y="485" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="526.15" y="495.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,528,238 samples, 0.02%)</title><rect x="588.0" y="565" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="590.99" y="575.5" ></text>
</g>
<g >
<title>operator delete (1,694,358 samples, 0.02%)</title><rect x="1128.4" y="245" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1131.45" y="255.5" ></text>
</g>
<g >
<title>malloc (34,713,991 samples, 0.40%)</title><rect x="1022.7" y="197" width="4.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1025.70" y="207.5" ></text>
</g>
<g >
<title>cfree (67,915,300 samples, 0.79%)</title><rect x="1109.9" y="261" width="9.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1112.91" y="271.5" ></text>
</g>
<g >
<title>operator delete (39,934,076 samples, 0.46%)</title><rect x="1172.4" y="565" width="5.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1175.44" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,243,824 samples, 0.05%)</title><rect x="1164.0" y="405" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1167.00" y="415.5" ></text>
</g>
<g >
<title>operator delete (1,880,730 samples, 0.02%)</title><rect x="991.9" y="245" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="994.85" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (2,901,000 samples, 0.03%)</title><rect x="433.4" y="485" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="436.39" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,341,120 samples, 0.03%)</title><rect x="1163.3" y="293" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1166.26" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,048,592 samples, 0.01%)</title><rect x="1094.1" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.15" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (5,405,425 samples, 0.06%)</title><rect x="1004.2" y="229" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1007.17" y="239.5" ></text>
</g>
<g >
<title>operator new (3,279,037 samples, 0.04%)</title><rect x="1121.1" y="261" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1124.14" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (94,914,616 samples, 1.10%)</title><rect x="984.7" y="277" width="13.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="987.73" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (3,006,133 samples, 0.03%)</title><rect x="81.7" y="501" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="84.68" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (35,004,073 samples, 0.41%)</title><rect x="908.1" y="453" width="4.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="911.10" y="463.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,057,076 samples, 0.01%)</title><rect x="1067.9" y="101" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1070.94" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,983,073 samples, 0.09%)</title><rect x="383.8" y="453" width="1.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="386.80" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,167,479 samples, 0.01%)</title><rect x="1056.3" y="165" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1059.31" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (4,782,308 samples, 0.06%)</title><rect x="82.6" y="517" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="85.60" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (2,859,164 samples, 0.03%)</title><rect x="741.5" y="501" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="744.47" y="511.5" ></text>
</g>
<g >
<title>operator new (1,201,966 samples, 0.01%)</title><rect x="1128.7" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1131.68" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (938,523 samples, 0.01%)</title><rect x="1156.2" y="341" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1159.18" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (22,974,867 samples, 0.27%)</title><rect x="1147.2" y="261" width="3.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1150.16" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (25,895,703 samples, 0.30%)</title><rect x="1032.8" y="197" width="3.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1035.79" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,523,187 samples, 0.02%)</title><rect x="1136.6" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.59" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (5,681,391 samples, 0.07%)</title><rect x="1069.1" y="373" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1072.05" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,569,868 samples, 0.02%)</title><rect x="1003.6" y="309" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1006.59" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (783,009 samples, 0.01%)</title><rect x="1160.2" y="229" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1163.23" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,983,073 samples, 0.09%)</title><rect x="383.8" y="437" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="386.80" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (99,888,695 samples, 1.16%)</title><rect x="1109.4" y="309" width="13.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1112.44" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,064,728 samples, 0.01%)</title><rect x="1164.1" y="293" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1167.07" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (796,450 samples, 0.01%)</title><rect x="82.4" y="501" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="85.44" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (154,705,672 samples, 1.80%)</title><rect x="539.8" y="549" width="21.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="542.79" y="559.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (778,041 samples, 0.01%)</title><rect x="1130.8" y="149" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1133.77" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,790,573 samples, 0.02%)</title><rect x="702.6" y="437" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="705.63" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (915,031 samples, 0.01%)</title><rect x="1162.1" y="357" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1165.06" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (6,911,903 samples, 0.08%)</title><rect x="983.8" y="357" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="986.78" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (9,267,933 samples, 0.11%)</title><rect x="389.2" y="453" width="1.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="392.20" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,698,171 samples, 0.04%)</title><rect x="1085.4" y="293" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1088.42" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (765,004 samples, 0.01%)</title><rect x="1145.2" y="261" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1148.17" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (729,742 samples, 0.01%)</title><rect x="1135.1" y="245" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1138.12" y="255.5" ></text>
</g>
<g >
<title>operator delete (3,667,316 samples, 0.04%)</title><rect x="1027.5" y="197" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1030.46" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (23,485,233 samples, 0.27%)</title><rect x="1147.1" y="341" width="3.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1150.11" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,450,985 samples, 0.02%)</title><rect x="1003.2" y="261" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1006.21" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (28,251,542 samples, 0.33%)</title><rect x="729.1" y="517" width="3.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="732.06" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,417,613 samples, 0.02%)</title><rect x="1168.9" y="549" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1171.86" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (778,921 samples, 0.01%)</title><rect x="922.7" y="309" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="925.73" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (35,004,073 samples, 0.41%)</title><rect x="908.1" y="437" width="4.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="911.10" y="447.5" ></text>
</g>
<g >
<title>operator new (1,201,832 samples, 0.01%)</title><rect x="1068.3" y="53" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1071.30" y="63.5" ></text>
</g>
<g >
<title>cfree (3,780,408 samples, 0.04%)</title><rect x="1064.2" y="165" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1067.17" y="175.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,022,001 samples, 0.01%)</title><rect x="561.7" y="517" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="564.66" y="527.5" ></text>
</g>
<g >
<title>operator delete (7,700,461 samples, 0.09%)</title><rect x="981.8" y="357" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="984.78" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (165,659,197 samples, 1.93%)</title><rect x="1038.2" y="229" width="22.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1041.18" y="239.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (48,018,087 samples, 0.56%)</title><rect x="1123.4" y="293" width="6.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1126.43" y="303.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,314,922 samples, 0.02%)</title><rect x="1058.2" y="117" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1061.20" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (3,899,328 samples, 0.05%)</title><rect x="951.5" y="357" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="954.54" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,114,368 samples, 0.06%)</title><rect x="410.4" y="453" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="413.44" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,333,202 samples, 0.02%)</title><rect x="696.1" y="533" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="699.09" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (48,018,087 samples, 0.56%)</title><rect x="1123.4" y="309" width="6.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1126.43" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (9,389,912 samples, 0.11%)</title><rect x="840.2" y="533" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="843.23" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,523,187 samples, 0.02%)</title><rect x="1136.6" y="277" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1139.59" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (170,942,641 samples, 1.99%)</title><rect x="975.2" y="405" width="23.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="978.16" y="415.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (16,889,912 samples, 0.20%)</title><rect x="396.6" y="533" width="2.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="399.63" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,953,037 samples, 0.07%)</title><rect x="586.2" y="341" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="589.19" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,274,271 samples, 0.03%)</title><rect x="1118.9" y="197" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1121.93" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (11,556,435 samples, 0.13%)</title><rect x="1158.8" y="325" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1161.75" y="335.5" ></text>
</g>
<g >
<title>malloc (1,275,779 samples, 0.01%)</title><rect x="952.1" y="405" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="955.11" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (11,556,435 samples, 0.13%)</title><rect x="1158.8" y="341" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1161.75" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,942,990 samples, 0.02%)</title><rect x="1137.9" y="341" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1140.88" y="351.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (909,748 samples, 0.01%)</title><rect x="1142.8" y="357" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1145.78" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (1,055,863 samples, 0.01%)</title><rect x="1153.8" y="389" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1156.80" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (9,588,122 samples, 0.11%)</title><rect x="183.1" y="517" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="186.09" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (985,675 samples, 0.01%)</title><rect x="1012.0" y="309" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1015.00" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,620,411 samples, 0.02%)</title><rect x="1163.6" y="309" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1166.60" y="319.5" ></text>
</g>
<g >
<title>nvme_irq (1,614,961 samples, 0.02%)</title><rect x="944.4" y="261" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="947.41" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,186,316 samples, 0.01%)</title><rect x="960.0" y="309" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="963.00" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,197,123 samples, 0.01%)</title><rect x="1156.0" y="341" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1158.98" y="351.5" ></text>
</g>
<g >
<title>cfree (1,012,410 samples, 0.01%)</title><rect x="1037.3" y="309" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1040.30" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,269,893 samples, 0.17%)</title><rect x="1059.0" y="181" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1061.97" y="191.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (2,380,428 samples, 0.03%)</title><rect x="941.2" y="389" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="944.15" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (941,826 samples, 0.01%)</title><rect x="82.1" y="517" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="85.09" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,764,548 samples, 0.02%)</title><rect x="1007.3" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1010.25" y="319.5" ></text>
</g>
<g >
<title>cfree (1,582,527 samples, 0.02%)</title><rect x="920.0" y="405" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="922.97" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,436,054 samples, 0.03%)</title><rect x="1068.5" y="261" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1071.50" y="271.5" ></text>
</g>
<g >
<title>handle_edge_irq (1,614,961 samples, 0.02%)</title><rect x="944.4" y="309" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="947.41" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (5,694,996 samples, 0.07%)</title><rect x="1163.1" y="405" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1166.06" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (909,748 samples, 0.01%)</title><rect x="1142.8" y="373" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1145.78" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (116,654,145 samples, 1.36%)</title><rect x="858.2" y="549" width="16.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="861.22" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (105,443,535 samples, 1.23%)</title><rect x="402.1" y="517" width="14.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="405.08" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (5,864,348 samples, 0.07%)</title><rect x="1139.5" y="405" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1142.48" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (804,338 samples, 0.01%)</title><rect x="1182.4" y="549" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1185.36" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,579,350 samples, 0.02%)</title><rect x="1068.8" y="373" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1071.83" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (43,858,550 samples, 0.51%)</title><rect x="733.6" y="533" width="6.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="736.63" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,825,660 samples, 0.08%)</title><rect x="921.4" y="309" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="924.41" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,020,307 samples, 0.01%)</title><rect x="81.5" y="501" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="84.54" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (1,442,763 samples, 0.02%)</title><rect x="1088.7" y="357" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1091.67" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,028,312 samples, 0.01%)</title><rect x="584.6" y="405" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="587.60" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (877,403 samples, 0.01%)</title><rect x="1066.2" y="133" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1069.25" y="143.5" ></text>
</g>
<g >
<title>update_process_times (1,162,134 samples, 0.01%)</title><rect x="940.9" y="277" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="943.85" y="287.5" ></text>
</g>
<g >
<title>choose_next_point (1,822,889,976 samples, 21.21%)</title><rect x="914.7" y="469" width="250.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="917.67" y="479.5" >choose_next_point</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (12,779,348 samples, 0.15%)</title><rect x="912.9" y="469" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="915.91" y="479.5" ></text>
</g>
<g >
<title>operator new (922,999 samples, 0.01%)</title><rect x="1118.7" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1121.71" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,820,808 samples, 0.02%)</title><rect x="1053.0" y="133" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1056.00" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (768,461 samples, 0.01%)</title><rect x="1132.6" y="277" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1135.60" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,379,242 samples, 0.02%)</title><rect x="1129.8" y="165" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1132.78" y="175.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2,065,929 samples, 0.02%)</title><rect x="974.8" y="245" width="0.3" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="977.82" y="255.5" ></text>
</g>
<g >
<title>malloc (10,936,591 samples, 0.13%)</title><rect x="1119.3" y="261" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1122.31" y="271.5" ></text>
</g>
<g >
<title>operator new (1,935,103 samples, 0.02%)</title><rect x="933.4" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="936.37" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (768,461 samples, 0.01%)</title><rect x="1132.6" y="293" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1135.60" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,445,716 samples, 0.02%)</title><rect x="977.5" y="357" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="980.47" y="367.5" ></text>
</g>
<g >
<title>update_process_times (1,043,565 samples, 0.01%)</title><rect x="1053.1" y="53" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1056.09" y="63.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (13,757,455 samples, 0.16%)</title><rect x="78.0" y="533" width="1.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="80.96" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (12,017,516 samples, 0.14%)</title><rect x="845.3" y="485" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="848.30" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (1,701,547 samples, 0.02%)</title><rect x="695.9" y="485" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="698.86" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (904,850 samples, 0.01%)</title><rect x="587.8" y="453" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="590.85" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (41,022,531 samples, 0.48%)</title><rect x="945.9" y="373" width="5.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="948.90" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,520,014 samples, 0.04%)</title><rect x="993.8" y="149" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="996.82" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,994,362 samples, 0.05%)</title><rect x="1160.4" y="309" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1163.45" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (807,723 samples, 0.01%)</title><rect x="1149.7" y="101" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1152.70" y="111.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (5,694,996 samples, 0.07%)</title><rect x="1163.1" y="437" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1166.06" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,883,746 samples, 0.02%)</title><rect x="1163.6" y="357" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1166.58" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (12,048,910 samples, 0.14%)</title><rect x="1143.8" y="325" width="1.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1146.80" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (99,888,695 samples, 1.16%)</title><rect x="1109.4" y="277" width="13.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1112.44" y="287.5" ></text>
</g>
<g >
<title>cfree (922,876 samples, 0.01%)</title><rect x="1137.6" y="277" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1140.63" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (10,689,673 samples, 0.12%)</title><rect x="405.0" y="501" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="407.96" y="511.5" ></text>
</g>
<g >
<title>decltype  (2,215,207 samples, 0.03%)</title><rect x="1031.6" y="101" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1034.61" y="111.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (78,244,710 samples, 0.91%)</title><rect x="673.5" y="485" width="10.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="676.46" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,204,763 samples, 0.01%)</title><rect x="944.7" y="293" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="947.68" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (3,899,328 samples, 0.05%)</title><rect x="951.5" y="341" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="954.54" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,356,970 samples, 0.02%)</title><rect x="1164.3" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1167.27" y="383.5" ></text>
</g>
<g >
<title>decltype  (2,368,563 samples, 0.03%)</title><rect x="416.2" y="469" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="419.24" y="479.5" ></text>
</g>
<g >
<title>malloc (12,214,402 samples, 0.14%)</title><rect x="1005.1" y="341" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1008.05" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,056,766 samples, 0.04%)</title><rect x="1129.6" y="229" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1132.60" y="239.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,585,082 samples, 0.03%)</title><rect x="566.7" y="533" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="569.72" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,356,970 samples, 0.02%)</title><rect x="1164.3" y="309" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1167.27" y="319.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (9,762,953 samples, 0.11%)</title><rect x="978.4" y="325" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="981.42" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (772,985 samples, 0.01%)</title><rect x="1102.7" y="245" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1105.68" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (903,559 samples, 0.01%)</title><rect x="1158.5" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1161.52" y="287.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (5,363,473 samples, 0.06%)</title><rect x="203.2" y="533" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="206.23" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,023,724 samples, 0.01%)</title><rect x="1117.0" y="245" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1120.03" y="255.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1,614,961 samples, 0.02%)</title><rect x="944.4" y="277" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="947.41" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (18,669,281 samples, 0.22%)</title><rect x="1158.6" y="373" width="2.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1161.64" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,745,928 samples, 0.02%)</title><rect x="591.1" y="501" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="594.13" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,704,015 samples, 0.04%)</title><rect x="1122.6" y="213" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1125.65" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (877,403 samples, 0.01%)</title><rect x="1066.2" y="101" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1069.25" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (25,686,356 samples, 0.30%)</title><rect x="181.4" y="533" width="3.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="184.38" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,982,846 samples, 0.05%)</title><rect x="689.0" y="405" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="692.04" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (50,135,504 samples, 0.58%)</title><rect x="1061.6" y="245" width="6.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1064.58" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,186,316 samples, 0.01%)</title><rect x="960.0" y="325" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="963.00" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (37,192,292 samples, 0.43%)</title><rect x="581.9" y="437" width="5.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="584.94" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (149,588,478 samples, 1.74%)</title><rect x="665.8" y="517" width="20.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="668.80" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (21,526,750 samples, 0.25%)</title><rect x="516.8" y="485" width="2.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="519.77" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,552,163 samples, 0.02%)</title><rect x="991.6" y="197" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="994.64" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (50,401,535 samples, 0.59%)</title><rect x="1061.6" y="277" width="6.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1064.58" y="287.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (3,856,470 samples, 0.04%)</title><rect x="738.1" y="469" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="741.13" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (25,777,509 samples, 0.30%)</title><rect x="1032.8" y="117" width="3.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1035.81" y="127.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,825,660 samples, 0.08%)</title><rect x="921.4" y="325" width="0.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="924.41" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,449,194 samples, 0.05%)</title><rect x="1157.4" y="277" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.37" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (28,583,106 samples, 0.33%)</title><rect x="1133.4" y="405" width="3.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1136.38" y="415.5" ></text>
</g>
<g >
<title>choose_next_point (1,800,830,660 samples, 20.96%)</title><rect x="914.8" y="437" width="247.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="917.78" y="447.5" >choose_next_point</text>
</g>
<g >
<title>malloc (4,848,265 samples, 0.06%)</title><rect x="1151.9" y="197" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1154.92" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,412,010 samples, 0.07%)</title><rect x="1004.2" y="309" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1007.17" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,983,073 samples, 0.09%)</title><rect x="383.8" y="421" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="386.80" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,090,118 samples, 0.02%)</title><rect x="183.6" y="453" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="186.59" y="463.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (28,362,260 samples, 0.33%)</title><rect x="701.0" y="501" width="3.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="704.03" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (5,844,334 samples, 0.07%)</title><rect x="587.0" y="469" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="590.04" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (2,186,352 samples, 0.03%)</title><rect x="392.7" y="501" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="395.72" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,073,807 samples, 0.01%)</title><rect x="944.7" y="261" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="947.70" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (802,930 samples, 0.01%)</title><rect x="923.0" y="309" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="925.98" y="319.5" ></text>
</g>
<g >
<title>update_process_times (916,555 samples, 0.01%)</title><rect x="1102.2" y="133" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1105.18" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (9,389,912 samples, 0.11%)</title><rect x="840.2" y="517" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="843.23" y="527.5" ></text>
</g>
<g >
<title>round@plt (1,548,591 samples, 0.02%)</title><rect x="832.6" y="549" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="835.61" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,368,119 samples, 0.03%)</title><rect x="1150.0" y="213" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1152.99" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (18,855,088 samples, 0.22%)</title><rect x="431.4" y="517" width="2.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="434.37" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,325,109 samples, 0.07%)</title><rect x="993.5" y="229" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="996.51" y="239.5" ></text>
</g>
<g >
<title>operator new (1,959,874 samples, 0.02%)</title><rect x="1137.6" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1140.60" y="303.5" ></text>
</g>
<g >
<title>operator new (1,582,308 samples, 0.02%)</title><rect x="1150.1" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.08" y="111.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (43,243,389 samples, 0.50%)</title><rect x="1077.1" y="277" width="5.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1080.06" y="287.5" ></text>
</g>
<g >
<title>__folio_end_writeback (1,930,941 samples, 0.02%)</title><rect x="1106.7" y="69" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1109.73" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,377,386 samples, 0.02%)</title><rect x="1089.0" y="325" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1092.03" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,368,119 samples, 0.03%)</title><rect x="1150.0" y="165" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1152.99" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,436,054 samples, 0.03%)</title><rect x="1068.5" y="245" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1071.50" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (6,885,934 samples, 0.08%)</title><rect x="703.9" y="469" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="706.92" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,086,113 samples, 0.13%)</title><rect x="1030.4" y="181" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1033.39" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,694,996 samples, 0.07%)</title><rect x="1163.1" y="389" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1166.06" y="399.5" ></text>
</g>
<g >
<title>cfree (6,170,040 samples, 0.07%)</title><rect x="1157.1" y="293" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1160.13" y="303.5" ></text>
</g>
<g >
<title>[[stack]] (1,595,792,832 samples, 18.57%)</title><rect x="10.0" y="565" width="219.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >[[stack]]</text>
</g>
<g >
<title>is_close_int (2,693,138 samples, 0.03%)</title><rect x="1139.0" y="405" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1142.02" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,188,147 samples, 0.01%)</title><rect x="585.9" y="389" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="588.92" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (5,864,348 samples, 0.07%)</title><rect x="1139.5" y="389" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1142.48" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,523,187 samples, 0.02%)</title><rect x="1136.6" y="245" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1139.59" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (15,676,676 samples, 0.18%)</title><rect x="942.7" y="373" width="2.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="945.69" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (9,010,894 samples, 0.10%)</title><rect x="408.9" y="469" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="411.93" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (777,170 samples, 0.01%)</title><rect x="689.6" y="437" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="692.58" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,996,245 samples, 0.07%)</title><rect x="1009.7" y="325" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1012.75" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (5,541,621 samples, 0.06%)</title><rect x="1161.3" y="405" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1164.30" y="415.5" ></text>
</g>
<g >
<title>malloc (791,676 samples, 0.01%)</title><rect x="1153.5" y="181" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1156.49" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (48,018,087 samples, 0.56%)</title><rect x="1123.4" y="277" width="6.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1126.43" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (95,451,435 samples, 1.11%)</title><rect x="984.7" y="341" width="13.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="987.73" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (17,369,165 samples, 0.20%)</title><rect x="1058.5" y="197" width="2.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1061.55" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (804,236 samples, 0.01%)</title><rect x="1169.4" y="565" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1172.38" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,400,375 samples, 0.04%)</title><rect x="702.1" y="453" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="705.10" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (6,244,176 samples, 0.07%)</title><rect x="1130.2" y="309" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1133.23" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (1,012,021 samples, 0.01%)</title><rect x="1163.8" y="405" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1166.84" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,556,969 samples, 0.04%)</title><rect x="1153.3" y="261" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1156.31" y="271.5" ></text>
</g>
<g >
<title>decltype  (3,541,021 samples, 0.04%)</title><rect x="704.4" y="405" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="707.38" y="415.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,317,235 samples, 0.02%)</title><rect x="922.3" y="325" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="925.35" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (61,013,009 samples, 0.71%)</title><rect x="1145.6" y="421" width="8.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1148.57" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (158,976,926 samples, 1.85%)</title><rect x="1014.5" y="261" width="21.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1017.52" y="271.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (778,921 samples, 0.01%)</title><rect x="922.7" y="293" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="925.73" y="303.5" ></text>
</g>
<g >
<title>get_inbetween_points (3,653,659 samples, 0.04%)</title><rect x="1048.0" y="181" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1050.95" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,953,037 samples, 0.07%)</title><rect x="586.2" y="405" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="589.19" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (938,362 samples, 0.01%)</title><rect x="1013.8" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1016.83" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,231,493 samples, 0.07%)</title><rect x="851.2" y="517" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="854.16" y="527.5" ></text>
</g>
<g >
<title>operator new (9,037,503 samples, 0.11%)</title><rect x="584.9" y="421" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="587.90" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,403,439 samples, 0.26%)</title><rect x="924.0" y="277" width="3.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="926.96" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (794,273 samples, 0.01%)</title><rect x="1153.1" y="197" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1156.15" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,896,605 samples, 0.03%)</title><rect x="922.9" y="389" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="925.90" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (3,409,196 samples, 0.04%)</title><rect x="1087.6" y="277" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1090.56" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (5,351,121 samples, 0.06%)</title><rect x="1011.3" y="309" width="0.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1014.26" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (94,914,616 samples, 1.10%)</title><rect x="984.7" y="293" width="13.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="987.73" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,314,580 samples, 0.02%)</title><rect x="960.0" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="962.98" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (157,054,908 samples, 1.83%)</title><rect x="953.6" y="389" width="21.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="956.59" y="399.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (8,317,879 samples, 0.10%)</title><rect x="696.3" y="533" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="699.31" y="543.5" ></text>
</g>
<g >
<title>malloc (2,351,021 samples, 0.03%)</title><rect x="929.4" y="261" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="932.38" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (39,464,097 samples, 0.46%)</title><rect x="387.3" y="485" width="5.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="390.30" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (268,129,748 samples, 3.12%)</title><rect x="503.0" y="549" width="36.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="505.97" y="559.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (9,031,989 samples, 0.11%)</title><rect x="1140.7" y="389" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1143.73" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (18,899,393 samples, 0.22%)</title><rect x="411.1" y="485" width="2.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="414.14" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,689,521 samples, 0.02%)</title><rect x="991.6" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="994.62" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (914,897 samples, 0.01%)</title><rect x="972.7" y="213" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="975.69" y="223.5" ></text>
</g>
<g >
<title>choose_next_point (149,065,555 samples, 1.73%)</title><rect x="62.8" y="549" width="20.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="65.79" y="559.5" ></text>
</g>
<g >
<title>get_inbetween_points (5,726,347 samples, 0.07%)</title><rect x="1169.8" y="565" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1172.80" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,828,000 samples, 0.02%)</title><rect x="432.9" y="469" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="435.94" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,400,375 samples, 0.04%)</title><rect x="702.1" y="469" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="705.10" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,184,499 samples, 0.14%)</title><rect x="1143.8" y="357" width="1.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1146.80" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (170,008,527 samples, 1.98%)</title><rect x="834.9" y="549" width="23.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="837.87" y="559.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (47,783,421 samples, 0.56%)</title><rect x="908.1" y="501" width="6.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="911.10" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (99,888,695 samples, 1.16%)</title><rect x="1109.4" y="341" width="13.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1112.44" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (108,430,914 samples, 1.26%)</title><rect x="1093.9" y="293" width="14.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1096.86" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,938,066 samples, 0.06%)</title><rect x="848.8" y="501" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="851.77" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,024,257 samples, 0.02%)</title><rect x="183.9" y="501" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="186.87" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (4,222,624 samples, 0.05%)</title><rect x="694.7" y="469" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="697.65" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (3,382,851 samples, 0.04%)</title><rect x="737.7" y="469" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="740.66" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,356,344 samples, 0.05%)</title><rect x="949.3" y="261" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="952.31" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,556,435 samples, 0.13%)</title><rect x="1158.8" y="293" width="1.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1161.75" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (165,659,197 samples, 1.93%)</title><rect x="1038.2" y="245" width="22.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1041.18" y="255.5" >s..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (868,086 samples, 0.01%)</title><rect x="1162.5" y="357" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1165.48" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,085,501 samples, 0.04%)</title><rect x="79.4" y="469" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="82.42" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (789,343 samples, 0.01%)</title><rect x="1007.5" y="309" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1010.53" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,979,975 samples, 0.03%)</title><rect x="1085.9" y="309" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1088.93" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,462,902 samples, 0.02%)</title><rect x="944.6" y="341" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="947.65" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (804,236 samples, 0.01%)</title><rect x="1169.4" y="549" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1172.38" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (35,556,455 samples, 0.41%)</title><rect x="375.0" y="501" width="4.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="378.02" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (775,317 samples, 0.01%)</title><rect x="1156.4" y="357" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1159.45" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,311,157 samples, 0.02%)</title><rect x="1102.1" y="181" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1105.12" y="191.5" ></text>
</g>
<g >
<title>malloc (13,549,017 samples, 0.16%)</title><rect x="1170.6" y="565" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1173.58" y="575.5" ></text>
</g>
<g >
<title>cfree (3,601,797 samples, 0.04%)</title><rect x="1010.6" y="325" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1013.62" y="335.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (4,762,785 samples, 0.06%)</title><rect x="726.3" y="533" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="729.26" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (53,295,216 samples, 0.62%)</title><rect x="1154.0" y="421" width="7.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1156.98" y="431.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (2,119,758 samples, 0.02%)</title><rect x="413.4" y="469" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="416.45" y="479.5" ></text>
</g>
<g >
<title>operator delete (1,521,188 samples, 0.02%)</title><rect x="1066.4" y="165" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1069.37" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (13,250,585 samples, 0.15%)</title><rect x="739.7" y="533" width="1.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="742.65" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (24,932,721 samples, 0.29%)</title><rect x="687.3" y="501" width="3.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="690.30" y="511.5" ></text>
</g>
<g >
<title>handle_edge_irq (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="213" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1109.59" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,896,605 samples, 0.03%)</title><rect x="922.9" y="373" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="925.90" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1,042,585 samples, 0.01%)</title><rect x="1092.8" y="309" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1095.84" y="319.5" ></text>
</g>
<g >
<title>operator new (4,994,778 samples, 0.06%)</title><rect x="982.8" y="357" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="985.84" y="367.5" ></text>
</g>
<g >
<title>operator new (10,318,380 samples, 0.12%)</title><rect x="1151.7" y="213" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.66" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (25,211,551 samples, 0.29%)</title><rect x="1150.3" y="341" width="3.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1153.34" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,341,120 samples, 0.03%)</title><rect x="1163.3" y="277" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1166.26" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (794,273 samples, 0.01%)</title><rect x="1153.1" y="133" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1156.15" y="143.5" ></text>
</g>
<g >
<title>is_close_int (914,978 samples, 0.01%)</title><rect x="1156.8" y="373" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1159.79" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (3,100,820 samples, 0.04%)</title><rect x="1131.8" y="357" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1134.78" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,848,193 samples, 0.03%)</title><rect x="585.5" y="389" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="588.53" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (15,317,292 samples, 0.18%)</title><rect x="1086.3" y="357" width="2.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1089.34" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,938,066 samples, 0.06%)</title><rect x="848.8" y="453" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="851.77" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,620,411 samples, 0.02%)</title><rect x="1163.6" y="325" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1166.60" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (22,185,753 samples, 0.26%)</title><rect x="691.1" y="485" width="3.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="694.14" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,557,646 samples, 0.02%)</title><rect x="396.2" y="533" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="399.15" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (919,146 samples, 0.01%)</title><rect x="1042.9" y="181" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1045.85" y="191.5" ></text>
</g>
<g >
<title>gen_all_points (128,229,447 samples, 1.49%)</title><rect x="399.0" y="549" width="17.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="401.95" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (50,356,454 samples, 0.59%)</title><rect x="379.9" y="517" width="6.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="382.90" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (22,185,753 samples, 0.26%)</title><rect x="691.1" y="501" width="3.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="694.14" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,166,038 samples, 0.01%)</title><rect x="1168.9" y="517" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1171.89" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (39,355,014 samples, 0.46%)</title><rect x="1111.6" y="245" width="5.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1114.63" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,938,066 samples, 0.06%)</title><rect x="848.8" y="485" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="851.77" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (159,632,282 samples, 1.86%)</title><rect x="1014.5" y="309" width="21.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1017.52" y="319.5" >s..</text>
</g>
<g >
<title>choose_next_point (290,502,539 samples, 3.38%)</title><rect x="657.6" y="549" width="39.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="660.56" y="559.5" >cho..</text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (1,049,510 samples, 0.01%)</title><rect x="1169.7" y="517" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1172.65" y="527.5" ></text>
</g>
<g >
<title>operator new (87,860,861 samples, 1.02%)</title><rect x="1019.8" y="213" width="12.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1022.85" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,790,573 samples, 0.02%)</title><rect x="702.6" y="453" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="705.63" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (892,813 samples, 0.01%)</title><rect x="432.5" y="437" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="435.53" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (904,850 samples, 0.01%)</title><rect x="587.8" y="437" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="590.85" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,477,825 samples, 0.02%)</title><rect x="1108.4" y="181" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1111.42" y="191.5" ></text>
</g>
<g >
<title>is_close_int (26,017,988 samples, 0.30%)</title><rect x="941.6" y="389" width="3.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="944.65" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,042,914 samples, 0.01%)</title><rect x="1126.2" y="197" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1129.21" y="207.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (78,244,710 samples, 0.91%)</title><rect x="673.5" y="469" width="10.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="676.46" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,341,120 samples, 0.03%)</title><rect x="1163.3" y="261" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1166.26" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,053,457 samples, 0.01%)</title><rect x="585.4" y="325" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="588.39" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,133,916 samples, 0.01%)</title><rect x="1128.9" y="245" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1131.90" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,556,969 samples, 0.04%)</title><rect x="1153.3" y="293" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1156.31" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (22,974,867 samples, 0.27%)</title><rect x="1147.2" y="245" width="3.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1150.16" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,805,323 samples, 0.02%)</title><rect x="432.3" y="453" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="435.26" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (6,579,684 samples, 0.08%)</title><rect x="561.0" y="549" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="564.03" y="559.5" ></text>
</g>
<g >
<title>malloc (795,139 samples, 0.01%)</title><rect x="927.7" y="277" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="930.73" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,478,383 samples, 0.06%)</title><rect x="1141.2" y="341" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1144.22" y="351.5" ></text>
</g>
<g >
<title>choose_next_point (14,903,694 samples, 0.17%)</title><rect x="1167.3" y="565" width="2.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1170.33" y="575.5" ></text>
</g>
<g >
<title>operator delete (936,536 samples, 0.01%)</title><rect x="1152.6" y="197" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1155.59" y="207.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,751,164 samples, 0.03%)</title><rect x="1183.0" y="517" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1186.02" y="527.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,263,255 samples, 0.01%)</title><rect x="588.0" y="517" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="591.00" y="527.5" ></text>
</g>
<g >
<title>cfree (1,432,902 samples, 0.02%)</title><rect x="1164.1" y="309" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1167.05" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (12,439,555 samples, 0.14%)</title><rect x="1001.5" y="293" width="1.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1004.50" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,704,015 samples, 0.04%)</title><rect x="1122.6" y="229" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1125.65" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,521,514 samples, 0.02%)</title><rect x="1127.3" y="149" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1130.27" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (41,092,947 samples, 0.48%)</title><rect x="699.3" y="517" width="5.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="702.28" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,281,776 samples, 0.01%)</title><rect x="1102.3" y="197" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1105.34" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (729,742 samples, 0.01%)</title><rect x="1135.1" y="293" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1138.12" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (32,864,291 samples, 0.38%)</title><rect x="690.7" y="533" width="4.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="693.72" y="543.5" ></text>
</g>
<g >
<title>choose_next_point (1,822,889,976 samples, 21.21%)</title><rect x="914.7" y="485" width="250.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="917.67" y="495.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,692,454 samples, 0.03%)</title><rect x="850.8" y="501" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="853.79" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (5,524,978 samples, 0.06%)</title><rect x="1163.8" y="437" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1166.84" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (161,089,546 samples, 1.87%)</title><rect x="1014.3" y="325" width="22.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1017.32" y="335.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (13,566,383 samples, 0.16%)</title><rect x="509.9" y="517" width="1.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="512.94" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (738,922 samples, 0.01%)</title><rect x="194.1" y="517" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="197.10" y="527.5" ></text>
</g>
<g >
<title>roundf32x (3,176,458 samples, 0.04%)</title><rect x="502.5" y="549" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="505.54" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,599,327 samples, 0.02%)</title><rect x="83.0" y="469" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="86.04" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (13,250,585 samples, 0.15%)</title><rect x="739.7" y="485" width="1.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="742.65" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,751,164 samples, 0.03%)</title><rect x="1183.0" y="549" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1186.02" y="559.5" ></text>
</g>
<g >
<title>operator new (3,415,866 samples, 0.04%)</title><rect x="1004.4" y="213" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1007.41" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,400,375 samples, 0.04%)</title><rect x="702.1" y="437" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="705.10" y="447.5" ></text>
</g>
<g >
<title>nvme_irq (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="165" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1109.59" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (19,954,661 samples, 0.23%)</title><rect x="1150.5" y="261" width="2.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1153.51" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (804,687 samples, 0.01%)</title><rect x="951.3" y="309" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="954.34" y="319.5" ></text>
</g>
<g >
<title>cfree (1,577,927 samples, 0.02%)</title><rect x="584.4" y="421" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="587.38" y="431.5" ></text>
</g>
<g >
<title>operator new (3,918,925 samples, 0.05%)</title><rect x="657.0" y="533" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="659.97" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (25,529,382 samples, 0.30%)</title><rect x="930.5" y="293" width="3.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="933.54" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (2,077,587 samples, 0.02%)</title><rect x="550.3" y="533" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="553.35" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,447,689 samples, 0.05%)</title><rect x="735.9" y="485" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="738.89" y="495.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,135,160 samples, 0.01%)</title><rect x="502.3" y="533" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="505.28" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (2,468,551 samples, 0.03%)</title><rect x="395.8" y="501" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="398.82" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (915,031 samples, 0.01%)</title><rect x="1162.1" y="405" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1165.06" y="415.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,421,241 samples, 0.02%)</title><rect x="588.0" y="549" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="591.00" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (22,974,867 samples, 0.27%)</title><rect x="1147.2" y="293" width="3.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1150.16" y="303.5" ></text>
</g>
<g >
<title>is_close_int (7,873,619 samples, 0.09%)</title><rect x="92.0" y="533" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="94.96" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,942,990 samples, 0.02%)</title><rect x="1137.9" y="325" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1140.88" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (12,048,910 samples, 0.14%)</title><rect x="1143.8" y="309" width="1.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1146.80" y="319.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,751,164 samples, 0.03%)</title><rect x="1183.0" y="533" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1186.02" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,932,131 samples, 0.09%)</title><rect x="1130.0" y="325" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1133.02" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,264,796 samples, 0.07%)</title><rect x="999.5" y="341" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1002.48" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,352,857 samples, 0.02%)</title><rect x="1027.2" y="85" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1030.21" y="95.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (9,586,682 samples, 0.11%)</title><rect x="523.2" y="437" width="1.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="526.15" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,815,776 samples, 0.02%)</title><rect x="1116.7" y="149" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1119.73" y="159.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,366,712 samples, 0.03%)</title><rect x="1188.1" y="549" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.09" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (12,048,910 samples, 0.14%)</title><rect x="1143.8" y="341" width="1.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1146.80" y="351.5" ></text>
</g>
<g >
<title>malloc (3,671,457 samples, 0.04%)</title><rect x="1019.2" y="213" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1022.22" y="223.5" ></text>
</g>
<g >
<title>operator new (1,007,028 samples, 0.01%)</title><rect x="1013.7" y="325" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1016.67" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,901,000 samples, 0.03%)</title><rect x="433.4" y="469" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="436.39" y="479.5" ></text>
</g>
<g >
<title>__btrfs_bio_end_io (1,614,961 samples, 0.02%)</title><rect x="944.4" y="213" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="947.41" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (17,490,993 samples, 0.20%)</title><rect x="995.3" y="149" width="2.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="998.28" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,704,796 samples, 0.02%)</title><rect x="949.6" y="165" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="952.60" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,994,362 samples, 0.05%)</title><rect x="1160.4" y="341" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.45" y="351.5" ></text>
</g>
<g >
<title>cfree (27,719,471 samples, 0.32%)</title><rect x="1123.7" y="245" width="3.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1126.67" y="255.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,329,821 samples, 0.09%)</title><rect x="1002.2" y="261" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1005.21" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (19,085,146 samples, 0.22%)</title><rect x="1083.7" y="357" width="2.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1086.71" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (121,423,601 samples, 1.41%)</title><rect x="667.5" y="501" width="16.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="670.53" y="511.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (15,606,740 samples, 0.18%)</title><rect x="684.2" y="485" width="2.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="687.20" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,477,825 samples, 0.02%)</title><rect x="1108.4" y="213" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1111.42" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (3,519,085 samples, 0.04%)</title><rect x="1139.6" y="357" width="0.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1142.57" y="367.5" ></text>
</g>
<g >
<title>choose_next_point (1,402,867 samples, 0.02%)</title><rect x="584.6" y="421" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="587.60" y="431.5" ></text>
</g>
<g >
<title>operator new (14,926,808 samples, 0.17%)</title><rect x="947.9" y="277" width="2.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="950.85" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (9,367,469 samples, 0.11%)</title><rect x="393.0" y="485" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="396.02" y="495.5" ></text>
</g>
<g >
<title>nvme_irq (2,065,929 samples, 0.02%)</title><rect x="974.8" y="229" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="977.82" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (48,049,072 samples, 0.56%)</title><rect x="923.9" y="341" width="6.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="926.94" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (2,902,570 samples, 0.03%)</title><rect x="93.6" y="501" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="96.56" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,061,403 samples, 0.01%)</title><rect x="1104.1" y="229" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1107.14" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (166,596,530 samples, 1.94%)</title><rect x="1038.2" y="293" width="22.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1041.18" y="303.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (23,107,958 samples, 0.27%)</title><rect x="1147.2" y="325" width="3.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1150.16" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,896,830 samples, 0.03%)</title><rect x="949.5" y="245" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="952.51" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,915,109 samples, 0.02%)</title><rect x="79.0" y="421" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="82.00" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (260,694,153 samples, 3.03%)</title><rect x="591.4" y="549" width="35.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="594.44" y="559.5" >[li..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,338,860 samples, 0.02%)</title><rect x="1149.7" y="165" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1152.70" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,239,052 samples, 0.03%)</title><rect x="949.6" y="229" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="952.60" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,717,328 samples, 0.07%)</title><rect x="394.3" y="533" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="397.31" y="543.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (6,125,043 samples, 0.07%)</title><rect x="1137.3" y="373" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1140.33" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (72,137,438 samples, 0.84%)</title><rect x="68.1" y="533" width="9.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="71.05" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (778,041 samples, 0.01%)</title><rect x="1130.8" y="101" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1133.77" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,048,403 samples, 0.01%)</title><rect x="930.3" y="261" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="933.34" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,825,660 samples, 0.08%)</title><rect x="921.4" y="341" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="924.41" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,575,838 samples, 0.02%)</title><rect x="1154.8" y="325" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1157.83" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;::pair&lt;int, double&gt; (759,673 samples, 0.01%)</title><rect x="945.8" y="389" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="948.78" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (771,605 samples, 0.01%)</title><rect x="1145.3" y="261" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1148.35" y="271.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (7,417,008 samples, 0.09%)</title><rect x="415.2" y="421" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="418.22" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,521,514 samples, 0.02%)</title><rect x="1127.3" y="133" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1130.27" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,368,746 samples, 0.05%)</title><rect x="1161.5" y="341" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1164.46" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (765,180 samples, 0.01%)</title><rect x="1066.2" y="85" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1069.25" y="95.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (12,299,115 samples, 0.14%)</title><rect x="385.1" y="485" width="1.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="388.13" y="495.5" ></text>
</g>
<g >
<title>operator new (1,916,319 samples, 0.02%)</title><rect x="1068.6" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1071.55" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,012,940 samples, 0.08%)</title><rect x="1129.1" y="245" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1132.06" y="255.5" ></text>
</g>
<g >
<title>std::abs (2,479,896 samples, 0.03%)</title><rect x="944.9" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="947.88" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,090,118 samples, 0.02%)</title><rect x="183.6" y="501" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="186.59" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,440,934 samples, 0.04%)</title><rect x="180.9" y="485" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="183.91" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (474,432,658 samples, 5.52%)</title><rect x="229.1" y="549" width="65.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="232.14" y="559.5" >[libc.s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (46,826,938 samples, 0.54%)</title><rect x="186.7" y="549" width="6.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="189.67" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (6,547,615 samples, 0.08%)</title><rect x="585.2" y="405" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="588.24" y="415.5" ></text>
</g>
<g >
<title>malloc (2,065,729 samples, 0.02%)</title><rect x="1044.6" y="197" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1047.63" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (12,320,996 samples, 0.14%)</title><rect x="1140.5" y="421" width="1.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1143.53" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (803,412 samples, 0.01%)</title><rect x="1069.8" y="389" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1072.83" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (979,410 samples, 0.01%)</title><rect x="1162.3" y="421" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1165.28" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,716,282 samples, 0.02%)</title><rect x="1088.4" y="341" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1091.44" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (14,136,385 samples, 0.16%)</title><rect x="1059.0" y="165" width="1.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1061.99" y="175.5" ></text>
</g>
<g >
<title>cfree (3,034,564 samples, 0.04%)</title><rect x="947.3" y="277" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="950.28" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (460,209,841 samples, 5.36%)</title><rect x="1069.9" y="405" width="63.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1072.94" y="415.5" >std::s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (929,356 samples, 0.01%)</title><rect x="1162.9" y="309" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1165.93" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,368,119 samples, 0.03%)</title><rect x="1150.0" y="149" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1152.99" y="159.5" ></text>
</g>
<g >
<title>__btrfs_bio_end_io (1,934,391 samples, 0.02%)</title><rect x="974.8" y="181" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="977.84" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,172,508 samples, 0.01%)</title><rect x="1137.3" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.35" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (764,879 samples, 0.01%)</title><rect x="1164.6" y="437" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1167.60" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (806,401 samples, 0.01%)</title><rect x="1149.4" y="213" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1152.41" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,730,235 samples, 0.03%)</title><rect x="922.5" y="373" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="925.53" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (3,871,762 samples, 0.05%)</title><rect x="85.3" y="485" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="88.26" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (15,087,337 samples, 0.18%)</title><rect x="1001.3" y="309" width="2.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1004.34" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,059,243 samples, 0.01%)</title><rect x="1140.1" y="357" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1143.06" y="367.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,066,249 samples, 0.01%)</title><rect x="923.7" y="357" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="926.70" y="367.5" ></text>
</g>
<g >
<title>decltype  (7,417,008 samples, 0.09%)</title><rect x="415.2" y="405" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="418.22" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (807,723 samples, 0.01%)</title><rect x="1149.7" y="149" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1152.70" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,655,190 samples, 0.02%)</title><rect x="1162.4" y="437" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1165.41" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,057,599 samples, 0.01%)</title><rect x="585.7" y="373" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="588.72" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,740,054 samples, 0.03%)</title><rect x="85.8" y="469" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="88.79" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (6,348,398 samples, 0.07%)</title><rect x="696.6" y="501" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="699.58" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,657,835 samples, 0.18%)</title><rect x="1124.2" y="229" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1127.20" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event (1,614,961 samples, 0.02%)</title><rect x="944.4" y="293" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="947.41" y="303.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (18,323,501 samples, 0.21%)</title><rect x="431.4" y="501" width="2.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="434.44" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,004,001 samples, 0.06%)</title><rect x="1181.9" y="565" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1184.86" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,478,383 samples, 0.06%)</title><rect x="1141.2" y="373" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1144.22" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,745,928 samples, 0.02%)</title><rect x="591.1" y="517" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="594.13" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (910,016 samples, 0.01%)</title><rect x="1133.3" y="405" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1136.26" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (108,430,914 samples, 1.26%)</title><rect x="1093.9" y="357" width="14.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1096.86" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (25,777,509 samples, 0.30%)</title><rect x="1032.8" y="165" width="3.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1035.81" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (46,533,552 samples, 0.54%)</title><rect x="1095.9" y="261" width="6.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1098.95" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,579,756 samples, 0.03%)</title><rect x="1131.4" y="341" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1134.43" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1,042,585 samples, 0.01%)</title><rect x="1092.8" y="325" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1095.84" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,836,789 samples, 0.02%)</title><rect x="697.2" y="469" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="700.20" y="479.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (7,460,907 samples, 0.09%)</title><rect x="204.0" y="533" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="206.97" y="543.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (757,921 samples, 0.01%)</title><rect x="502.3" y="485" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="505.33" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (15,317,292 samples, 0.18%)</title><rect x="1086.3" y="341" width="2.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1089.34" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (15,659,898 samples, 0.18%)</title><rect x="1138.2" y="421" width="2.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1141.17" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (35,556,455 samples, 0.41%)</title><rect x="375.0" y="485" width="4.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="378.02" y="495.5" ></text>
</g>
<g >
<title>gen_all_points (915,031 samples, 0.01%)</title><rect x="1162.1" y="437" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1165.06" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (985,675 samples, 0.01%)</title><rect x="1012.0" y="293" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1015.00" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (108,430,914 samples, 1.26%)</title><rect x="1093.9" y="325" width="14.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1096.86" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,368,119 samples, 0.03%)</title><rect x="1150.0" y="181" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1152.99" y="191.5" ></text>
</g>
<g >
<title>cfree (2,214,513 samples, 0.03%)</title><rect x="981.2" y="357" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="984.19" y="367.5" ></text>
</g>
<g >
<title>operator new (6,057,242 samples, 0.07%)</title><rect x="1117.7" y="229" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1120.71" y="239.5" ></text>
</g>
<g >
<title>main (1,823,420,433 samples, 21.22%)</title><rect x="914.7" y="517" width="250.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="917.67" y="527.5" >main</text>
</g>
<g >
<title>operator delete (897,022 samples, 0.01%)</title><rect x="1019.7" y="213" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1022.72" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,567,473 samples, 0.05%)</title><rect x="1108.1" y="261" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.12" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (16,889,912 samples, 0.20%)</title><rect x="396.6" y="517" width="2.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="399.63" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (71,846,602 samples, 0.84%)</title><rect x="551.2" y="533" width="9.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="554.17" y="543.5" ></text>
</g>
<g >
<title>operator delete (1,059,233 samples, 0.01%)</title><rect x="1162.7" y="389" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1165.73" y="399.5" ></text>
</g>
<g >
<title>decltype  (1,050,268 samples, 0.01%)</title><rect x="385.0" y="421" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="387.98" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (27,656,642 samples, 0.32%)</title><rect x="1133.5" y="373" width="3.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1136.51" y="383.5" ></text>
</g>
<g >
<title>malloc (19,920,341 samples, 0.23%)</title><rect x="989.1" y="245" width="2.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="992.12" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (135,473,056 samples, 1.58%)</title><rect x="979.8" y="373" width="18.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="982.85" y="383.5" ></text>
</g>
<g >
<title>malloc (797,481 samples, 0.01%)</title><rect x="1139.8" y="277" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1142.84" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,384,135 samples, 0.02%)</title><rect x="1131.2" y="341" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1134.24" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,620,411 samples, 0.02%)</title><rect x="1163.6" y="261" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1166.60" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (794,273 samples, 0.01%)</title><rect x="1153.1" y="149" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1156.15" y="159.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (1,801,484 samples, 0.02%)</title><rect x="428.3" y="533" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="431.33" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,379,242 samples, 0.02%)</title><rect x="1129.8" y="149" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1132.78" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,953,037 samples, 0.07%)</title><rect x="586.2" y="389" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="589.19" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,040,164 samples, 0.01%)</title><rect x="1133.0" y="373" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1135.99" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,281,776 samples, 0.01%)</title><rect x="1102.3" y="181" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1105.34" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,620,411 samples, 0.02%)</title><rect x="1163.6" y="277" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1166.60" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (5,400,749 samples, 0.06%)</title><rect x="432.6" y="485" width="0.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="435.65" y="495.5" ></text>
</g>
<g >
<title>cfree (2,737,746 samples, 0.03%)</title><rect x="1144.5" y="261" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1147.48" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,569,868 samples, 0.02%)</title><rect x="1003.6" y="325" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1006.59" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (27,689,570 samples, 0.32%)</title><rect x="1054.6" y="181" width="3.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1057.58" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,664,326 samples, 0.03%)</title><rect x="1149.5" y="213" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1152.52" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (41,343,218 samples, 0.48%)</title><rect x="223.4" y="517" width="5.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="226.45" y="527.5" ></text>
</g>
<g >
<title>get_inbetween_points (907,405 samples, 0.01%)</title><rect x="1146.2" y="357" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1149.17" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (17,490,993 samples, 0.20%)</title><rect x="995.3" y="181" width="2.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="998.28" y="191.5" ></text>
</g>
<g >
<title>update_process_times (799,256 samples, 0.01%)</title><rect x="960.1" y="245" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="963.05" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,316,273 samples, 0.13%)</title><rect x="992.8" y="245" width="1.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="995.83" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (778,041 samples, 0.01%)</title><rect x="1130.8" y="197" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1133.77" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (31,855,268 samples, 0.37%)</title><rect x="686.3" y="533" width="4.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="689.34" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (10,746,257 samples, 0.13%)</title><rect x="527.0" y="517" width="1.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="530.04" y="527.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,963,465 samples, 0.02%)</title><rect x="940.8" y="357" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="943.76" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,935,568 samples, 0.06%)</title><rect x="182.4" y="517" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="185.41" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,521,514 samples, 0.02%)</title><rect x="1127.3" y="181" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1130.27" y="191.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (39,887,432 samples, 0.46%)</title><rect x="71.5" y="453" width="5.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="74.47" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,061,403 samples, 0.01%)</title><rect x="1104.1" y="149" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1107.14" y="159.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,205,891 samples, 0.01%)</title><rect x="79.3" y="453" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="82.26" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,935,568 samples, 0.06%)</title><rect x="182.4" y="485" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="185.41" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,371,149 samples, 0.02%)</title><rect x="992.4" y="245" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="995.37" y="255.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (768,439 samples, 0.01%)</title><rect x="1011.9" y="245" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1014.89" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,026,395 samples, 0.02%)</title><rect x="1088.9" y="341" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1091.94" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,163,140 samples, 0.08%)</title><rect x="1057.2" y="117" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1060.21" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (72,858,058 samples, 0.85%)</title><rect x="904.7" y="533" width="10.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="907.66" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,329,821 samples, 0.09%)</title><rect x="1002.2" y="277" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1005.21" y="287.5" ></text>
</g>
<g >
<title>malloc (7,479,278 samples, 0.09%)</title><rect x="1012.6" y="325" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1015.61" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,055,813 samples, 0.01%)</title><rect x="1014.0" y="325" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1017.03" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,244,176 samples, 0.07%)</title><rect x="1130.2" y="261" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1133.23" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (35,556,455 samples, 0.41%)</title><rect x="375.0" y="469" width="4.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="378.02" y="479.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (12,299,115 samples, 0.14%)</title><rect x="385.1" y="469" width="1.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="388.13" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (4,928,514 samples, 0.06%)</title><rect x="738.7" y="469" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="741.65" y="479.5" ></text>
</g>
<g >
<title>folio_end_writeback (1,810,674 samples, 0.02%)</title><rect x="974.9" y="149" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="977.86" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,275,512 samples, 0.01%)</title><rect x="1162.4" y="405" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1165.43" y="415.5" ></text>
</g>
<g >
<title>operator new (2,898,371 samples, 0.03%)</title><rect x="1153.4" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1156.38" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,828,731 samples, 0.02%)</title><rect x="1164.0" y="357" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1167.01" y="367.5" ></text>
</g>
<g >
<title>operator new (1,581,058 samples, 0.02%)</title><rect x="976.5" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="979.53" y="383.5" ></text>
</g>
<g >
<title>do_exit (804,236 samples, 0.01%)</title><rect x="1169.4" y="501" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1172.38" y="511.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (868,086 samples, 0.01%)</title><rect x="1162.5" y="373" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1165.48" y="383.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,283,019 samples, 0.01%)</title><rect x="1116.8" y="133" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1119.80" y="143.5" ></text>
</g>
<g >
<title>malloc (4,670,195 samples, 0.05%)</title><rect x="1135.4" y="309" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1138.40" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (3,939,944 samples, 0.05%)</title><rect x="1007.8" y="341" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1010.76" y="351.5" ></text>
</g>
<g >
<title>operator delete (2,428,215 samples, 0.03%)</title><rect x="1053.4" y="181" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1056.43" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,017,963 samples, 0.35%)</title><rect x="1014.8" y="213" width="4.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1017.77" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (27,003,962 samples, 0.31%)</title><rect x="946.4" y="325" width="3.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="949.39" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,266,537 samples, 0.01%)</title><rect x="1145.9" y="341" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1148.93" y="351.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,478,383 samples, 0.06%)</title><rect x="1141.2" y="357" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1144.22" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (48,018,087 samples, 0.56%)</title><rect x="1123.4" y="325" width="6.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1126.43" y="335.5" ></text>
</g>
<g >
<title>clone_endio (1,934,391 samples, 0.02%)</title><rect x="974.8" y="197" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="977.84" y="207.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (21,892,866 samples, 0.25%)</title><rect x="190.1" y="517" width="3.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="193.10" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,935,568 samples, 0.06%)</title><rect x="182.4" y="453" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="185.41" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (16,583,933 samples, 0.19%)</title><rect x="972.9" y="373" width="2.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="975.88" y="383.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,322,303 samples, 0.03%)</title><rect x="739.3" y="485" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="742.33" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (6,065,906 samples, 0.07%)</title><rect x="1160.3" y="357" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1163.34" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,006,585 samples, 0.01%)</title><rect x="1004.9" y="229" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1007.91" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (792,612 samples, 0.01%)</title><rect x="1007.1" y="277" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1010.15" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,157,718 samples, 0.01%)</title><rect x="1163.6" y="229" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.60" y="239.5" ></text>
</g>
<g >
<title>operator delete (2,362,828 samples, 0.03%)</title><rect x="1120.8" y="261" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1123.81" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,424,605 samples, 0.02%)</title><rect x="1169.1" y="549" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1172.05" y="559.5" ></text>
</g>
<g >
<title>operator new (1,688,607 samples, 0.02%)</title><rect x="1107.1" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.05" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,339,409 samples, 0.03%)</title><rect x="922.6" y="357" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="925.58" y="367.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,046,588 samples, 0.01%)</title><rect x="194.0" y="517" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="196.96" y="527.5" ></text>
</g>
<g >
<title>operator new (1,712,229 samples, 0.02%)</title><rect x="947.4" y="261" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="950.45" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (6,258,813 samples, 0.07%)</title><rect x="1182.5" y="565" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1185.54" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (930,530 samples, 0.01%)</title><rect x="1152.9" y="181" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1155.95" y="191.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (927,084 samples, 0.01%)</title><rect x="1108.6" y="197" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1111.62" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (23,991,609 samples, 0.28%)</title><rect x="994.5" y="261" width="3.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="997.46" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,501,320 samples, 0.09%)</title><rect x="689.7" y="485" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="692.69" y="495.5" ></text>
</g>
<g >
<title>operator new (784,002 samples, 0.01%)</title><rect x="1103.9" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.92" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (59,013,809 samples, 0.69%)</title><rect x="68.8" y="501" width="8.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="71.84" y="511.5" ></text>
</g>
<g >
<title>operator new (770,355 samples, 0.01%)</title><rect x="1037.8" y="309" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1040.80" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,737,981 samples, 0.16%)</title><rect x="1059.0" y="101" width="1.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1061.99" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (929,356 samples, 0.01%)</title><rect x="1162.9" y="373" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1165.93" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,174,985 samples, 0.01%)</title><rect x="1003.6" y="293" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1006.61" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,674,857 samples, 0.02%)</title><rect x="1102.3" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1105.34" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (47,783,421 samples, 0.56%)</title><rect x="908.1" y="517" width="6.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="911.10" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,595,036 samples, 0.02%)</title><rect x="1068.2" y="117" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1071.24" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (3,939,944 samples, 0.05%)</title><rect x="1007.8" y="325" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1010.76" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (72,137,438 samples, 0.84%)</title><rect x="68.1" y="517" width="9.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="71.05" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,773,482 samples, 0.02%)</title><rect x="1129.8" y="213" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1132.78" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (2,902,570 samples, 0.03%)</title><rect x="93.6" y="485" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="96.56" y="495.5" ></text>
</g>
<g >
<title>operator new (253,613,254 samples, 2.95%)</title><rect x="467.6" y="549" width="34.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="470.61" y="559.5" >op..</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (25,529,382 samples, 0.30%)</title><rect x="930.5" y="309" width="3.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="933.54" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (853,056 samples, 0.01%)</title><rect x="1136.9" y="309" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1139.85" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (2,272,866 samples, 0.03%)</title><rect x="1145.9" y="357" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1148.86" y="367.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,212,874 samples, 0.01%)</title><rect x="588.0" y="501" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="591.00" y="511.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,590,529 samples, 0.07%)</title><rect x="1139.5" y="373" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1142.52" y="383.5" ></text>
</g>
<g >
<title>cfree (1,814,330 samples, 0.02%)</title><rect x="1033.0" y="85" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1035.95" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,863,225 samples, 0.07%)</title><rect x="863.4" y="533" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="866.40" y="543.5" ></text>
</g>
<g >
<title>operator delete (66,587,843 samples, 0.77%)</title><rect x="458.5" y="549" width="9.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="461.47" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,773,482 samples, 0.02%)</title><rect x="1129.8" y="197" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1132.78" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (3,899,328 samples, 0.05%)</title><rect x="951.5" y="373" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="954.54" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (17,490,993 samples, 0.20%)</title><rect x="995.3" y="165" width="2.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="998.28" y="175.5" ></text>
</g>
<g >
<title>get_inbetween_points (778,191 samples, 0.01%)</title><rect x="584.8" y="421" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="587.79" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (3,275,396 samples, 0.04%)</title><rect x="80.6" y="453" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="83.57" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,828,731 samples, 0.02%)</title><rect x="1164.0" y="373" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1167.01" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (9,688,079 samples, 0.11%)</title><rect x="383.8" y="485" width="1.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="386.80" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,424,605 samples, 0.02%)</title><rect x="1169.1" y="533" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1172.05" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (53,295,216 samples, 0.62%)</title><rect x="1154.0" y="405" width="7.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1156.98" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (7,527,895 samples, 0.09%)</title><rect x="693.1" y="469" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="696.15" y="479.5" ></text>
</g>
<g >
<title>cfree (788,566 samples, 0.01%)</title><rect x="927.4" y="261" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="930.42" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (165,659,197 samples, 1.93%)</title><rect x="1038.2" y="213" width="22.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1041.18" y="223.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (913,087 samples, 0.01%)</title><rect x="1109.8" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1112.76" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,620,411 samples, 0.02%)</title><rect x="1163.6" y="293" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1166.60" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (3,249,804 samples, 0.04%)</title><rect x="1091.5" y="341" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1094.51" y="351.5" ></text>
</g>
<g >
<title>operator new (20,039,810 samples, 0.23%)</title><rect x="1033.4" y="85" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1036.45" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (925,594 samples, 0.01%)</title><rect x="977.3" y="357" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="980.35" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (1,319,231 samples, 0.02%)</title><rect x="1132.8" y="357" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1135.76" y="367.5" ></text>
</g>
<g >
<title>gen_all_points (21,712,023 samples, 0.25%)</title><rect x="83.3" y="549" width="2.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.26" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,080,363 samples, 0.14%)</title><rect x="931.6" y="261" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="934.56" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (19,954,661 samples, 0.23%)</title><rect x="1150.5" y="309" width="2.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1153.51" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,282,320 samples, 0.01%)</title><rect x="1145.3" y="277" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1148.28" y="287.5" ></text>
</g>
<g >
<title>decltype  (11,527,074 samples, 0.13%)</title><rect x="913.1" y="453" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="916.08" y="463.5" ></text>
</g>
<g >
<title>operator new (1,163,485 samples, 0.01%)</title><rect x="1066.6" y="165" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1069.58" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,090,118 samples, 0.02%)</title><rect x="183.6" y="437" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="186.59" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (796,450 samples, 0.01%)</title><rect x="82.4" y="485" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="85.44" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (1,968,402 samples, 0.02%)</title><rect x="81.8" y="469" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="84.82" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (907,913 samples, 0.01%)</title><rect x="1133.1" y="405" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1136.13" y="415.5" ></text>
</g>
<g >
<title>__common_interrupt (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="229" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1109.59" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (37,192,292 samples, 0.43%)</title><rect x="581.9" y="485" width="5.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="584.94" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,599,327 samples, 0.02%)</title><rect x="83.0" y="485" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="86.04" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (175,061,125 samples, 2.04%)</title><rect x="205.1" y="549" width="24.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="208.08" y="559.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,899,338 samples, 0.03%)</title><rect x="1149.9" y="229" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1152.92" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (3,252,198 samples, 0.04%)</title><rect x="703.4" y="469" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="706.37" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,076,093 samples, 0.04%)</title><rect x="1122.6" y="197" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1125.65" y="207.5" ></text>
</g>
<g >
<title>operator delete (2,472,244 samples, 0.03%)</title><rect x="1143.3" y="373" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1146.28" y="383.5" ></text>
</g>
<g >
<title>cfree (7,082,097 samples, 0.08%)</title><rect x="1158.8" y="277" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1161.79" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,313,082 samples, 0.05%)</title><rect x="735.9" y="469" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="738.91" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (792,612 samples, 0.01%)</title><rect x="1007.1" y="261" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1010.15" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (17,490,993 samples, 0.20%)</title><rect x="995.3" y="197" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="998.28" y="207.5" ></text>
</g>
<g >
<title>get_inbetween_points (130,645,482 samples, 1.52%)</title><rect x="934.2" y="405" width="17.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="937.17" y="415.5" ></text>
</g>
<g >
<title>cfree (1,170,875 samples, 0.01%)</title><rect x="1117.4" y="229" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1120.44" y="239.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,501,320 samples, 0.09%)</title><rect x="689.7" y="469" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="692.69" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,783,460 samples, 0.09%)</title><rect x="524.5" y="501" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="527.47" y="511.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,979,975 samples, 0.03%)</title><rect x="1085.9" y="277" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1088.93" y="287.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,857,480 samples, 0.02%)</title><rect x="1142.0" y="373" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1144.97" y="383.5" ></text>
</g>
<g >
<title>blk_mq_end_request_batch (1,614,961 samples, 0.02%)</title><rect x="944.4" y="245" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="947.41" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (768,439 samples, 0.01%)</title><rect x="1011.9" y="277" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1014.89" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (9,586,682 samples, 0.11%)</title><rect x="523.2" y="469" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="526.15" y="479.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2,065,929 samples, 0.02%)</title><rect x="974.8" y="325" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="977.82" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,163,516 samples, 0.01%)</title><rect x="313.4" y="517" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="316.37" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,006,585 samples, 0.01%)</title><rect x="1004.9" y="277" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1007.91" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (21,892,866 samples, 0.25%)</title><rect x="190.1" y="533" width="3.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="193.10" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (25,465,374 samples, 0.30%)</title><rect x="1133.8" y="325" width="3.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1136.81" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,942,990 samples, 0.02%)</title><rect x="1137.9" y="357" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1140.88" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,293,941 samples, 0.04%)</title><rect x="1085.4" y="277" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1088.42" y="287.5" ></text>
</g>
<g >
<title>update_process_times (1,144,117 samples, 0.01%)</title><rect x="1116.8" y="117" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.82" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (3,903,211 samples, 0.05%)</title><rect x="550.6" y="533" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="553.63" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,397,087 samples, 0.09%)</title><rect x="76.9" y="469" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="79.94" y="479.5" ></text>
</g>
<g >
<title>end_bio_extent_writepage (1,934,391 samples, 0.02%)</title><rect x="974.8" y="165" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="977.84" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,688,423 samples, 0.05%)</title><rect x="398.3" y="453" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="401.31" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (9,389,912 samples, 0.11%)</title><rect x="840.2" y="485" width="1.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="843.23" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (904,850 samples, 0.01%)</title><rect x="587.8" y="421" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="590.85" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (298,353,978 samples, 3.47%)</title><rect x="334.1" y="501" width="40.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="337.05" y="511.5" >std..</text>
</g>
<g >
<title>cfree (1,408,697 samples, 0.02%)</title><rect x="589.2" y="549" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="592.25" y="559.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,716,282 samples, 0.02%)</title><rect x="1088.4" y="357" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1091.44" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (84,943,068 samples, 0.99%)</title><rect x="961.2" y="341" width="11.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="964.22" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,963,465 samples, 0.02%)</title><rect x="940.8" y="341" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="943.76" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,401,765 samples, 0.03%)</title><rect x="1118.9" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1121.91" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,552,163 samples, 0.02%)</title><rect x="991.6" y="181" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="994.64" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (24,343,540 samples, 0.28%)</title><rect x="1142.2" y="421" width="3.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1145.22" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (235,940,624 samples, 2.75%)</title><rect x="1036.4" y="325" width="32.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1039.44" y="335.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,791,084 samples, 0.02%)</title><rect x="1139.1" y="389" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1142.13" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (205,221,450 samples, 2.39%)</title><rect x="886.5" y="549" width="28.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="889.48" y="559.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (7,527,895 samples, 0.09%)</title><rect x="693.1" y="453" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="696.15" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (783,677 samples, 0.01%)</title><rect x="1146.6" y="357" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1149.59" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (50,135,504 samples, 0.58%)</title><rect x="1061.6" y="213" width="6.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1064.58" y="223.5" ></text>
</g>
<g >
<title>cfree (4,711,564 samples, 0.05%)</title><rect x="1130.2" y="229" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1133.23" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,900,769 samples, 0.06%)</title><rect x="1168.1" y="501" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1171.11" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,606,808 samples, 0.02%)</title><rect x="591.1" y="437" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="594.13" y="447.5" ></text>
</g>
<g >
<title>choose_next_point (24,156,067 samples, 0.28%)</title><rect x="920.2" y="405" width="3.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="923.19" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (775,565 samples, 0.01%)</title><rect x="953.1" y="405" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="956.15" y="415.5" ></text>
</g>
<g >
<title>decltype  (11,365,290 samples, 0.13%)</title><rect x="227.6" y="453" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="230.56" y="463.5" ></text>
</g>
<g >
<title>cfree (1,390,625 samples, 0.02%)</title><rect x="1151.7" y="197" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1154.67" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (167,702,574 samples, 1.95%)</title><rect x="1108.8" y="357" width="23.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1111.75" y="367.5" >s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,838,468 samples, 0.02%)</title><rect x="1102.1" y="229" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1105.09" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (41,092,947 samples, 0.48%)</title><rect x="699.3" y="533" width="5.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="702.28" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,547,477 samples, 0.09%)</title><rect x="1030.9" y="165" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1033.87" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (105,443,535 samples, 1.23%)</title><rect x="402.1" y="533" width="14.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="405.08" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (1,701,547 samples, 0.02%)</title><rect x="695.9" y="501" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="698.86" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (9,586,682 samples, 0.11%)</title><rect x="523.2" y="501" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="526.15" y="511.5" ></text>
</g>
<g >
<title>cfree (4,781,781 samples, 0.06%)</title><rect x="1000.3" y="341" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1003.34" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (894,422 samples, 0.01%)</title><rect x="1132.6" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1135.58" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,915,109 samples, 0.02%)</title><rect x="79.0" y="453" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="82.00" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,932,209 samples, 0.10%)</title><rect x="1066.9" y="165" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1069.86" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,520,014 samples, 0.04%)</title><rect x="993.8" y="133" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="996.82" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (929,356 samples, 0.01%)</title><rect x="1162.9" y="357" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1165.93" y="367.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1,614,961 samples, 0.02%)</title><rect x="944.4" y="357" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="947.41" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,569,319 samples, 0.02%)</title><rect x="1102.1" y="197" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1105.12" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,931,268 samples, 0.02%)</title><rect x="1067.8" y="133" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1070.82" y="143.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (3,226,255 samples, 0.04%)</title><rect x="725.8" y="533" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="728.81" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (13,737,981 samples, 0.16%)</title><rect x="1059.0" y="117" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1061.99" y="127.5" ></text>
</g>
<g >
<title>operator new (806,871 samples, 0.01%)</title><rect x="1159.9" y="277" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.92" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (874,192 samples, 0.01%)</title><rect x="1067.8" y="101" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1070.82" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,520,014 samples, 0.04%)</title><rect x="993.8" y="165" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="996.82" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (13,566,383 samples, 0.16%)</title><rect x="509.9" y="469" width="1.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="512.94" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (771,605 samples, 0.01%)</title><rect x="1145.3" y="229" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1148.35" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,828,731 samples, 0.02%)</title><rect x="1164.0" y="341" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1167.01" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (4,928,514 samples, 0.06%)</title><rect x="738.7" y="453" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="741.65" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,368,119 samples, 0.03%)</title><rect x="1150.0" y="133" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1152.99" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (6,153,175 samples, 0.07%)</title><rect x="434.0" y="533" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="436.95" y="543.5" ></text>
</g>
<g >
<title>cfree (2,021,159 samples, 0.02%)</title><rect x="987.0" y="261" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="990.05" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (11,556,435 samples, 0.13%)</title><rect x="1158.8" y="357" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.75" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,620,411 samples, 0.02%)</title><rect x="1163.6" y="245" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1166.60" y="255.5" ></text>
</g>
<g >
<title>operator delete (1,637,255 samples, 0.02%)</title><rect x="1136.0" y="309" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1139.04" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (4,191,445 samples, 0.05%)</title><rect x="1011.3" y="277" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1014.32" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,341,120 samples, 0.03%)</title><rect x="1163.3" y="309" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1166.26" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,626,768 samples, 0.04%)</title><rect x="71.0" y="485" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="73.97" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,378,703 samples, 0.02%)</title><rect x="972.7" y="277" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="975.69" y="287.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,421,241 samples, 0.02%)</title><rect x="588.0" y="533" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="591.00" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (3,541,021 samples, 0.04%)</title><rect x="704.4" y="421" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="707.38" y="431.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,147,881 samples, 0.04%)</title><rect x="1011.5" y="229" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1014.46" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,983,073 samples, 0.09%)</title><rect x="383.8" y="405" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="386.80" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (7,992,752 samples, 0.09%)</title><rect x="1167.8" y="549" width="1.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1170.76" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (65,623,615 samples, 0.76%)</title><rect x="220.1" y="533" width="9.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="223.11" y="543.5" ></text>
</g>
<g >
<title>operator new (234,433,125 samples, 2.73%)</title><rect x="144.2" y="549" width="32.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="147.22" y="559.5" >op..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,457,407 samples, 0.03%)</title><rect x="695.2" y="517" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="698.23" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,457,407 samples, 0.03%)</title><rect x="695.2" y="533" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="698.23" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (43,243,389 samples, 0.50%)</title><rect x="1077.1" y="293" width="5.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1080.06" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (929,356 samples, 0.01%)</title><rect x="1162.9" y="325" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1165.93" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,556,969 samples, 0.04%)</title><rect x="1153.3" y="213" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1156.31" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,050,639 samples, 0.01%)</title><rect x="1153.1" y="213" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1156.11" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (5,351,121 samples, 0.06%)</title><rect x="1011.3" y="293" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1014.26" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (2,875,143 samples, 0.03%)</title><rect x="865.8" y="533" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="868.84" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (904,850 samples, 0.01%)</title><rect x="587.8" y="533" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="590.85" y="543.5" ></text>
</g>
<g >
<title>get_inbetween_points (8,024,689 samples, 0.09%)</title><rect x="1004.0" y="341" width="1.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1006.95" y="351.5" ></text>
</g>
<g >
<title>malloc (36,255,856 samples, 0.42%)</title><rect x="1048.5" y="181" width="4.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1051.46" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (768,672 samples, 0.01%)</title><rect x="94.0" y="533" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="96.96" y="543.5" ></text>
</g>
<g >
<title>operator new (24,437,731 samples, 0.28%)</title><rect x="1177.9" y="565" width="3.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1180.93" y="575.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,900,769 samples, 0.06%)</title><rect x="1168.1" y="469" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1171.11" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (12,299,115 samples, 0.14%)</title><rect x="385.1" y="453" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="388.13" y="463.5" ></text>
</g>
<g >
<title>cfree (142,119,343 samples, 1.65%)</title><rect x="294.3" y="549" width="19.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="297.28" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,061,403 samples, 0.01%)</title><rect x="1104.1" y="261" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1107.14" y="271.5" ></text>
</g>
<g >
<title>cfree (2,531,025 samples, 0.03%)</title><rect x="1160.5" y="261" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1163.46" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,138,976 samples, 0.13%)</title><rect x="1157.1" y="309" width="1.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1160.11" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (3,678,936 samples, 0.04%)</title><rect x="93.1" y="533" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="96.06" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (94,914,616 samples, 1.10%)</title><rect x="984.7" y="309" width="13.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="987.73" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,061,403 samples, 0.01%)</title><rect x="1104.1" y="245" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1107.14" y="255.5" ></text>
</g>
<g >
<title>update_process_times (913,922 samples, 0.01%)</title><rect x="991.7" y="117" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="994.71" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (5,405,425 samples, 0.06%)</title><rect x="1004.2" y="245" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1007.17" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,573,349 samples, 0.02%)</title><rect x="972.7" y="309" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="975.66" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,938,066 samples, 0.06%)</title><rect x="848.8" y="437" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="851.77" y="447.5" ></text>
</g>
<g >
<title>operator delete (160,839,521 samples, 1.87%)</title><rect x="783.0" y="549" width="22.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="786.01" y="559.5" >o..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,523,187 samples, 0.02%)</title><rect x="1136.6" y="261" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1139.59" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (8,493,367 samples, 0.10%)</title><rect x="193.1" y="549" width="1.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="196.10" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (28,939,299 samples, 0.34%)</title><rect x="223.4" y="453" width="4.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="226.45" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (795,385 samples, 0.01%)</title><rect x="1003.7" y="261" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1006.67" y="271.5" ></text>
</g>
<g >
<title>operator new (18,969,479 samples, 0.22%)</title><rect x="927.9" y="277" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="930.88" y="287.5" ></text>
</g>
<g >
<title>cfree (9,520,542 samples, 0.11%)</title><rect x="1134.0" y="309" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1137.04" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (84,943,068 samples, 0.99%)</title><rect x="961.2" y="357" width="11.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="964.22" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (13,250,585 samples, 0.15%)</title><rect x="739.7" y="501" width="1.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="742.65" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (3,328,010 samples, 0.04%)</title><rect x="1087.1" y="293" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1090.10" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,254,655 samples, 0.06%)</title><rect x="1083.0" y="309" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1085.99" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,163,140 samples, 0.08%)</title><rect x="1057.2" y="85" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1060.21" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (12,470,247 samples, 0.15%)</title><rect x="736.9" y="485" width="1.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="739.94" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (732,750 samples, 0.01%)</title><rect x="1146.0" y="309" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1148.98" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (10,256,385 samples, 0.12%)</title><rect x="429.7" y="517" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="432.67" y="527.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (7,417,008 samples, 0.09%)</title><rect x="415.2" y="437" width="1.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="418.22" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,760,154 samples, 0.06%)</title><rect x="1030.9" y="85" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1033.87" y="95.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,163,140 samples, 0.08%)</title><rect x="1057.2" y="69" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1060.21" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,556,969 samples, 0.04%)</title><rect x="1153.3" y="229" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1156.31" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,656,177 samples, 0.02%)</title><rect x="1136.6" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1139.57" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,212,328 samples, 0.03%)</title><rect x="1052.9" y="149" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1055.95" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (6,787,708 samples, 0.08%)</title><rect x="1167.9" y="517" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1170.85" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (12,017,516 samples, 0.14%)</title><rect x="845.3" y="469" width="1.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="848.30" y="479.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,850,543 samples, 0.02%)</title><rect x="1183.7" y="549" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1186.71" y="559.5" ></text>
</g>
<g >
<title>gen_all_points (1,812,606 samples, 0.02%)</title><rect x="1169.5" y="565" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1172.55" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (6,244,176 samples, 0.07%)</title><rect x="1130.2" y="293" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1133.23" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (127,767,772 samples, 1.49%)</title><rect x="955.3" y="373" width="17.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="958.34" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (768,672 samples, 0.01%)</title><rect x="94.0" y="517" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="96.96" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (783,677 samples, 0.01%)</title><rect x="1146.6" y="341" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1149.59" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,935,568 samples, 0.06%)</title><rect x="182.4" y="501" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="185.41" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,525,774 samples, 0.09%)</title><rect x="1107.7" y="277" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1110.72" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,638,889 samples, 0.03%)</title><rect x="1130.3" y="213" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.27" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,404,909 samples, 0.03%)</title><rect x="1108.4" y="229" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1111.42" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (10,172,354 samples, 0.12%)</title><rect x="672.1" y="485" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="675.06" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,440,934 samples, 0.04%)</title><rect x="180.9" y="533" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="183.91" y="543.5" ></text>
</g>
<g >
<title>malloc (915,396 samples, 0.01%)</title><rect x="1059.4" y="69" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1062.37" y="79.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,730,235 samples, 0.03%)</title><rect x="922.5" y="389" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="925.53" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,442,790 samples, 0.02%)</title><rect x="1059.0" y="69" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1061.99" y="79.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (19,954,661 samples, 0.23%)</title><rect x="1150.5" y="229" width="2.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1153.51" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (798,015 samples, 0.01%)</title><rect x="1137.2" y="261" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1140.20" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,760,154 samples, 0.06%)</title><rect x="1030.9" y="101" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1033.87" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,051,852 samples, 0.05%)</title><rect x="993.8" y="213" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="996.82" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,029,887 samples, 0.01%)</title><rect x="1169.1" y="517" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1172.07" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (30,870,312 samples, 0.36%)</title><rect x="1032.1" y="213" width="4.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1035.11" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,298,553 samples, 0.35%)</title><rect x="1038.4" y="197" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1041.44" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,060,202 samples, 0.01%)</title><rect x="960.0" y="277" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="963.02" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,053,457 samples, 0.01%)</title><rect x="585.4" y="357" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="588.39" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,429,133 samples, 0.02%)</title><rect x="991.6" y="149" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="994.64" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,698,171 samples, 0.04%)</title><rect x="1085.4" y="309" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1088.42" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,316,111 samples, 0.02%)</title><rect x="1141.0" y="373" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1144.04" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (12,017,516 samples, 0.14%)</title><rect x="845.3" y="517" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="848.30" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (778,921 samples, 0.01%)</title><rect x="922.7" y="277" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="925.73" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (460,209,841 samples, 5.36%)</title><rect x="1069.9" y="389" width="63.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1072.94" y="399.5" >std::_..</text>
</g>
<g >
<title>tick_sched_handle (1,162,134 samples, 0.01%)</title><rect x="940.9" y="293" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="943.85" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (16,343,949 samples, 0.19%)</title><rect x="79.8" y="533" width="2.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="82.85" y="543.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (42,573,471 samples, 0.50%)</title><rect x="733.8" y="501" width="5.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="736.80" y="511.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (4,615,316 samples, 0.05%)</title><rect x="885.8" y="533" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="888.76" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (24,810,440 samples, 0.29%)</title><rect x="536.4" y="533" width="3.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="539.38" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (924,490 samples, 0.01%)</title><rect x="1032.8" y="85" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1035.82" y="95.5" ></text>
</g>
<g >
<title>clone_endio (1,614,961 samples, 0.02%)</title><rect x="944.4" y="229" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="947.41" y="239.5" ></text>
</g>
<g >
<title>gen_all_points (54,394,719 samples, 0.63%)</title><rect x="697.5" y="549" width="7.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="700.45" y="559.5" ></text>
</g>
<g >
<title>cfree (783,357 samples, 0.01%)</title><rect x="941.0" y="389" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="944.05" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (21,526,750 samples, 0.25%)</title><rect x="516.8" y="469" width="2.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="519.77" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (6,885,934 samples, 0.08%)</title><rect x="703.9" y="453" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="706.92" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (12,184,499 samples, 0.14%)</title><rect x="1143.8" y="373" width="1.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1146.80" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,606,808 samples, 0.02%)</title><rect x="591.1" y="453" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="594.13" y="463.5" ></text>
</g>
<g >
<title>cfree (15,541,762 samples, 0.18%)</title><rect x="1165.2" y="565" width="2.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1168.20" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (510,053,488 samples, 5.94%)</title><rect x="998.8" y="357" width="70.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1001.80" y="367.5" >std::_R..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,012,431 samples, 0.01%)</title><rect x="1093.7" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1096.72" y="367.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (3,370,502 samples, 0.04%)</title><rect x="561.4" y="533" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="564.42" y="543.5" ></text>
</g>
<g >
<title>operator delete (996,065 samples, 0.01%)</title><rect x="1145.0" y="261" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1147.98" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,790,573 samples, 0.02%)</title><rect x="702.6" y="469" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="705.63" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,599,327 samples, 0.02%)</title><rect x="83.0" y="453" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="86.04" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (18,191,247 samples, 0.21%)</title><rect x="413.7" y="469" width="2.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="416.74" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,857,480 samples, 0.02%)</title><rect x="1142.0" y="357" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1144.97" y="367.5" ></text>
</g>
<g >
<title>decltype  (787,086 samples, 0.01%)</title><rect x="1108.6" y="181" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1111.64" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (16,394,359 samples, 0.19%)</title><rect x="390.5" y="453" width="2.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="393.47" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,979,975 samples, 0.03%)</title><rect x="1085.9" y="293" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1088.93" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,994,362 samples, 0.05%)</title><rect x="1160.4" y="277" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1163.45" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,809,834 samples, 0.11%)</title><rect x="864.2" y="533" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="867.21" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (771,605 samples, 0.01%)</title><rect x="1145.3" y="165" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1148.35" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,173,065 samples, 0.01%)</title><rect x="85.0" y="453" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="88.03" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (95,451,435 samples, 1.11%)</title><rect x="984.7" y="357" width="13.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="987.73" y="367.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,501,320 samples, 0.09%)</title><rect x="689.7" y="453" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="692.69" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (2,229,196 samples, 0.03%)</title><rect x="1088.1" y="293" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1091.13" y="303.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (4,590,431 samples, 0.05%)</title><rect x="885.1" y="533" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="888.13" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (15,087,337 samples, 0.18%)</title><rect x="1001.3" y="325" width="2.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1004.34" y="335.5" ></text>
</g>
<g >
<title>roundf32x (14,967,422 samples, 0.17%)</title><rect x="832.8" y="549" width="2.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="835.82" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (2,740,054 samples, 0.03%)</title><rect x="85.8" y="485" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="88.79" y="495.5" ></text>
</g>
<g >
<title>operator delete (142,287,120 samples, 1.66%)</title><rect x="124.7" y="549" width="19.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="127.68" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (77,121,711 samples, 0.90%)</title><rect x="1073.1" y="341" width="10.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1076.13" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (979,410 samples, 0.01%)</title><rect x="1162.3" y="405" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1165.28" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (913,730 samples, 0.01%)</title><rect x="1126.2" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1129.23" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,935,568 samples, 0.06%)</title><rect x="182.4" y="469" width="0.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="185.41" y="479.5" ></text>
</g>
<g >
<title>operator delete (923,114 samples, 0.01%)</title><rect x="977.8" y="341" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="980.83" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (436,639,261 samples, 5.08%)</title><rect x="1008.9" y="341" width="59.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1011.88" y="351.5" >std::_..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,556,969 samples, 0.04%)</title><rect x="1153.3" y="245" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1156.31" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,304,498 samples, 0.02%)</title><rect x="998.5" y="373" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1001.45" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,147,881 samples, 0.04%)</title><rect x="1011.5" y="245" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1014.46" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (910,016 samples, 0.01%)</title><rect x="1133.3" y="389" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1136.26" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,012,431 samples, 0.01%)</title><rect x="1093.7" y="309" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1096.72" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,313,082 samples, 0.05%)</title><rect x="735.9" y="453" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="738.91" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (3,275,396 samples, 0.04%)</title><rect x="80.6" y="469" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="83.57" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,186,316 samples, 0.01%)</title><rect x="960.0" y="293" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="963.00" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (892,813 samples, 0.01%)</title><rect x="432.5" y="469" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="435.53" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,836,789 samples, 0.02%)</title><rect x="697.2" y="453" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="700.20" y="463.5" ></text>
</g>
<g >
<title>update_process_times (1,073,807 samples, 0.01%)</title><rect x="944.7" y="245" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="947.70" y="255.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,900,769 samples, 0.06%)</title><rect x="1168.1" y="485" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1171.11" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,114,368 samples, 0.06%)</title><rect x="410.4" y="437" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="413.44" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (786,539 samples, 0.01%)</title><rect x="929.6" y="245" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="932.60" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,090,118 samples, 0.02%)</title><rect x="183.6" y="485" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="186.59" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,794,752 samples, 0.03%)</title><rect x="1036.9" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1039.88" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,203,236 samples, 0.03%)</title><rect x="1116.7" y="181" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1119.73" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (796,901 samples, 0.01%)</title><rect x="919.8" y="405" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="922.75" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (1,042,585 samples, 0.01%)</title><rect x="1092.8" y="341" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1095.84" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (39,887,432 samples, 0.46%)</title><rect x="71.5" y="485" width="5.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="74.47" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (28,939,299 samples, 0.34%)</title><rect x="223.4" y="437" width="4.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="226.45" y="447.5" ></text>
</g>
<g >
<title>malloc (7,703,058 samples, 0.09%)</title><rect x="589.5" y="549" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="592.48" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,953,037 samples, 0.07%)</title><rect x="586.2" y="325" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="589.19" y="335.5" ></text>
</g>
<g >
<title>malloc (12,897,316 samples, 0.15%)</title><rect x="1104.3" y="277" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1107.30" y="287.5" ></text>
</g>
<g >
<title>malloc (1,247,992 samples, 0.01%)</title><rect x="933.7" y="277" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="936.69" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (778,921 samples, 0.01%)</title><rect x="922.7" y="261" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="925.73" y="271.5" ></text>
</g>
<g >
<title>operator new (1,525,623 samples, 0.02%)</title><rect x="927.5" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="930.52" y="271.5" ></text>
</g>
<g >
<title>__btrfs_bio_end_io (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="117" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1109.59" y="127.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,397,087 samples, 0.09%)</title><rect x="76.9" y="485" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="79.94" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (2,468,551 samples, 0.03%)</title><rect x="395.8" y="485" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="398.82" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (925,565 samples, 0.01%)</title><rect x="1165.1" y="565" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1168.07" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (3,899,328 samples, 0.05%)</title><rect x="951.5" y="389" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="954.54" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,938,066 samples, 0.06%)</title><rect x="848.8" y="469" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="851.77" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,250,722 samples, 0.10%)</title><rect x="547.4" y="533" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="550.38" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (874,192 samples, 0.01%)</title><rect x="1067.8" y="85" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1070.82" y="95.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (12,048,910 samples, 0.14%)</title><rect x="1143.8" y="293" width="1.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1146.80" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (3,776,178 samples, 0.04%)</title><rect x="81.0" y="469" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.02" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,429,133 samples, 0.02%)</title><rect x="991.6" y="165" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="994.64" y="175.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,036,878 samples, 0.01%)</title><rect x="86.0" y="421" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="89.03" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (868,086 samples, 0.01%)</title><rect x="1162.5" y="389" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1165.48" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,053,558 samples, 0.09%)</title><rect x="525.5" y="501" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="528.54" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,580,827 samples, 0.08%)</title><rect x="586.1" y="421" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="589.14" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (913,730 samples, 0.01%)</title><rect x="1126.2" y="133" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1129.23" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (3,006,133 samples, 0.03%)</title><rect x="81.7" y="485" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="84.68" y="495.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,085,501 samples, 0.04%)</title><rect x="79.4" y="453" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="82.42" y="463.5" ></text>
</g>
<g >
<title>operator new (2,230,821 samples, 0.03%)</title><rect x="1136.3" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.26" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,525,593 samples, 0.03%)</title><rect x="591.0" y="533" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="594.02" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,864,051 samples, 0.02%)</title><rect x="1149.6" y="197" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1152.63" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,472,433 samples, 0.02%)</title><rect x="1030.2" y="181" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1033.19" y="191.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,779,758 samples, 0.08%)</title><rect x="1155.0" y="325" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1158.04" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,368,119 samples, 0.03%)</title><rect x="1150.0" y="117" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1152.99" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (48,049,072 samples, 0.56%)</title><rect x="923.9" y="309" width="6.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="926.94" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (803,412 samples, 0.01%)</title><rect x="1069.8" y="405" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1072.83" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,982,846 samples, 0.05%)</title><rect x="689.0" y="453" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="692.04" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,678,046 samples, 0.07%)</title><rect x="1134.3" y="293" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.32" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,006,585 samples, 0.01%)</title><rect x="1004.9" y="261" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1007.91" y="271.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,317,235 samples, 0.02%)</title><rect x="922.3" y="341" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="925.35" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (19,230,947 samples, 0.22%)</title><rect x="1142.9" y="389" width="2.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1145.91" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,182,828 samples, 0.01%)</title><rect x="184.2" y="501" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="187.15" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (31,855,268 samples, 0.37%)</title><rect x="686.3" y="517" width="4.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="689.34" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (794,273 samples, 0.01%)</title><rect x="1153.1" y="181" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1156.15" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (906,242 samples, 0.01%)</title><rect x="1012.1" y="261" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1015.13" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (778,041 samples, 0.01%)</title><rect x="1130.8" y="117" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1133.77" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (773,145 samples, 0.01%)</title><rect x="587.8" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="590.85" y="415.5" ></text>
</g>
<g >
<title>malloc (2,218,444 samples, 0.03%)</title><rect x="976.2" y="373" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="979.16" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (778,041 samples, 0.01%)</title><rect x="1130.8" y="165" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1133.77" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (365,121,002 samples, 4.25%)</title><rect x="329.8" y="533" width="50.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="332.77" y="543.5" >std::..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,274,271 samples, 0.03%)</title><rect x="1118.9" y="133" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1121.93" y="143.5" ></text>
</g>
<g >
<title>operator delete (908,686 samples, 0.01%)</title><rect x="952.3" y="405" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="955.28" y="415.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (9,762,953 samples, 0.11%)</title><rect x="978.4" y="341" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="981.42" y="351.5" ></text>
</g>
<g >
<title>operator new (3,893,551 samples, 0.05%)</title><rect x="1103.1" y="245" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.05" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,760,154 samples, 0.06%)</title><rect x="1030.9" y="133" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1033.87" y="143.5" ></text>
</g>
<g >
<title>choose_next_point (1,822,889,976 samples, 21.21%)</title><rect x="914.7" y="501" width="250.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="917.67" y="511.5" >choose_next_point</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,205,937 samples, 0.01%)</title><rect x="93.3" y="485" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="96.34" y="495.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,197,123 samples, 0.01%)</title><rect x="1156.0" y="325" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1158.98" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (152,045,058 samples, 1.77%)</title><rect x="567.1" y="549" width="20.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="570.09" y="559.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (518,534,148 samples, 6.03%)</title><rect x="998.6" y="405" width="71.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1001.63" y="415.5" >std::set..</text>
</g>
<g >
<title>scheduler_tick (817,371 samples, 0.01%)</title><rect x="944.7" y="229" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="947.73" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (915,031 samples, 0.01%)</title><rect x="1162.1" y="341" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1165.06" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,457,340 samples, 0.06%)</title><rect x="590.6" y="549" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="593.62" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,282,032 samples, 0.05%)</title><rect x="1007.1" y="325" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1010.05" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,049,536 samples, 0.01%)</title><rect x="1146.4" y="357" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1149.41" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (99,888,695 samples, 1.16%)</title><rect x="1109.4" y="293" width="13.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1112.44" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (27,003,962 samples, 0.31%)</title><rect x="946.4" y="341" width="3.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="949.39" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (195,927,016 samples, 2.28%)</title><rect x="348.1" y="453" width="26.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="351.12" y="463.5" >a..</text>
</g>
<g >
<title>tick_sched_handle (799,256 samples, 0.01%)</title><rect x="960.1" y="261" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="963.05" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,059,341 samples, 0.01%)</title><rect x="1145.6" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.65" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,028,312 samples, 0.01%)</title><rect x="584.6" y="389" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="587.60" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (792,612 samples, 0.01%)</title><rect x="1007.1" y="245" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1010.15" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (919,286 samples, 0.01%)</title><rect x="1156.3" y="373" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1159.31" y="383.5" ></text>
</g>
<g >
<title>decltype  (1,214,184 samples, 0.01%)</title><rect x="433.8" y="469" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="436.79" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (43,036,626 samples, 0.50%)</title><rect x="581.9" y="517" width="5.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="584.94" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (13,737,981 samples, 0.16%)</title><rect x="1059.0" y="133" width="1.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1061.99" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (18,191,247 samples, 0.21%)</title><rect x="413.7" y="453" width="2.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="416.74" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,045,570 samples, 0.04%)</title><rect x="1162.6" y="421" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1165.64" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (71,846,602 samples, 0.84%)</title><rect x="551.2" y="517" width="9.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="554.17" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,338,860 samples, 0.02%)</title><rect x="1149.7" y="181" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1152.70" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (894,422 samples, 0.01%)</title><rect x="1132.6" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1135.58" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,076,093 samples, 0.04%)</title><rect x="1122.6" y="181" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1125.65" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (785,621 samples, 0.01%)</title><rect x="1012.3" y="277" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1015.28" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (768,672 samples, 0.01%)</title><rect x="94.0" y="485" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="96.96" y="495.5" ></text>
</g>
<g >
<title>update_process_times (913,730 samples, 0.01%)</title><rect x="1126.2" y="101" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1129.23" y="111.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,554,566 samples, 0.02%)</title><rect x="736.7" y="453" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="739.73" y="463.5" ></text>
</g>
<g >
<title>cfree (1,361,232 samples, 0.02%)</title><rect x="948.0" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="951.04" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (42,749,925 samples, 0.50%)</title><rect x="530.5" y="533" width="5.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="533.51" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,569,319 samples, 0.02%)</title><rect x="1102.1" y="213" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1105.12" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,311,157 samples, 0.02%)</title><rect x="1102.1" y="165" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1105.12" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (22,699,611 samples, 0.26%)</title><rect x="345.0" y="485" width="3.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="348.00" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,656,203 samples, 0.03%)</title><rect x="1070.0" y="373" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1073.01" y="383.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (12,012,384 samples, 0.14%)</title><rect x="84.6" y="501" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="87.59" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (54,544,061 samples, 0.63%)</title><rect x="386.8" y="517" width="7.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="389.82" y="527.5" ></text>
</g>
<g >
<title>handle_edge_irq (2,065,929 samples, 0.02%)</title><rect x="974.8" y="277" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="977.82" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (920,200 samples, 0.01%)</title><rect x="1153.8" y="357" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1156.82" y="367.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,115,341 samples, 0.05%)</title><rect x="997.9" y="325" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1000.89" y="335.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (5,119,917 samples, 0.06%)</title><rect x="193.5" y="533" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="196.50" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,173,065 samples, 0.01%)</title><rect x="85.0" y="469" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="88.03" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,674,857 samples, 0.02%)</title><rect x="1102.3" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1105.34" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (4,782,308 samples, 0.06%)</title><rect x="82.6" y="533" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="85.60" y="543.5" ></text>
</g>
<g >
<title>choose_next_point (620,151,091 samples, 7.22%)</title><rect x="313.8" y="549" width="85.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="316.80" y="559.5" >choose_nex..</text>
</g>
<g >
<title>update_process_times (1,352,857 samples, 0.02%)</title><rect x="1027.2" y="69" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1030.21" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (778,041 samples, 0.01%)</title><rect x="1130.8" y="181" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1133.77" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,595,036 samples, 0.02%)</title><rect x="1068.2" y="149" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1071.24" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,521,514 samples, 0.02%)</title><rect x="1127.3" y="213" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1130.27" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,263,352 samples, 0.03%)</title><rect x="702.6" y="485" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="705.57" y="495.5" ></text>
</g>
<g >
<title>malloc (2,369,418 samples, 0.03%)</title><rect x="1037.4" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1040.44" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (7,609,128 samples, 0.09%)</title><rect x="702.9" y="485" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="705.88" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,777,058 samples, 0.02%)</title><rect x="1054.3" y="181" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1057.33" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,557,646 samples, 0.02%)</title><rect x="396.2" y="517" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="399.15" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,728,272 samples, 0.02%)</title><rect x="85.5" y="469" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="88.50" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (4,173,383 samples, 0.05%)</title><rect x="1008.3" y="325" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1011.31" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (877,403 samples, 0.01%)</title><rect x="1066.2" y="149" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1069.25" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (934,056 samples, 0.01%)</title><rect x="1161.6" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.64" y="319.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="261" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1109.59" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,815,776 samples, 0.02%)</title><rect x="1116.7" y="165" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1119.73" y="175.5" ></text>
</g>
<g >
<title>operator new (2,221,594 samples, 0.03%)</title><rect x="1139.7" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.73" y="303.5" ></text>
</g>
<g >
<title>is_close_int (47,059,072 samples, 0.55%)</title><rect x="726.9" y="533" width="6.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="729.91" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (51,721,115 samples, 0.60%)</title><rect x="1146.7" y="357" width="7.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1149.70" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (794,273 samples, 0.01%)</title><rect x="1153.1" y="165" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1156.15" y="175.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,210,985 samples, 0.01%)</title><rect x="1156.1" y="357" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1159.14" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (24,343,540 samples, 0.28%)</title><rect x="1142.2" y="405" width="3.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1145.22" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (794,273 samples, 0.01%)</title><rect x="1153.1" y="101" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1156.15" y="111.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,450,985 samples, 0.02%)</title><rect x="1003.2" y="277" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1006.21" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,053,457 samples, 0.01%)</title><rect x="585.4" y="341" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="588.39" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,116,175 samples, 0.13%)</title><rect x="1086.5" y="309" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1089.50" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (8,317,879 samples, 0.10%)</title><rect x="696.3" y="517" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="699.31" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,692,257 samples, 0.02%)</title><rect x="940.8" y="309" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="943.78" y="319.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (2,206,196 samples, 0.03%)</title><rect x="875.0" y="517" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="878.01" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,823,420,433 samples, 21.22%)</title><rect x="914.7" y="533" width="250.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="917.67" y="543.5" >[libc.so.6]</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,001,657 samples, 0.13%)</title><rect x="1188.5" y="565" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1191.49" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,540,767 samples, 0.22%)</title><rect x="995.2" y="245" width="2.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="998.19" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,368,746 samples, 0.05%)</title><rect x="1161.5" y="357" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1164.46" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (783,009 samples, 0.01%)</title><rect x="1160.2" y="245" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1163.23" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (4,928,514 samples, 0.06%)</title><rect x="738.7" y="485" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="741.65" y="495.5" ></text>
</g>
<g >
<title>decltype  (2,322,303 samples, 0.03%)</title><rect x="739.3" y="469" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="742.33" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,919,255 samples, 0.05%)</title><rect x="1137.3" y="341" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1140.35" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,692,257 samples, 0.02%)</title><rect x="940.8" y="325" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="943.78" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,163,140 samples, 0.08%)</title><rect x="1057.2" y="101" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1060.21" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,820,808 samples, 0.02%)</title><rect x="1053.0" y="117" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1056.00" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (28,583,106 samples, 0.33%)</title><rect x="1133.4" y="389" width="3.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1136.38" y="399.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (39,887,432 samples, 0.46%)</title><rect x="71.5" y="469" width="5.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="74.47" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,857,480 samples, 0.02%)</title><rect x="1142.0" y="389" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1144.97" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (21,526,750 samples, 0.25%)</title><rect x="516.8" y="453" width="2.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="519.77" y="463.5" ></text>
</g>
<g >
<title>get_inbetween_points (269,018,592 samples, 3.13%)</title><rect x="704.9" y="549" width="37.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="707.92" y="559.5" >get..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,333,202 samples, 0.02%)</title><rect x="696.1" y="517" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="699.09" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (11,116,175 samples, 0.13%)</title><rect x="1086.5" y="325" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1089.50" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,249,771 samples, 0.05%)</title><rect x="950.1" y="325" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="953.13" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (77,121,711 samples, 0.90%)</title><rect x="1073.1" y="357" width="10.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1076.13" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (913,730 samples, 0.01%)</title><rect x="1126.2" y="85" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1129.23" y="95.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (768,461 samples, 0.01%)</title><rect x="1132.6" y="309" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1135.60" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,255,905 samples, 0.01%)</title><rect x="1189.8" y="453" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1192.76" y="463.5" ></text>
</g>
<g >
<title>operator new (2,743,616 samples, 0.03%)</title><rect x="1032.4" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1035.41" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,645,656 samples, 0.04%)</title><rect x="1143.9" y="277" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1146.85" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (913,730 samples, 0.01%)</title><rect x="1126.2" y="181" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1129.23" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (904,850 samples, 0.01%)</title><rect x="587.8" y="501" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="590.85" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (78,756,091 samples, 0.92%)</title><rect x="194.3" y="549" width="10.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="197.27" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (891,791 samples, 0.01%)</title><rect x="502.3" y="501" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="505.32" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (804,236 samples, 0.01%)</title><rect x="1169.4" y="533" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1172.38" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,076,093 samples, 0.04%)</title><rect x="1122.6" y="149" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1125.65" y="159.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (40,763,068 samples, 0.47%)</title><rect x="945.9" y="357" width="5.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="948.94" y="367.5" ></text>
</g>
<g >
<title>operator new (965,203 samples, 0.01%)</title><rect x="945.5" y="389" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="948.51" y="399.5" ></text>
</g>
<g >
<title>malloc (4,367,531 samples, 0.05%)</title><rect x="1148.6" y="213" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1151.58" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (136,262,175 samples, 1.59%)</title><rect x="511.8" y="533" width="18.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="514.80" y="543.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (927,084 samples, 0.01%)</title><rect x="1108.6" y="213" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1111.62" y="223.5" ></text>
</g>
<g >
<title>operator new (1,574,828 samples, 0.02%)</title><rect x="1093.1" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1096.10" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (13,566,383 samples, 0.16%)</title><rect x="509.9" y="533" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="512.94" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (786,539 samples, 0.01%)</title><rect x="929.6" y="197" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="932.60" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (13,250,585 samples, 0.15%)</title><rect x="739.7" y="517" width="1.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="742.65" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,994,362 samples, 0.05%)</title><rect x="1160.4" y="325" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1163.45" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,407,061 samples, 0.03%)</title><rect x="189.2" y="533" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="192.15" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,556,969 samples, 0.04%)</title><rect x="1153.3" y="277" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1156.31" y="287.5" ></text>
</g>
<g >
<title>__mmput (804,236 samples, 0.01%)</title><rect x="1169.4" y="485" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1172.38" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (9,762,953 samples, 0.11%)</title><rect x="978.4" y="357" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="981.42" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (775,317 samples, 0.01%)</title><rect x="1156.4" y="373" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1159.45" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,012,431 samples, 0.01%)</title><rect x="1093.7" y="341" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1096.72" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,830,433 samples, 0.02%)</title><rect x="1012.1" y="309" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1015.13" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,273,535 samples, 0.11%)</title><rect x="874.2" y="549" width="1.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="877.24" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,477,825 samples, 0.02%)</title><rect x="1108.4" y="165" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1111.42" y="175.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (58,292,589 samples, 0.68%)</title><rect x="866.2" y="517" width="8.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="869.23" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (12,320,996 samples, 0.14%)</title><rect x="1140.5" y="405" width="1.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1143.53" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (877,403 samples, 0.01%)</title><rect x="1066.2" y="117" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1069.25" y="127.5" ></text>
</g>
<g >
<title>__common_interrupt (1,614,961 samples, 0.02%)</title><rect x="944.4" y="325" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="947.41" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,254,151 samples, 0.07%)</title><rect x="1137.3" y="405" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1140.31" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (9,586,682 samples, 0.11%)</title><rect x="523.2" y="453" width="1.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="526.15" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (804,687 samples, 0.01%)</title><rect x="951.3" y="325" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="954.34" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,779,758 samples, 0.08%)</title><rect x="1155.0" y="309" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1158.04" y="319.5" ></text>
</g>
<g >
<title>decltype  (793,375 samples, 0.01%)</title><rect x="1068.0" y="69" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1070.98" y="79.5" ></text>
</g>
<g >
<title>operator new (2,607,378 samples, 0.03%)</title><rect x="1063.2" y="165" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1066.19" y="175.5" ></text>
</g>
<g >
<title>common_interrupt (1,614,961 samples, 0.02%)</title><rect x="944.4" y="341" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="947.41" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (28,939,299 samples, 0.34%)</title><rect x="223.4" y="469" width="4.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="226.45" y="479.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (777,170 samples, 0.01%)</title><rect x="689.6" y="453" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="692.58" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (12,403,919 samples, 0.14%)</title><rect x="227.4" y="469" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="230.42" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,356,970 samples, 0.02%)</title><rect x="1164.3" y="357" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1167.27" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,321,721 samples, 0.03%)</title><rect x="1116.7" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1119.71" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (778,462 samples, 0.01%)</title><rect x="1032.0" y="213" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1035.00" y="223.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (84,943,068 samples, 0.99%)</title><rect x="961.2" y="325" width="11.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="964.22" y="335.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,705,006 samples, 0.02%)</title><rect x="384.9" y="437" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="387.89" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (7,747,236 samples, 0.09%)</title><rect x="395.1" y="533" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="398.09" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (807,723 samples, 0.01%)</title><rect x="1149.7" y="133" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1152.70" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (25,777,509 samples, 0.30%)</title><rect x="1032.8" y="101" width="3.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1035.81" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,773,559 samples, 0.02%)</title><rect x="1189.8" y="517" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1192.76" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (4,420,540 samples, 0.05%)</title><rect x="700.4" y="501" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="703.42" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (510,053,488 samples, 5.94%)</title><rect x="998.8" y="373" width="70.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1001.80" y="383.5" >std::_R..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,379,242 samples, 0.02%)</title><rect x="1129.8" y="133" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1132.78" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (729,742 samples, 0.01%)</title><rect x="1135.1" y="261" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1138.12" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (6,885,934 samples, 0.08%)</title><rect x="703.9" y="485" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="706.92" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,554,566 samples, 0.02%)</title><rect x="736.7" y="437" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="739.73" y="447.5" ></text>
</g>
<g >
<title>malloc (299,665,935 samples, 3.49%)</title><rect x="741.9" y="549" width="41.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="744.86" y="559.5" >mal..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (48,018,087 samples, 0.56%)</title><rect x="1123.4" y="261" width="6.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1126.43" y="271.5" ></text>
</g>
<g >
<title>malloc (987,413 samples, 0.01%)</title><rect x="947.7" y="277" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="950.72" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,043,565 samples, 0.01%)</title><rect x="1053.1" y="69" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1056.09" y="79.5" ></text>
</g>
<g >
<title>operator new (6,078,835 samples, 0.07%)</title><rect x="1144.4" y="277" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1147.44" y="287.5" ></text>
</g>
<g >
<title>_start (1,823,420,433 samples, 21.22%)</title><rect x="914.7" y="565" width="250.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="917.67" y="575.5" >_start</text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (979,410 samples, 0.01%)</title><rect x="1162.3" y="389" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1165.28" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,475,161 samples, 0.05%)</title><rect x="930.5" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="933.54" y="287.5" ></text>
</g>
<g >
<title>choose_next_point (1,820,720,701 samples, 21.19%)</title><rect x="914.7" y="453" width="250.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="917.69" y="463.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,786,106 samples, 0.06%)</title><rect x="186.0" y="533" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="189.02" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (904,850 samples, 0.01%)</title><rect x="587.8" y="469" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="590.85" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,293,941 samples, 0.04%)</title><rect x="1085.4" y="245" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1088.42" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,965,660 samples, 0.02%)</title><rect x="978.1" y="341" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="981.14" y="351.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (915,031 samples, 0.01%)</title><rect x="1162.1" y="389" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1165.06" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,313,082 samples, 0.05%)</title><rect x="735.9" y="437" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="738.91" y="447.5" ></text>
</g>
<g >
<title>malloc (222,980,281 samples, 2.59%)</title><rect x="94.1" y="549" width="30.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="97.07" y="559.5" >ma..</text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,147,881 samples, 0.04%)</title><rect x="1011.5" y="261" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1014.46" y="271.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (781,034 samples, 0.01%)</title><rect x="703.8" y="469" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="706.82" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,610,210 samples, 0.12%)</title><rect x="80.1" y="485" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="83.08" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,076,093 samples, 0.04%)</title><rect x="1122.6" y="165" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1125.65" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (2,316,576 samples, 0.03%)</title><rect x="667.2" y="501" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="670.21" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,828,731 samples, 0.02%)</title><rect x="1164.0" y="325" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1167.01" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (12,017,516 samples, 0.14%)</title><rect x="845.3" y="501" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="848.30" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,239,052 samples, 0.03%)</title><rect x="949.6" y="213" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="952.60" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,760,016 samples, 0.06%)</title><rect x="689.0" y="485" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="692.04" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (50,356,454 samples, 0.59%)</title><rect x="379.9" y="533" width="6.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="382.90" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,121,000 samples, 0.04%)</title><rect x="79.0" y="485" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="82.00" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (50,401,535 samples, 0.59%)</title><rect x="1061.6" y="261" width="6.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1064.58" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,417,613 samples, 0.02%)</title><rect x="1168.9" y="533" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1171.86" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,274,271 samples, 0.03%)</title><rect x="1118.9" y="181" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1121.93" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (913,730 samples, 0.01%)</title><rect x="1126.2" y="165" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1129.23" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (7,123,130 samples, 0.08%)</title><rect x="692.2" y="469" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="695.17" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,542,736 samples, 0.06%)</title><rect x="849.4" y="501" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="852.45" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (55,391,864 samples, 0.64%)</title><rect x="580.2" y="533" width="7.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="583.24" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,266,537 samples, 0.01%)</title><rect x="1145.9" y="325" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1148.93" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (3,474,516 samples, 0.04%)</title><rect x="333.6" y="501" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="336.57" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (913,730 samples, 0.01%)</title><rect x="1126.2" y="117" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1129.23" y="127.5" ></text>
</g>
<g >
<title>decltype  (5,058,718 samples, 0.06%)</title><rect x="587.2" y="453" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="590.15" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (9,389,912 samples, 0.11%)</title><rect x="840.2" y="501" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="843.23" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,436,054 samples, 0.03%)</title><rect x="1068.5" y="213" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1071.50" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,563,789 samples, 0.02%)</title><rect x="953.3" y="405" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="956.25" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (798,015 samples, 0.01%)</title><rect x="1137.2" y="277" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1140.20" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (1,304,845 samples, 0.02%)</title><rect x="1142.6" y="373" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1145.60" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (778,041 samples, 0.01%)</title><rect x="1130.8" y="133" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1133.77" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (365,121,002 samples, 4.25%)</title><rect x="329.8" y="517" width="50.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="332.77" y="527.5" >std::..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,022,545 samples, 0.01%)</title><rect x="432.5" y="485" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="435.51" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,674,857 samples, 0.02%)</title><rect x="1102.3" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1105.34" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (58,292,589 samples, 0.68%)</title><rect x="866.2" y="533" width="8.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="869.23" y="543.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,844,334 samples, 0.07%)</title><rect x="587.0" y="485" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="590.04" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,693,267 samples, 0.04%)</title><rect x="1153.3" y="309" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1156.29" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (790,635 samples, 0.01%)</title><rect x="983.7" y="357" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="986.67" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,317,235 samples, 0.02%)</title><rect x="922.3" y="357" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="925.35" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,173,065 samples, 0.01%)</title><rect x="85.0" y="437" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="88.03" y="447.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (58,292,589 samples, 0.68%)</title><rect x="866.2" y="501" width="8.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="869.23" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (3,772,118 samples, 0.04%)</title><rect x="579.7" y="533" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="582.72" y="543.5" ></text>
</g>
<g >
<title>operator new (1,299,155 samples, 0.02%)</title><rect x="992.1" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="995.11" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,389,723 samples, 0.03%)</title><rect x="82.2" y="517" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="85.22" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,477,825 samples, 0.02%)</title><rect x="1108.4" y="197" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1111.42" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,356,970 samples, 0.02%)</title><rect x="1164.3" y="341" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1167.27" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,498,945 samples, 0.03%)</title><rect x="1107.4" y="277" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1110.38" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (4,061,994 samples, 0.05%)</title><rect x="1069.3" y="341" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1072.27" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,204,763 samples, 0.01%)</title><rect x="944.7" y="277" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="947.68" y="287.5" ></text>
</g>
<g >
<title>cfree (982,166 samples, 0.01%)</title><rect x="1164.3" y="293" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1167.28" y="303.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (75,160,047 samples, 0.87%)</title><rect x="923.8" y="357" width="10.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="926.85" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,255,905 samples, 0.01%)</title><rect x="1189.8" y="501" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1192.76" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,606,808 samples, 0.02%)</title><rect x="591.1" y="469" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="594.13" y="479.5" ></text>
</g>
<g >
<title>exit_mmap (804,236 samples, 0.01%)</title><rect x="1169.4" y="469" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1172.38" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (11,138,976 samples, 0.13%)</title><rect x="1157.1" y="341" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1160.11" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (40,270,166 samples, 0.47%)</title><rect x="381.3" y="501" width="5.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="384.29" y="511.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,541,021 samples, 0.04%)</title><rect x="704.4" y="437" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="707.38" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (13,566,383 samples, 0.16%)</title><rect x="509.9" y="485" width="1.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="512.94" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (786,539 samples, 0.01%)</title><rect x="929.6" y="229" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="932.60" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (25,529,382 samples, 0.30%)</title><rect x="930.5" y="341" width="3.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="933.54" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,436,054 samples, 0.03%)</title><rect x="1068.5" y="277" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1071.50" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (792,612 samples, 0.01%)</title><rect x="1007.1" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1010.15" y="319.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,254,655 samples, 0.06%)</title><rect x="1083.0" y="293" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1085.99" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (25,465,374 samples, 0.30%)</title><rect x="1133.8" y="341" width="3.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1136.81" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,443,098 samples, 0.02%)</title><rect x="1028.7" y="197" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1031.66" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,341,120 samples, 0.03%)</title><rect x="1163.3" y="325" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1166.26" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,274,271 samples, 0.03%)</title><rect x="1118.9" y="229" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1121.93" y="239.5" ></text>
</g>
<g >
<title>gen_all_points (77,681,675 samples, 0.90%)</title><rect x="923.5" y="405" width="10.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="926.50" y="415.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,705,006 samples, 0.02%)</title><rect x="384.9" y="453" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="387.89" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,337,483 samples, 0.17%)</title><rect x="985.1" y="261" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="988.07" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,818,717 samples, 0.02%)</title><rect x="584.9" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="587.90" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event (2,065,929 samples, 0.02%)</title><rect x="974.8" y="261" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="977.82" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,254,151 samples, 0.07%)</title><rect x="1137.3" y="389" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1140.31" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,336,805 samples, 0.03%)</title><rect x="1052.9" y="165" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1055.93" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,274,271 samples, 0.03%)</title><rect x="1118.9" y="213" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1121.93" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,593,138 samples, 0.02%)</title><rect x="1027.2" y="101" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1030.17" y="111.5" ></text>
</g>
<g >
<title>folio_end_writeback (1,478,693 samples, 0.02%)</title><rect x="944.4" y="181" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="947.42" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,042,914 samples, 0.01%)</title><rect x="1126.2" y="213" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1129.21" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,521,514 samples, 0.02%)</title><rect x="1127.3" y="197" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1130.27" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,732,577 samples, 0.02%)</title><rect x="951.0" y="325" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="954.01" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (1,055,863 samples, 0.01%)</title><rect x="1153.8" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1156.80" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (928,715 samples, 0.01%)</title><rect x="950.6" y="277" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="953.59" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (48,049,072 samples, 0.56%)</title><rect x="923.9" y="293" width="6.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="926.94" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,324,983 samples, 0.02%)</title><rect x="995.3" y="133" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="998.34" y="143.5" ></text>
</g>
<g >
<title>std::abs (3,168,246 samples, 0.04%)</title><rect x="732.9" y="517" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="735.94" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (3,796,779 samples, 0.04%)</title><rect x="702.0" y="485" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="705.05" y="495.5" ></text>
</g>
<g >
<title>malloc (12,086,401 samples, 0.14%)</title><rect x="1064.7" y="165" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1067.71" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (802,930 samples, 0.01%)</title><rect x="923.0" y="325" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="925.98" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (915,031 samples, 0.01%)</title><rect x="1162.1" y="325" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1165.06" y="335.5" ></text>
</g>
<g >
<title>operator delete (2,135,829 samples, 0.02%)</title><rect x="945.2" y="389" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="948.22" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,053,457 samples, 0.01%)</title><rect x="585.4" y="373" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="588.39" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,305,682 samples, 0.02%)</title><rect x="1117.3" y="229" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.26" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,942,990 samples, 0.02%)</title><rect x="1137.9" y="309" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1140.88" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (1,616,254,019 samples, 18.81%)</title><rect x="915.4" y="421" width="221.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="918.38" y="431.5" >choose_next_point</text>
</g>
<g >
<title>scheduler_tick (777,721 samples, 0.01%)</title><rect x="991.7" y="101" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="994.71" y="111.5" ></text>
</g>
<g >
<title>malloc (1,609,945 samples, 0.02%)</title><rect x="1158.0" y="293" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1160.98" y="303.5" ></text>
</g>
<g >
<title>operator new (1,052,357 samples, 0.01%)</title><rect x="1127.1" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.07" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (802,449 samples, 0.01%)</title><rect x="875.3" y="517" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="878.32" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,994,362 samples, 0.05%)</title><rect x="1160.4" y="293" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1163.45" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (50,650,626 samples, 0.59%)</title><rect x="1061.5" y="293" width="7.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1064.55" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,717,328 samples, 0.07%)</title><rect x="394.3" y="517" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="397.31" y="527.5" ></text>
</g>
<g >
<title>cfree (7,803,547 samples, 0.09%)</title><rect x="1102.6" y="261" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1105.57" y="271.5" ></text>
</g>
<g >
<title>decltype  (1,066,249 samples, 0.01%)</title><rect x="923.7" y="341" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="926.70" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,115,341 samples, 0.05%)</title><rect x="997.9" y="357" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1000.89" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,293,941 samples, 0.04%)</title><rect x="1085.4" y="261" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1088.42" y="271.5" ></text>
</g>
<g >
<title>std::abs (1,048,326 samples, 0.01%)</title><rect x="431.1" y="517" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="434.08" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (789,240 samples, 0.01%)</title><rect x="923.1" y="325" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="926.09" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (19,954,661 samples, 0.23%)</title><rect x="1150.5" y="245" width="2.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1153.51" y="255.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,000,192 samples, 0.01%)</title><rect x="313.6" y="533" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="316.55" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,066,222 samples, 0.01%)</title><rect x="1137.2" y="293" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1140.16" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (768,439 samples, 0.01%)</title><rect x="1011.9" y="261" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1014.89" y="271.5" ></text>
</g>
<g >
<title>operator new (12,144,960 samples, 0.14%)</title><rect x="1148.2" y="229" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1151.22" y="239.5" ></text>
</g>
<g >
<title>decltype  (1,319,086 samples, 0.02%)</title><rect x="84.4" y="485" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="87.41" y="495.5" ></text>
</g>
<g >
<title>cfree (4,291,302 samples, 0.05%)</title><rect x="1126.4" y="229" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1129.42" y="239.5" ></text>
</g>
<g >
<title>operator new (1,367,857 samples, 0.02%)</title><rect x="1119.0" y="117" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1122.00" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,963,450 samples, 0.05%)</title><rect x="1153.3" y="325" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1156.26" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,521,514 samples, 0.02%)</title><rect x="1127.3" y="165" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1130.27" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (7,106,448 samples, 0.08%)</title><rect x="219.1" y="533" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="222.14" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,828,909 samples, 0.02%)</title><rect x="991.6" y="229" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="994.60" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (2,508,010 samples, 0.03%)</title><rect x="694.2" y="501" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="697.18" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,061,403 samples, 0.01%)</title><rect x="1104.1" y="213" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1107.14" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (906,242 samples, 0.01%)</title><rect x="1012.1" y="277" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1015.13" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,203,236 samples, 0.03%)</title><rect x="1116.7" y="197" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1119.73" y="207.5" ></text>
</g>
<g >
<title>operator new (3,151,768 samples, 0.04%)</title><rect x="1151.2" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.19" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (9,010,894 samples, 0.10%)</title><rect x="408.9" y="453" width="1.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="411.93" y="463.5" ></text>
</g>
<g >
<title>gen_all_points (6,254,151 samples, 0.07%)</title><rect x="1137.3" y="421" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1140.31" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,180,068 samples, 0.01%)</title><rect x="1160.2" y="261" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1163.18" y="271.5" ></text>
</g>
<g >
<title>do_group_exit (804,236 samples, 0.01%)</title><rect x="1169.4" y="517" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1172.38" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (7,747,236 samples, 0.09%)</title><rect x="395.1" y="517" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="398.09" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,660,627 samples, 0.02%)</title><rect x="1127.3" y="229" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1130.25" y="239.5" ></text>
</g>
<g >
<title>decltype  (937,333 samples, 0.01%)</title><rect x="1060.9" y="229" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1063.93" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (880,719 samples, 0.01%)</title><rect x="190.0" y="533" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="192.98" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (785,621 samples, 0.01%)</title><rect x="1012.3" y="245" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1015.28" y="255.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,036,878 samples, 0.01%)</title><rect x="86.0" y="437" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="89.03" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,613,624 samples, 0.11%)</title><rect x="1061.6" y="181" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1064.63" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (53,307,510 samples, 0.62%)</title><rect x="519.7" y="517" width="7.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="522.72" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,929,097 samples, 0.03%)</title><rect x="526.6" y="501" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="529.64" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (13,566,383 samples, 0.16%)</title><rect x="509.9" y="501" width="1.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="512.94" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,521,514 samples, 0.02%)</title><rect x="1127.3" y="117" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1130.27" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (1,941,311 samples, 0.02%)</title><rect x="396.4" y="533" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="399.37" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (23,107,958 samples, 0.27%)</title><rect x="1147.2" y="309" width="3.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1150.16" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,397,087 samples, 0.09%)</title><rect x="76.9" y="501" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="79.94" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (48,049,072 samples, 0.56%)</title><rect x="923.9" y="325" width="6.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="926.94" y="335.5" ></text>
</g>
<g >
<title>operator delete (7,125,650 samples, 0.08%)</title><rect x="1106.1" y="277" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1109.07" y="287.5" ></text>
</g>
<g >
<title>cfree (1,979,063 samples, 0.02%)</title><rect x="1148.3" y="213" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1151.29" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (11,138,976 samples, 0.13%)</title><rect x="1157.1" y="357" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1160.11" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,325,312 samples, 0.02%)</title><rect x="1003.4" y="325" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1006.41" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (17,523,530 samples, 0.20%)</title><rect x="83.8" y="533" width="2.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="86.84" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,830,433 samples, 0.02%)</title><rect x="1012.1" y="293" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1015.13" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (6,153,175 samples, 0.07%)</title><rect x="434.0" y="485" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="436.95" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (4,510,767 samples, 0.05%)</title><rect x="950.1" y="341" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="953.10" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (10,610,210 samples, 0.12%)</title><rect x="80.1" y="501" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="83.08" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,708,254 samples, 0.02%)</title><rect x="1002.0" y="277" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1004.97" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,915,109 samples, 0.02%)</title><rect x="79.0" y="405" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="82.00" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,919,255 samples, 0.05%)</title><rect x="1137.3" y="325" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1140.35" y="335.5" ></text>
</g>
<g >
<title>__folio_end_writeback (1,810,674 samples, 0.02%)</title><rect x="974.9" y="133" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="977.86" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (909,384 samples, 0.01%)</title><rect x="950.0" y="277" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="952.97" y="287.5" ></text>
</g>
<g >
<title>operator new (919,915 samples, 0.01%)</title><rect x="1163.4" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1166.42" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,704,796 samples, 0.02%)</title><rect x="949.6" y="149" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="952.60" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (900,450 samples, 0.01%)</title><rect x="1130.8" y="213" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1133.76" y="223.5" ></text>
</g>
<g >
<title>get_inbetween_points (56,971,355 samples, 0.66%)</title><rect x="86.2" y="549" width="7.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="89.24" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (6,270,588 samples, 0.07%)</title><rect x="1076.2" y="309" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1079.19" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (21,526,750 samples, 0.25%)</title><rect x="516.8" y="517" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="519.77" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,595,036 samples, 0.02%)</title><rect x="1068.2" y="133" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1071.24" y="143.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,204,763 samples, 0.01%)</title><rect x="944.7" y="309" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="947.68" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (804,687 samples, 0.01%)</title><rect x="951.3" y="341" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="954.34" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (924,318 samples, 0.01%)</title><rect x="1014.2" y="325" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1017.17" y="335.5" ></text>
</g>
<g >
<title>operator new (3,758,643 samples, 0.04%)</title><rect x="1028.0" y="197" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1030.97" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,891,711 samples, 0.06%)</title><rect x="1163.2" y="373" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1166.17" y="383.5" ></text>
</g>
<g >
<title>get_inbetween_points (133,213,370 samples, 1.55%)</title><rect x="416.6" y="549" width="18.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="419.56" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (5,524,978 samples, 0.06%)</title><rect x="1163.8" y="421" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1166.84" y="431.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (6,412,010 samples, 0.07%)</title><rect x="1004.2" y="293" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1007.17" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (18,855,088 samples, 0.22%)</title><rect x="431.4" y="533" width="2.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="434.37" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (3,328,010 samples, 0.04%)</title><rect x="1087.1" y="277" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1090.10" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,165,812 samples, 0.01%)</title><rect x="1163.3" y="245" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.26" y="255.5" ></text>
</g>
<g >
<title>cfree (4,838,236 samples, 0.06%)</title><rect x="927.1" y="277" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="930.07" y="287.5" ></text>
</g>
<g >
<title>cfree (18,240,908 samples, 0.21%)</title><rect x="931.2" y="277" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="934.17" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (13,663,690 samples, 0.16%)</title><rect x="856.3" y="533" width="1.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="859.34" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,941,311 samples, 0.02%)</title><rect x="396.4" y="517" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="399.37" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,740,054 samples, 0.03%)</title><rect x="85.8" y="453" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="88.79" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (914,897 samples, 0.01%)</title><rect x="972.7" y="229" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="975.69" y="239.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (73,796,734 samples, 0.86%)</title><rect x="406.4" y="501" width="10.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="409.43" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (99,888,695 samples, 1.16%)</title><rect x="1109.4" y="325" width="13.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1112.44" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (19,954,661 samples, 0.23%)</title><rect x="1150.5" y="277" width="2.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1153.51" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (2,041,799 samples, 0.02%)</title><rect x="922.9" y="357" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="925.92" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (11,138,976 samples, 0.13%)</title><rect x="1157.1" y="373" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.11" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (789,240 samples, 0.01%)</title><rect x="923.1" y="309" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="926.09" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (9,367,469 samples, 0.11%)</title><rect x="393.0" y="501" width="1.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="396.02" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,573,349 samples, 0.02%)</title><rect x="972.7" y="293" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="975.66" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (1,042,585 samples, 0.01%)</title><rect x="1092.8" y="357" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1095.84" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,519,085 samples, 0.04%)</title><rect x="1139.6" y="325" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1142.57" y="335.5" ></text>
</g>
<g >
<title>operator new (888,015 samples, 0.01%)</title><rect x="949.1" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="952.07" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,982,846 samples, 0.05%)</title><rect x="689.0" y="437" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="692.04" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (19,954,661 samples, 0.23%)</title><rect x="1150.5" y="293" width="2.8" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1153.51" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (795,385 samples, 0.01%)</title><rect x="1003.7" y="245" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1006.67" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (35,004,073 samples, 0.41%)</title><rect x="908.1" y="485" width="4.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="911.10" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (768,672 samples, 0.01%)</title><rect x="94.0" y="501" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="96.96" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,205,891 samples, 0.01%)</title><rect x="79.3" y="437" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="82.26" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (941,826 samples, 0.01%)</title><rect x="82.1" y="533" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="85.09" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (66,292,261 samples, 0.77%)</title><rect x="177.6" y="549" width="9.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="180.57" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,953,037 samples, 0.07%)</title><rect x="586.2" y="309" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="589.19" y="319.5" ></text>
</g>
<g >
<title>cfree (4,434,739 samples, 0.05%)</title><rect x="1063.0" y="181" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1065.97" y="191.5" ></text>
</g>
<g >
<title>cfree (184,427,893 samples, 2.15%)</title><rect x="37.5" y="549" width="25.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="40.47" y="559.5" >c..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (17,884,371 samples, 0.21%)</title><rect x="995.3" y="229" width="2.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="998.28" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,249,771 samples, 0.05%)</title><rect x="950.1" y="293" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="953.13" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (170,942,641 samples, 1.99%)</title><rect x="975.2" y="389" width="23.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="978.16" y="399.5" >s..</text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (3,678,936 samples, 0.04%)</title><rect x="93.1" y="517" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="96.06" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (76,886,785 samples, 0.89%)</title><rect x="923.6" y="373" width="10.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="926.61" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,915,109 samples, 0.02%)</title><rect x="79.0" y="437" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="82.00" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (907,405 samples, 0.01%)</title><rect x="1146.2" y="325" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1149.17" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,051,852 samples, 0.05%)</title><rect x="993.8" y="197" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="996.82" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (85,908,644 samples, 1.00%)</title><rect x="841.5" y="533" width="11.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="844.52" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (158,976,926 samples, 1.85%)</title><rect x="1014.5" y="277" width="21.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1017.52" y="287.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (79,914,244 samples, 0.93%)</title><rect x="875.5" y="549" width="11.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="878.51" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (5,681,391 samples, 0.07%)</title><rect x="1069.1" y="357" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1072.05" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (286,751,927 samples, 3.34%)</title><rect x="1093.3" y="373" width="39.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1096.33" y="383.5" >std..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (729,742 samples, 0.01%)</title><rect x="1135.1" y="277" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1138.12" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,571,590 samples, 0.02%)</title><rect x="975.7" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="978.74" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (22,974,867 samples, 0.27%)</title><rect x="1147.2" y="277" width="3.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1150.16" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,210,985 samples, 0.01%)</title><rect x="1156.1" y="373" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1159.14" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (32,791,981 samples, 0.38%)</title><rect x="1184.0" y="565" width="4.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1186.99" y="575.5" ></text>
</g>
<g >
<title>malloc (1,156,140 samples, 0.01%)</title><rect x="1033.3" y="85" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1036.29" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,859,164 samples, 0.03%)</title><rect x="741.5" y="533" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="744.47" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (2,902,570 samples, 0.03%)</title><rect x="93.6" y="533" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="96.56" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (5,039,064 samples, 0.06%)</title><rect x="92.3" y="517" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="95.35" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (904,850 samples, 0.01%)</title><rect x="587.8" y="517" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="590.85" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (6,896,131 samples, 0.08%)</title><rect x="1006.8" y="341" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1009.80" y="351.5" ></text>
</g>
<g >
<title>operator delete (1,008,777 samples, 0.01%)</title><rect x="1044.9" y="197" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1047.91" y="207.5" ></text>
</g>
<g >
<title>operator new (9,557,421 samples, 0.11%)</title><rect x="1043.2" y="181" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1046.24" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (2,859,164 samples, 0.03%)</title><rect x="741.5" y="485" width="0.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="744.47" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (22,232,043 samples, 0.26%)</title><rect x="1028.9" y="197" width="3.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1031.86" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (25,777,509 samples, 0.30%)</title><rect x="1032.8" y="181" width="3.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1035.81" y="191.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (15,606,740 samples, 0.18%)</title><rect x="684.2" y="469" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="687.20" y="479.5" ></text>
</g>
<g >
<title>[anon] (2,613,355,630 samples, 30.41%)</title><rect x="229.1" y="565" width="358.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="232.12" y="575.5" >[anon]</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,805,323 samples, 0.02%)</title><rect x="432.3" y="469" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="435.26" y="479.5" ></text>
</g>
<g >
<title>malloc (915,059 samples, 0.01%)</title><rect x="1144.9" y="261" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1147.86" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (159,632,282 samples, 1.86%)</title><rect x="1014.5" y="293" width="21.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1017.52" y="303.5" >s..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,057,076 samples, 0.01%)</title><rect x="1067.9" y="85" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1070.94" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,995,327 samples, 0.02%)</title><rect x="1160.5" y="245" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.52" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (892,813 samples, 0.01%)</title><rect x="432.5" y="453" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="435.53" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (108,430,914 samples, 1.26%)</title><rect x="1093.9" y="341" width="14.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1096.86" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,197,123 samples, 0.01%)</title><rect x="1156.0" y="309" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1158.98" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (165,659,197 samples, 1.93%)</title><rect x="1038.2" y="261" width="22.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1041.18" y="271.5" >s..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,591,154 samples, 0.02%)</title><rect x="944.6" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="947.63" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (17,523,530 samples, 0.20%)</title><rect x="83.8" y="517" width="2.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="86.84" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (21,526,750 samples, 0.25%)</title><rect x="516.8" y="501" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="519.77" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (108,430,914 samples, 1.26%)</title><rect x="1093.9" y="309" width="14.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1096.86" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,335,605 samples, 0.03%)</title><rect x="1116.7" y="229" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1119.71" y="239.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,957,929 samples, 0.07%)</title><rect x="1092.0" y="325" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1095.02" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,450,985 samples, 0.02%)</title><rect x="1003.2" y="293" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1006.21" y="303.5" ></text>
</g>
<g >
<title>roundf32x (7,908,084 samples, 0.09%)</title><rect x="176.5" y="549" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="179.49" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (58,824,698 samples, 0.68%)</title><rect x="1123.2" y="341" width="8.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1126.16" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (3,406,597 samples, 0.04%)</title><rect x="1156.6" y="389" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1159.56" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (929,356 samples, 0.01%)</title><rect x="1162.9" y="341" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1165.93" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,721,099 samples, 0.02%)</title><rect x="184.7" y="517" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="187.67" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (12,017,516 samples, 0.14%)</title><rect x="845.3" y="453" width="1.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="848.30" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,404,909 samples, 0.03%)</title><rect x="1108.4" y="245" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1111.42" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,161,663 samples, 0.03%)</title><rect x="1164.3" y="389" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1167.27" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,979,028 samples, 0.02%)</title><rect x="1152.8" y="197" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1155.80" y="207.5" ></text>
</g>
<g >
<title>cfree (7,113,856 samples, 0.08%)</title><rect x="988.1" y="245" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="991.07" y="255.5" ></text>
</g>
<g >
<title>get_inbetween_points (758,260 samples, 0.01%)</title><rect x="1012.5" y="325" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1015.50" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (6,153,175 samples, 0.07%)</title><rect x="434.0" y="501" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="436.95" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,174,985 samples, 0.01%)</title><rect x="1003.6" y="277" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1006.61" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (17,884,371 samples, 0.21%)</title><rect x="995.3" y="213" width="2.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="998.28" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,425,874 samples, 0.05%)</title><rect x="586.2" y="293" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="589.19" y="303.5" ></text>
</g>
<g >
<title>cfree (9,338,887 samples, 0.11%)</title><rect x="928.0" y="261" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="931.05" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (785,621 samples, 0.01%)</title><rect x="1012.3" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1015.28" y="271.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,368,563 samples, 0.03%)</title><rect x="416.2" y="485" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="419.24" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,114,368 samples, 0.06%)</title><rect x="410.4" y="469" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="413.44" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (66,113,260 samples, 0.77%)</title><rect x="1073.9" y="325" width="9.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1076.92" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (913,922 samples, 0.01%)</title><rect x="991.7" y="133" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="994.71" y="143.5" ></text>
</g>
<g >
<title>malloc (171,999,156 samples, 2.00%)</title><rect x="434.9" y="549" width="23.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="437.85" y="559.5" >m..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,440,934 samples, 0.04%)</title><rect x="180.9" y="469" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="183.91" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (25,777,509 samples, 0.30%)</title><rect x="1032.8" y="149" width="3.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1035.81" y="159.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,403,919 samples, 0.14%)</title><rect x="227.4" y="485" width="1.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="230.42" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,379,242 samples, 0.02%)</title><rect x="1129.8" y="181" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1132.78" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (9,688,079 samples, 0.11%)</title><rect x="383.8" y="469" width="1.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="386.80" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,341,120 samples, 0.03%)</title><rect x="1163.3" y="341" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1166.26" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (50,135,504 samples, 0.58%)</title><rect x="1061.6" y="197" width="6.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1064.58" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,931,268 samples, 0.02%)</title><rect x="1067.8" y="117" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1070.82" y="127.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="181" width="0.4" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1109.59" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (4,173,383 samples, 0.05%)</title><rect x="1008.3" y="341" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1011.31" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,698,877 samples, 0.02%)</title><rect x="1053.0" y="85" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1056.00" y="95.5" ></text>
</g>
<g >
<title>operator new (3,716,930 samples, 0.04%)</title><rect x="952.4" y="405" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="955.41" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (789,040 samples, 0.01%)</title><rect x="1053.1" y="37" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1056.13" y="47.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,726,739 samples, 0.02%)</title><rect x="1182.1" y="549" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1185.12" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (37,535,122 samples, 0.44%)</title><rect x="561.9" y="549" width="5.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="564.94" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (7,665,353 samples, 0.09%)</title><rect x="960.2" y="357" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="963.16" y="367.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (71,846,602 samples, 0.84%)</title><rect x="551.2" y="501" width="9.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="554.17" y="511.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (16,583,933 samples, 0.19%)</title><rect x="972.9" y="341" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="975.88" y="351.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (937,333 samples, 0.01%)</title><rect x="1060.9" y="245" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1063.93" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,436,054 samples, 0.03%)</title><rect x="1068.5" y="197" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1071.50" y="207.5" ></text>
</g>
<g >
<title>decltype  (1,190,185 samples, 0.01%)</title><rect x="1058.2" y="85" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1061.22" y="95.5" ></text>
</g>
<g >
<title>operator new (12,239,931 samples, 0.14%)</title><rect x="995.8" y="133" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="998.82" y="143.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,314,922 samples, 0.02%)</title><rect x="1058.2" y="101" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1061.20" y="111.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,389,723 samples, 0.03%)</title><rect x="82.2" y="533" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="85.22" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (19,954,661 samples, 0.23%)</title><rect x="1150.5" y="325" width="2.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1153.51" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,444,155 samples, 0.02%)</title><rect x="1137.9" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.94" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (37,192,292 samples, 0.43%)</title><rect x="581.9" y="453" width="5.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="584.94" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,440,934 samples, 0.04%)</title><rect x="180.9" y="501" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="183.91" y="511.5" ></text>
</g>
<g >
<title>operator new (9,447,153 samples, 0.11%)</title><rect x="1059.5" y="69" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1062.49" y="79.5" ></text>
</g>
<g >
<title>attempt7_cpp (8,593,512,679 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >attempt7_cpp</text>
</g>
<g >
<title>local_Rb_tree_rotate_left (1,425,075 samples, 0.02%)</title><rect x="566.5" y="533" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="569.52" y="543.5" ></text>
</g>
<g >
<title>get_inbetween_points (27,399,833 samples, 0.32%)</title><rect x="1089.2" y="373" width="3.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1092.22" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (14,526,910 samples, 0.17%)</title><rect x="528.5" y="517" width="2.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="531.52" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (59,692,726 samples, 0.69%)</title><rect x="1145.6" y="389" width="8.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1148.60" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (43,243,389 samples, 0.50%)</title><rect x="1077.1" y="309" width="5.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1080.06" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,760,016 samples, 0.06%)</title><rect x="689.0" y="469" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="692.04" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (15,606,740 samples, 0.18%)</title><rect x="684.2" y="501" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="687.20" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (3,045,570 samples, 0.04%)</title><rect x="1162.6" y="437" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1165.64" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (3,206,423 samples, 0.04%)</title><rect x="736.5" y="485" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="739.50" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (21,686,475 samples, 0.25%)</title><rect x="976.8" y="373" width="3.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="979.79" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,090,118 samples, 0.02%)</title><rect x="183.6" y="469" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="186.59" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (1,442,763 samples, 0.02%)</title><rect x="1088.7" y="341" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1091.67" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (874,192 samples, 0.01%)</title><rect x="1067.8" y="53" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1070.82" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (8,478,062 samples, 0.10%)</title><rect x="1057.2" y="149" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1060.21" y="159.5" ></text>
</g>
<g >
<title>operator new (2,692,844 samples, 0.03%)</title><rect x="1126.6" y="213" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.61" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,061,403 samples, 0.01%)</title><rect x="1104.1" y="165" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1107.14" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,712,648 samples, 0.02%)</title><rect x="1068.2" y="165" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1071.23" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,082,689 samples, 0.09%)</title><rect x="184.9" y="533" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="187.91" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (6,244,176 samples, 0.07%)</title><rect x="1130.2" y="277" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1133.23" y="287.5" ></text>
</g>
<g >
<title>operator new (803,433 samples, 0.01%)</title><rect x="1127.4" y="101" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.37" y="111.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,006,585 samples, 0.01%)</title><rect x="1004.9" y="245" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1007.91" y="255.5" ></text>
</g>
<g >
<title>cfree (1,562,679 samples, 0.02%)</title><rect x="1137.9" y="293" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1140.92" y="303.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,319,086 samples, 0.02%)</title><rect x="84.4" y="501" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="87.41" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (792,612 samples, 0.01%)</title><rect x="1007.1" y="293" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1010.15" y="303.5" ></text>
</g>
<g >
<title>operator delete (3,419,195 samples, 0.04%)</title><rect x="929.7" y="261" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="932.71" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,737,981 samples, 0.16%)</title><rect x="1059.0" y="85" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1061.99" y="95.5" ></text>
</g>
<g >
<title>scheduler_tick (1,017,862 samples, 0.01%)</title><rect x="1116.8" y="101" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1119.84" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,274,271 samples, 0.03%)</title><rect x="1118.9" y="165" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1121.93" y="175.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (1,590,687 samples, 0.02%)</title><rect x="1187.9" y="549" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1190.87" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,595,036 samples, 0.02%)</title><rect x="1068.2" y="85" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1071.24" y="95.5" ></text>
</g>
<g >
<title>malloc (917,506 samples, 0.01%)</title><rect x="1130.9" y="229" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1133.88" y="239.5" ></text>
</g>
<g >
<title>__folio_end_writeback (1,348,026 samples, 0.02%)</title><rect x="944.4" y="165" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="947.44" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,061,403 samples, 0.01%)</title><rect x="1104.1" y="181" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1107.14" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (874,192 samples, 0.01%)</title><rect x="1067.8" y="69" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1070.82" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (915,031 samples, 0.01%)</title><rect x="1162.1" y="373" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1165.06" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (167,626,202 samples, 1.95%)</title><rect x="1038.0" y="309" width="23.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1041.04" y="319.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,942,785 samples, 0.10%)</title><rect x="903.4" y="533" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="906.43" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (13,757,455 samples, 0.16%)</title><rect x="78.0" y="517" width="1.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="80.96" y="527.5" ></text>
</g>
<g >
<title>cfree (1,380,074 samples, 0.02%)</title><rect x="1043.0" y="181" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1045.98" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (786,667 samples, 0.01%)</title><rect x="1020.4" y="197" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1023.44" y="207.5" ></text>
</g>
<g >
<title>roundf32x (3,627,804 samples, 0.04%)</title><rect x="1181.4" y="565" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.36" y="575.5" ></text>
</g>
<g >
<title>all (8,593,515,267 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>end_bio_extent_writepage (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="101" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1109.59" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (5,541,621 samples, 0.06%)</title><rect x="1161.3" y="421" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1164.30" y="431.5" ></text>
</g>
<g >
<title>cfree (13,837,145 samples, 0.16%)</title><rect x="1042.7" y="197" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1045.69" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (1,302,411 samples, 0.02%)</title><rect x="1169.6" y="549" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1172.62" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,254,655 samples, 0.06%)</title><rect x="1083.0" y="325" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1085.99" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,417,394 samples, 0.05%)</title><rect x="1067.5" y="149" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1070.48" y="159.5" ></text>
</g>
<g >
<title>operator new (48,263,982 samples, 0.56%)</title><rect x="987.8" y="261" width="6.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="990.75" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,050,873 samples, 0.01%)</title><rect x="981.0" y="357" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="984.05" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,556,435 samples, 0.13%)</title><rect x="1158.8" y="309" width="1.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1161.75" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (1,090,006 samples, 0.01%)</title><rect x="1027.2" y="53" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1030.24" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (783,662 samples, 0.01%)</title><rect x="1143.7" y="373" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1146.69" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (4,249,445 samples, 0.05%)</title><rect x="1183.4" y="565" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1186.40" y="575.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,358,767 samples, 0.03%)</title><rect x="1027.1" y="149" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1030.14" y="159.5" ></text>
</g>
<g >
<title>operator new (200,342,988 samples, 2.33%)</title><rect x="805.1" y="549" width="27.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="808.10" y="559.5" >o..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (904,850 samples, 0.01%)</title><rect x="587.8" y="485" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="590.85" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,325,312 samples, 0.02%)</title><rect x="1003.4" y="309" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1006.41" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,436,054 samples, 0.03%)</title><rect x="1068.5" y="229" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1071.50" y="239.5" ></text>
</g>
<g >
<title>cfree (72,497,921 samples, 0.84%)</title><rect x="1094.3" y="277" width="10.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1097.33" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (78,244,710 samples, 0.91%)</title><rect x="673.5" y="453" width="10.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="676.46" y="463.5" ></text>
</g>
<g >
<title>blk_mq_end_request_batch (2,065,929 samples, 0.02%)</title><rect x="974.8" y="213" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="977.82" y="223.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (3,224,472 samples, 0.04%)</title><rect x="93.1" y="501" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="96.12" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (23,110,217 samples, 0.27%)</title><rect x="588.2" y="565" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="591.20" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,026,395 samples, 0.02%)</title><rect x="1088.9" y="357" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1091.94" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (3,776,178 samples, 0.04%)</title><rect x="81.0" y="453" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="84.02" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle (916,555 samples, 0.01%)</title><rect x="1102.2" y="149" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1105.18" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (166,596,530 samples, 1.94%)</title><rect x="1038.2" y="277" width="22.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1041.18" y="287.5" >s..</text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,779,348 samples, 0.15%)</title><rect x="912.9" y="485" width="1.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="915.91" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (5,694,996 samples, 0.07%)</title><rect x="1163.1" y="421" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1166.06" y="431.5" ></text>
</g>
<g >
<title>cfree (1,033,026 samples, 0.01%)</title><rect x="1059.2" y="69" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1062.19" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (158,976,926 samples, 1.85%)</title><rect x="1014.5" y="245" width="21.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1017.52" y="255.5" >s..</text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (43,858,550 samples, 0.51%)</title><rect x="733.6" y="517" width="6.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="736.63" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,358,767 samples, 0.03%)</title><rect x="1027.1" y="133" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1030.14" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (94,914,616 samples, 1.10%)</title><rect x="984.7" y="325" width="13.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="987.73" y="335.5" ></text>
</g>
<g >
<title>decltype  (10,689,673 samples, 0.12%)</title><rect x="405.0" y="485" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="407.96" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,204,763 samples, 0.01%)</title><rect x="944.7" y="325" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="947.68" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (11,779,994 samples, 0.14%)</title><rect x="1154.5" y="357" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1157.52" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (195,927,016 samples, 2.28%)</title><rect x="348.1" y="469" width="26.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="351.12" y="479.5" >s..</text>
</g>
<g >
<title>cfree (1,563,091 samples, 0.02%)</title><rect x="1102.8" y="245" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1105.78" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (2,740,529 samples, 0.03%)</title><rect x="1088.1" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1091.06" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,519,085 samples, 0.04%)</title><rect x="1139.6" y="341" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1142.57" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (9,389,912 samples, 0.11%)</title><rect x="840.2" y="469" width="1.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="843.23" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,121,000 samples, 0.04%)</title><rect x="79.0" y="469" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="82.00" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,255,905 samples, 0.01%)</title><rect x="1189.8" y="485" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.76" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (18,191,247 samples, 0.21%)</title><rect x="413.7" y="485" width="2.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="416.74" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,172,336 samples, 0.03%)</title><rect x="940.7" y="389" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="943.73" y="399.5" ></text>
</g>
<g >
<title>is_close_int (4,683,476 samples, 0.05%)</title><rect x="1091.3" y="357" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1094.35" y="367.5" ></text>
</g>
<g >
<title>cfree (1,400,604 samples, 0.02%)</title><rect x="950.2" y="277" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="953.24" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,953,037 samples, 0.07%)</title><rect x="586.2" y="357" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="589.19" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (3,409,196 samples, 0.04%)</title><rect x="1087.6" y="293" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1090.56" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (1,027,064 samples, 0.01%)</title><rect x="940.9" y="261" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="943.85" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,461,185 samples, 0.04%)</title><rect x="1150.6" y="213" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.55" y="223.5" ></text>
</g>
<g >
<title>cfree (1,852,263 samples, 0.02%)</title><rect x="1161.6" y="325" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1164.55" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (9,705,613 samples, 0.11%)</title><rect x="921.0" y="357" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="924.01" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (3,818,032 samples, 0.04%)</title><rect x="695.6" y="533" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="698.57" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (895,985 samples, 0.01%)</title><rect x="953.5" y="405" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="956.47" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (2,902,570 samples, 0.03%)</title><rect x="93.6" y="517" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="96.56" y="527.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (1,534,390 samples, 0.02%)</title><rect x="428.6" y="533" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="431.57" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (771,605 samples, 0.01%)</title><rect x="1145.3" y="213" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1148.35" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (3,718,721 samples, 0.04%)</title><rect x="82.8" y="501" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="85.75" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (25,529,382 samples, 0.30%)</title><rect x="930.5" y="325" width="3.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="933.54" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (7,082,850 samples, 0.08%)</title><rect x="410.2" y="485" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="413.17" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (32,864,291 samples, 0.38%)</title><rect x="690.7" y="517" width="4.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="693.72" y="527.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,787,323 samples, 0.03%)</title><rect x="1031.5" y="133" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1034.53" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,686,399 samples, 0.08%)</title><rect x="1147.2" y="229" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1150.18" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,412,010 samples, 0.07%)</title><rect x="1004.2" y="325" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1007.17" y="335.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (21,892,866 samples, 0.25%)</title><rect x="190.1" y="501" width="3.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="193.10" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (915,031 samples, 0.01%)</title><rect x="1162.1" y="421" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1165.06" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,595,036 samples, 0.02%)</title><rect x="1068.2" y="69" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1071.24" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (929,356 samples, 0.01%)</title><rect x="1162.9" y="389" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1165.93" y="399.5" ></text>
</g>
<g >
<title>malloc (1,181,709 samples, 0.01%)</title><rect x="981.6" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="984.62" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,547,477 samples, 0.09%)</title><rect x="1030.9" y="149" width="1.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1033.87" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;::pair&lt;int, double&gt; (1,467,171 samples, 0.02%)</title><rect x="733.4" y="533" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="736.37" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,523,187 samples, 0.02%)</title><rect x="1136.6" y="229" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1139.59" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,629,302 samples, 0.18%)</title><rect x="1084.2" y="325" width="2.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1087.19" y="335.5" ></text>
</g>
<g >
<title>__common_interrupt (2,065,929 samples, 0.02%)</title><rect x="974.8" y="293" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="977.82" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (7,024,860 samples, 0.08%)</title><rect x="393.3" y="469" width="1.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="396.34" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (50,135,504 samples, 0.58%)</title><rect x="1061.6" y="229" width="6.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1064.58" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="197" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1109.59" y="207.5" ></text>
</g>
<g >
<title>operator new (3,180,874 samples, 0.04%)</title><rect x="994.8" y="245" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="997.76" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (157,054,908 samples, 1.83%)</title><rect x="953.6" y="405" width="21.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="956.59" y="415.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (9,269,765 samples, 0.11%)</title><rect x="1154.7" y="341" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1157.70" y="351.5" ></text>
</g>
<g >
<title>cfree (4,598,229 samples, 0.05%)</title><rect x="1151.0" y="213" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1154.03" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (5,957,929 samples, 0.07%)</title><rect x="1092.0" y="341" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1095.02" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,960,705 samples, 0.02%)</title><rect x="1160.1" y="277" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1163.07" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (27,003,962 samples, 0.31%)</title><rect x="946.4" y="309" width="3.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="949.39" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (4,510,441 samples, 0.05%)</title><rect x="950.7" y="341" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="953.72" y="351.5" ></text>
</g>
<g >
<title>folio_end_writeback (2,183,844 samples, 0.03%)</title><rect x="1106.7" y="85" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1109.70" y="95.5" ></text>
</g>
<g >
<title>update_process_times (1,025,198 samples, 0.01%)</title><rect x="1102.4" y="149" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1105.37" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (8,478,062 samples, 0.10%)</title><rect x="1057.2" y="133" width="1.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1060.21" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (41,343,218 samples, 0.48%)</title><rect x="223.4" y="501" width="5.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="226.45" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (149,588,478 samples, 1.74%)</title><rect x="665.8" y="533" width="20.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="668.80" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (1,025,198 samples, 0.01%)</title><rect x="1102.4" y="133" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1105.37" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (778,921 samples, 0.01%)</title><rect x="922.7" y="325" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="925.73" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (5,127,727 samples, 0.06%)</title><rect x="694.5" y="501" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="697.53" y="511.5" ></text>
</g>
<g >
<title>decltype  (4,420,540 samples, 0.05%)</title><rect x="700.4" y="485" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="703.42" y="495.5" ></text>
</g>
<g >
<title>malloc (6,540,989 samples, 0.08%)</title><rect x="1127.6" y="245" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1130.55" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,950,609 samples, 0.02%)</title><rect x="184.4" y="517" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="187.40" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (764,879 samples, 0.01%)</title><rect x="1164.6" y="405" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1167.60" y="415.5" ></text>
</g>
<g >
<title>cfree (10,636,224 samples, 0.12%)</title><rect x="1117.2" y="245" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1120.17" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,828,731 samples, 0.02%)</title><rect x="1164.0" y="389" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1167.01" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,041,799 samples, 0.02%)</title><rect x="922.9" y="341" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="925.92" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,032,276 samples, 0.02%)</title><rect x="940.8" y="373" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="943.75" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (158,976,926 samples, 1.85%)</title><rect x="1014.5" y="229" width="21.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1017.52" y="239.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (27,003,962 samples, 0.31%)</title><rect x="946.4" y="293" width="3.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="949.39" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,440,934 samples, 0.04%)</title><rect x="180.9" y="517" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="183.91" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (39,464,097 samples, 0.46%)</title><rect x="387.3" y="501" width="5.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="390.30" y="511.5" ></text>
</g>
<g >
<title>__libc_start_main (1,823,420,433 samples, 21.22%)</title><rect x="914.7" y="549" width="250.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="917.67" y="559.5" >__libc_start_main</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (778,921 samples, 0.01%)</title><rect x="922.7" y="341" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="925.73" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,049,113 samples, 0.01%)</title><rect x="189.8" y="533" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="192.83" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,368,119 samples, 0.03%)</title><rect x="1150.0" y="197" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1152.99" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (61,013,009 samples, 0.71%)</title><rect x="1145.6" y="405" width="8.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1148.57" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,946,442 samples, 0.03%)</title><rect x="1189.6" y="549" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1192.60" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,554,566 samples, 0.02%)</title><rect x="736.7" y="469" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="739.73" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,595,036 samples, 0.02%)</title><rect x="1068.2" y="101" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1071.24" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (43,036,626 samples, 0.50%)</title><rect x="581.9" y="501" width="5.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="584.94" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,805,976 samples, 0.02%)</title><rect x="1158.4" y="293" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1161.40" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (5,225,721 samples, 0.06%)</title><rect x="977.7" y="357" width="0.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="980.71" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,633,556 samples, 0.04%)</title><rect x="1132.2" y="357" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1135.21" y="367.5" ></text>
</g>
<g >
<title>common_interrupt (2,962,059 samples, 0.03%)</title><rect x="1106.6" y="245" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1109.59" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,836,789 samples, 0.02%)</title><rect x="697.2" y="485" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="700.20" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (7,992,752 samples, 0.09%)</title><rect x="1167.8" y="533" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1170.76" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (764,879 samples, 0.01%)</title><rect x="1164.6" y="421" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1167.60" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,859,164 samples, 0.03%)</title><rect x="741.5" y="517" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="744.47" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,655,190 samples, 0.02%)</title><rect x="1162.4" y="421" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1165.41" y="431.5" ></text>
</g>
<g >
<title>scheduler_tick (784,467 samples, 0.01%)</title><rect x="1102.2" y="117" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1105.20" y="127.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,901,000 samples, 0.03%)</title><rect x="433.4" y="453" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="436.39" y="463.5" ></text>
</g>
<g >
<title>end_bio_extent_writepage (1,614,961 samples, 0.02%)</title><rect x="944.4" y="197" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="947.41" y="207.5" ></text>
</g>
<g >
<title>[unknown] (2,354,187,659 samples, 27.39%)</title><rect x="591.4" y="565" width="323.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.41" y="575.5" >[unknown]</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,249,771 samples, 0.05%)</title><rect x="950.1" y="309" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="953.13" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,012,431 samples, 0.01%)</title><rect x="1093.7" y="325" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1096.72" y="335.5" ></text>
</g>
<g >
<title>decltype  (1,036,878 samples, 0.01%)</title><rect x="86.0" y="405" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="89.03" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,405,425 samples, 0.06%)</title><rect x="1004.2" y="261" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1007.17" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (794,273 samples, 0.01%)</title><rect x="1153.1" y="117" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1156.15" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (1,319,231 samples, 0.02%)</title><rect x="1132.8" y="373" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1135.76" y="383.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (762,678 samples, 0.01%)</title><rect x="91.9" y="533" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="94.85" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,788,126 samples, 0.03%)</title><rect x="1162.7" y="405" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1165.67" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,674,857 samples, 0.02%)</title><rect x="1102.3" y="229" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1105.34" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,293,941 samples, 0.04%)</title><rect x="1085.4" y="229" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1088.42" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (907,405 samples, 0.01%)</title><rect x="1146.2" y="341" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1149.17" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (5,127,727 samples, 0.06%)</title><rect x="694.5" y="485" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="697.53" y="495.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (937,333 samples, 0.01%)</title><rect x="1060.9" y="261" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1063.93" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,274,271 samples, 0.03%)</title><rect x="1118.9" y="149" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1121.93" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,475,316 samples, 0.03%)</title><rect x="1137.0" y="309" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1139.97" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (932,594 samples, 0.01%)</title><rect x="68.7" y="501" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="71.71" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,214,184 samples, 0.01%)</title><rect x="433.8" y="485" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="436.79" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,760,154 samples, 0.06%)</title><rect x="1030.9" y="117" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1033.87" y="127.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,418,059 samples, 0.02%)</title><rect x="433.2" y="469" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="436.19" y="479.5" ></text>
</g>
<g >
<title>operator new (97,085,432 samples, 1.13%)</title><rect x="1045.0" y="197" width="13.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1048.05" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (768,461 samples, 0.01%)</title><rect x="1132.6" y="261" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1135.60" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,329,821 samples, 0.09%)</title><rect x="1002.2" y="245" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1005.21" y="255.5" ></text>
</g>
<g >
<title>malloc (1,196,659 samples, 0.01%)</title><rect x="1063.6" y="181" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1066.60" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,061,884 samples, 0.01%)</title><rect x="1003.4" y="293" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1006.45" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (35,004,073 samples, 0.41%)</title><rect x="908.1" y="469" width="4.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="911.10" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (5,403,804 samples, 0.06%)</title><rect x="1161.3" y="389" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1164.32" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,470,981 samples, 0.11%)</title><rect x="852.0" y="517" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="855.02" y="527.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (5,662,330 samples, 0.07%)</title><rect x="874.6" y="533" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="877.65" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,085,501 samples, 0.04%)</title><rect x="79.4" y="485" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="82.42" y="495.5" ></text>
</g>
<g >
<title>cfree (1,671,156 samples, 0.02%)</title><rect x="995.5" y="133" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="998.52" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (919,286 samples, 0.01%)</title><rect x="1156.3" y="357" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1159.31" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (771,605 samples, 0.01%)</title><rect x="1145.3" y="181" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1148.35" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,025,198 samples, 0.01%)</title><rect x="1102.4" y="165" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1105.37" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (13,400,639 samples, 0.16%)</title><rect x="548.5" y="533" width="1.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="551.51" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (5,957,929 samples, 0.07%)</title><rect x="1092.0" y="357" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1095.02" y="367.5" ></text>
</g>
<g >
<title>cfree (220,860,252 samples, 2.57%)</title><rect x="627.2" y="549" width="30.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="630.24" y="559.5" >cf..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,497,934 samples, 0.03%)</title><rect x="1027.1" y="181" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1030.12" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,314,580 samples, 0.02%)</title><rect x="960.0" y="341" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="962.98" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (786,539 samples, 0.01%)</title><rect x="929.6" y="213" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="932.60" y="223.5" ></text>
</g>
<g >
<title>common_interrupt (2,065,929 samples, 0.02%)</title><rect x="974.8" y="309" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="977.82" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (41,022,531 samples, 0.48%)</title><rect x="945.9" y="389" width="5.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="948.90" y="399.5" ></text>
</g>
<g >
<title>operator new (30,802,722 samples, 0.36%)</title><rect x="1063.9" y="181" width="4.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1066.86" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,895,505 samples, 0.16%)</title><rect x="1056.5" y="165" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1059.47" y="175.5" ></text>
</g>
</g>
</svg>
