<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,725,561 samples, 0.02%)</title><rect x="1119.1" y="197" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1122.11" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,093,112 samples, 0.10%)</title><rect x="588.6" y="437" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="591.61" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (943,904 samples, 0.01%)</title><rect x="1189.7" y="485" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1192.72" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,983,738 samples, 0.04%)</title><rect x="1156.7" y="389" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1159.74" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,647,653 samples, 0.05%)</title><rect x="1069.1" y="389" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1072.14" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (935,071 samples, 0.01%)</title><rect x="1132.9" y="421" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1135.93" y="431.5" ></text>
</g>
<g >
<title>cfree (1,738,808 samples, 0.02%)</title><rect x="1130.4" y="245" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1133.42" y="255.5" ></text>
</g>
<g >
<title>choose_next_point (1,053,836 samples, 0.01%)</title><rect x="586.8" y="437" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="589.83" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,331,041 samples, 0.02%)</title><rect x="436.9" y="485" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="439.87" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (936,107 samples, 0.01%)</title><rect x="944.6" y="229" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="947.62" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (788,171 samples, 0.01%)</title><rect x="1056.9" y="85" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1059.86" y="95.5" ></text>
</g>
<g >
<title>cfree (2,733,657 samples, 0.03%)</title><rect x="1061.0" y="197" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1063.98" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,062,496 samples, 0.01%)</title><rect x="1145.4" y="245" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1148.38" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (889,059 samples, 0.01%)</title><rect x="1169.8" y="533" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1172.84" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,364,529 samples, 0.06%)</title><rect x="688.0" y="437" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="691.04" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,110,664 samples, 0.03%)</title><rect x="1066.1" y="101" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1069.06" y="111.5" ></text>
</g>
<g >
<title>update_process_times (1,200,972 samples, 0.02%)</title><rect x="954.1" y="261" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="957.14" y="271.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,719,795 samples, 0.02%)</title><rect x="84.9" y="517" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="87.95" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (160,610,308 samples, 2.03%)</title><rect x="1034.8" y="229" width="24.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1037.84" y="239.5" >s..</text>
</g>
<g >
<title>tick_nohz_highres_handler (1,743,950 samples, 0.02%)</title><rect x="1050.7" y="101" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1053.67" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (126,801,712 samples, 1.61%)</title><rect x="948.7" y="405" width="19.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="951.71" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,598,843 samples, 0.02%)</title><rect x="1025.3" y="197" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1028.33" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (3,558,607 samples, 0.05%)</title><rect x="1162.7" y="437" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1165.74" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (1,045,817 samples, 0.01%)</title><rect x="1146.2" y="357" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1149.22" y="367.5" ></text>
</g>
<g >
<title>choose_next_point (1,588,119 samples, 0.02%)</title><rect x="316.4" y="549" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="319.37" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,725,561 samples, 0.02%)</title><rect x="1119.1" y="165" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1122.11" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,198,176 samples, 0.02%)</title><rect x="1145.4" y="293" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1148.36" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,333,990 samples, 0.02%)</title><rect x="984.2" y="213" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="987.17" y="223.5" ></text>
</g>
<g >
<title>end_bio_extent_writepage (1,017,684 samples, 0.01%)</title><rect x="965.1" y="165" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="968.09" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (2,349,465 samples, 0.03%)</title><rect x="80.9" y="469" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="83.89" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (14,442,774 samples, 0.18%)</title><rect x="80.1" y="533" width="2.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="83.05" y="543.5" ></text>
</g>
<g >
<title>cfree (2,412,014 samples, 0.03%)</title><rect x="586.5" y="437" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="589.47" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,438,395 samples, 0.14%)</title><rect x="78.3" y="517" width="1.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="81.34" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,857,729 samples, 0.07%)</title><rect x="188.6" y="549" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="191.58" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (12,631,138 samples, 0.16%)</title><rect x="987.4" y="165" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="990.45" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (65,433,701 samples, 0.83%)</title><rect x="919.9" y="405" width="9.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="922.93" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,481,432 samples, 0.02%)</title><rect x="1139.3" y="405" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1142.35" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (19,939,829 samples, 0.25%)</title><rect x="1147.4" y="293" width="2.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1150.35" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (790,489 samples, 0.01%)</title><rect x="972.3" y="261" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="975.31" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (5,557,310 samples, 0.07%)</title><rect x="693.1" y="517" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="696.12" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,730,518 samples, 0.02%)</title><rect x="1094.5" y="293" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.54" y="303.5" ></text>
</g>
<g >
<title>choose_next_point (128,423,024 samples, 1.63%)</title><rect x="1069.8" y="389" width="19.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1072.81" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,196,957 samples, 0.02%)</title><rect x="187.5" y="517" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="190.47" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (73,051,386 samples, 0.92%)</title><rect x="408.1" y="517" width="11.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="411.14" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,242,808 samples, 0.08%)</title><rect x="1092.2" y="373" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1095.22" y="383.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1,287,929 samples, 0.02%)</title><rect x="965.1" y="245" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="968.07" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,424,237 samples, 0.04%)</title><rect x="1067.0" y="245" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1069.97" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (3,146,142 samples, 0.04%)</title><rect x="694.2" y="533" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="697.24" y="543.5" ></text>
</g>
<g >
<title>operator delete (2,413,407 samples, 0.03%)</title><rect x="984.4" y="261" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="987.37" y="271.5" ></text>
</g>
<g >
<title>cfree (903,368 samples, 0.01%)</title><rect x="1148.3" y="245" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1151.27" y="255.5" ></text>
</g>
<g >
<title>malloc (2,950,751 samples, 0.04%)</title><rect x="1042.0" y="213" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1044.97" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,161,149 samples, 0.03%)</title><rect x="1150.0" y="165" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1153.01" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (428,409,567 samples, 5.42%)</title><rect x="1068.9" y="405" width="64.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1071.92" y="415.5" >std::_R..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,867,049 samples, 0.04%)</title><rect x="1103.9" y="277" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1106.95" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (127,800,943 samples, 1.62%)</title><rect x="667.0" y="533" width="19.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="670.04" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (2,606,280 samples, 0.03%)</title><rect x="335.5" y="517" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="338.48" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,416,771 samples, 0.07%)</title><rect x="412.4" y="469" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="415.37" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (3,823,155 samples, 0.05%)</title><rect x="945.6" y="357" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="948.60" y="367.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (9,889,837 samples, 0.13%)</title><rect x="406.7" y="517" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="409.66" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (808,895 samples, 0.01%)</title><rect x="1058.7" y="85" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1061.69" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,062,496 samples, 0.01%)</title><rect x="1145.4" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1148.38" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,843,964 samples, 0.10%)</title><rect x="971.3" y="341" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="974.30" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (6,557,203 samples, 0.08%)</title><rect x="1067.6" y="373" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1070.62" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (3,864,619 samples, 0.05%)</title><rect x="1169.1" y="533" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1172.08" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,150,988 samples, 0.09%)</title><rect x="1107.5" y="293" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1110.50" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (25,769,977 samples, 0.33%)</title><rect x="1133.7" y="341" width="3.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1136.73" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,997,895 samples, 0.03%)</title><rect x="696.0" y="469" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="699.03" y="479.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,055,543 samples, 0.01%)</title><rect x="994.9" y="293" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="997.86" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,161,149 samples, 0.03%)</title><rect x="1150.0" y="197" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1153.01" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,073,481 samples, 0.01%)</title><rect x="1164.2" y="341" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1167.16" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (12,036,643 samples, 0.15%)</title><rect x="737.8" y="533" width="1.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="740.83" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (3,558,607 samples, 0.05%)</title><rect x="1162.7" y="421" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1165.74" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (77,141,386 samples, 0.98%)</title><rect x="977.8" y="293" width="11.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="980.85" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (64,100,526 samples, 0.81%)</title><rect x="553.7" y="549" width="9.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="556.73" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (801,407 samples, 0.01%)</title><rect x="1183.1" y="517" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1186.15" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (8,868,235 samples, 0.11%)</title><rect x="528.1" y="517" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="531.09" y="527.5" ></text>
</g>
<g >
<title>[anon] (2,399,114,937 samples, 30.38%)</title><rect x="232.5" y="581" width="358.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="235.48" y="591.5" >[anon]</text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (912,344 samples, 0.01%)</title><rect x="1163.8" y="405" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1166.81" y="415.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (3,463,671 samples, 0.04%)</title><rect x="724.8" y="549" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="727.85" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (777,830 samples, 0.01%)</title><rect x="590.8" y="469" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="593.83" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (798,246 samples, 0.01%)</title><rect x="1064.6" y="133" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1067.62" y="143.5" ></text>
</g>
<g >
<title>update_process_times (1,349,795 samples, 0.02%)</title><rect x="1021.8" y="85" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1024.79" y="95.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,808,915 samples, 0.05%)</title><rect x="86.9" y="469" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="89.88" y="479.5" ></text>
</g>
<g >
<title>decltype  (6,213,573 samples, 0.08%)</title><rect x="589.9" y="469" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="592.90" y="479.5" ></text>
</g>
<g >
<title>operator new (1,440,636 samples, 0.02%)</title><rect x="1061.2" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1064.16" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,161,149 samples, 0.03%)</title><rect x="1150.0" y="213" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1153.01" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,017,221 samples, 0.06%)</title><rect x="1026.5" y="133" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1029.45" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (56,555,878 samples, 0.72%)</title><rect x="1145.7" y="421" width="8.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1148.68" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (775,090 samples, 0.01%)</title><rect x="1146.2" y="277" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1149.22" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (4,472,580 samples, 0.06%)</title><rect x="82.8" y="549" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="85.81" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,331,576 samples, 0.04%)</title><rect x="945.1" y="341" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="948.10" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (77,141,386 samples, 0.98%)</title><rect x="977.8" y="325" width="11.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="980.85" y="335.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (937,877 samples, 0.01%)</title><rect x="1188.2" y="565" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1191.23" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,485,032 samples, 0.07%)</title><rect x="688.9" y="501" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="691.89" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (193,662,385 samples, 2.45%)</title><rect x="882.0" y="565" width="29.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="885.02" y="575.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (92,592,059 samples, 1.17%)</title><rect x="1109.1" y="325" width="13.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1112.09" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,558,749 samples, 0.06%)</title><rect x="1153.4" y="293" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1156.41" y="303.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (6,116,937 samples, 0.08%)</title><rect x="1092.2" y="341" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1095.23" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (12,189,491 samples, 0.15%)</title><rect x="1154.7" y="373" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1157.66" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (10,907,154 samples, 0.14%)</title><rect x="841.5" y="501" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="844.50" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,686,699 samples, 0.10%)</title><rect x="588.6" y="389" width="1.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="591.63" y="399.5" ></text>
</g>
<g >
<title>is_close_int (37,704,290 samples, 0.48%)</title><rect x="725.8" y="549" width="5.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="728.82" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,137,039 samples, 0.03%)</title><rect x="1169.3" y="517" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1172.34" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (24,147,311 samples, 0.31%)</title><rect x="1028.4" y="181" width="3.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1031.35" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,725,561 samples, 0.02%)</title><rect x="1119.1" y="181" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1122.11" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (57,193,266 samples, 0.72%)</title><rect x="1154.2" y="421" width="8.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1157.17" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (3,748,371 samples, 0.05%)</title><rect x="581.5" y="549" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="584.54" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,080,164 samples, 0.25%)</title><rect x="686.7" y="517" width="3.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="689.71" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,068,313 samples, 0.01%)</title><rect x="1157.7" y="373" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1160.73" y="383.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,565,789 samples, 0.02%)</title><rect x="415.8" y="485" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="418.83" y="495.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (764,980 samples, 0.01%)</title><rect x="1171.3" y="533" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1174.28" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,708,106 samples, 0.02%)</title><rect x="986.5" y="165" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="989.50" y="175.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (17,831,297 samples, 0.23%)</title><rect x="416.1" y="469" width="2.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="419.06" y="479.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (162,534,328 samples, 2.06%)</title><rect x="350.3" y="485" width="24.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="353.34" y="495.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (30,045,715 samples, 0.38%)</title><rect x="1158.2" y="405" width="4.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1161.16" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,051,019 samples, 0.01%)</title><rect x="1066.7" y="85" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1069.71" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,060,614 samples, 0.17%)</title><rect x="1056.9" y="117" width="1.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1059.86" y="127.5" ></text>
</g>
<g >
<title>cfree (7,407,837 samples, 0.09%)</title><rect x="1160.0" y="293" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1163.00" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (39,691,618 samples, 0.50%)</title><rect x="920.2" y="309" width="6.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="923.23" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,144,573 samples, 0.03%)</title><rect x="1183.1" y="565" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1186.07" y="575.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,198,325 samples, 0.02%)</title><rect x="1050.7" y="85" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1053.75" y="95.5" ></text>
</g>
<g >
<title>decltype  (1,719,795 samples, 0.02%)</title><rect x="84.9" y="501" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="87.95" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,014,332 samples, 0.01%)</title><rect x="1155.3" y="341" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1158.33" y="351.5" ></text>
</g>
<g >
<title>malloc (686,041 samples, 0.01%)</title><rect x="945.4" y="293" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="948.40" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (15,951,908 samples, 0.20%)</title><rect x="193.7" y="533" width="2.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="196.67" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,470,351 samples, 0.02%)</title><rect x="1021.8" y="117" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1024.77" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,763,402 samples, 0.03%)</title><rect x="1104.0" y="213" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1106.96" y="223.5" ></text>
</g>
<g >
<title>get_inbetween_points (54,159,584 samples, 0.69%)</title><rect x="87.5" y="565" width="8.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="90.49" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,930,911 samples, 0.04%)</title><rect x="944.3" y="277" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="947.32" y="287.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (64,100,526 samples, 0.81%)</title><rect x="553.7" y="533" width="9.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="556.73" y="543.5" ></text>
</g>
<g >
<title>roundf32x (8,026,063 samples, 0.10%)</title><rect x="179.7" y="565" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="182.72" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (14,386,200 samples, 0.18%)</title><rect x="1084.5" y="357" width="2.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1087.45" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,826,102 samples, 0.05%)</title><rect x="1130.4" y="261" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1133.38" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,478,460 samples, 0.02%)</title><rect x="939.0" y="357" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="941.99" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,753,575 samples, 0.02%)</title><rect x="1117.0" y="229" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1119.95" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (9,072,787 samples, 0.11%)</title><rect x="1144.2" y="341" width="1.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1147.19" y="351.5" ></text>
</g>
<g >
<title>choose_next_point (9,477,632 samples, 0.12%)</title><rect x="1168.6" y="581" width="1.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1171.61" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,094,514 samples, 0.01%)</title><rect x="1145.8" y="373" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.76" y="383.5" ></text>
</g>
<g >
<title>operator new (3,550,516 samples, 0.04%)</title><rect x="1103.0" y="261" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.02" y="271.5" ></text>
</g>
<g >
<title>__btrfs_bio_end_io (1,017,684 samples, 0.01%)</title><rect x="965.1" y="181" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="968.09" y="191.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (10,194,918 samples, 0.13%)</title><rect x="384.7" y="469" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="387.72" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,341,856 samples, 0.02%)</title><rect x="919.0" y="373" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="922.02" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,305,776 samples, 0.02%)</title><rect x="1165.7" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.68" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (1,630,410 samples, 0.02%)</title><rect x="82.5" y="533" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="85.47" y="543.5" ></text>
</g>
<g >
<title>malloc (33,214,373 samples, 0.42%)</title><rect x="1046.2" y="197" width="4.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1049.16" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,587,277 samples, 0.02%)</title><rect x="1153.4" y="213" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1156.41" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (1,044,808 samples, 0.01%)</title><rect x="694.8" y="549" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="697.83" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (64,951,074 samples, 0.82%)</title><rect x="197.3" y="565" width="9.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="200.28" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (31,026,500 samples, 0.39%)</title><rect x="226.0" y="469" width="4.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="229.01" y="479.5" ></text>
</g>
<g >
<title>update_load_avg (822,798 samples, 0.01%)</title><rect x="1102.3" y="117" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1105.28" y="127.5" ></text>
</g>
<g >
<title>scheduler_tick (1,781,126 samples, 0.02%)</title><rect x="965.4" y="197" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="968.37" y="207.5" ></text>
</g>
<g >
<title>choose_next_point (1,511,278,834 samples, 19.14%)</title><rect x="911.8" y="437" width="225.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="914.77" y="447.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,576,676 samples, 0.02%)</title><rect x="1164.8" y="309" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1167.83" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,073,481 samples, 0.01%)</title><rect x="1164.2" y="389" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1167.16" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,286,276 samples, 0.08%)</title><rect x="94.3" y="533" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="97.28" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,192,980 samples, 0.02%)</title><rect x="1127.3" y="245" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1130.28" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,735,299 samples, 0.02%)</title><rect x="1137.6" y="309" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1140.60" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,066,702 samples, 0.01%)</title><rect x="1127.3" y="165" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1130.30" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,277,057 samples, 0.03%)</title><rect x="990.3" y="389" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="993.25" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,364,529 samples, 0.06%)</title><rect x="688.0" y="469" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="691.04" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,166,252 samples, 0.01%)</title><rect x="997.0" y="261" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1000.00" y="271.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (673,802 samples, 0.01%)</title><rect x="1085.9" y="277" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1088.86" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (3,427,432 samples, 0.04%)</title><rect x="1162.8" y="405" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1165.76" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,694,330 samples, 0.02%)</title><rect x="1108.3" y="213" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1111.28" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (2,236,980 samples, 0.03%)</title><rect x="397.0" y="549" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="399.99" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,606,153 samples, 0.02%)</title><rect x="968.2" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="971.17" y="399.5" ></text>
</g>
<g >
<title>malloc (2,156,633 samples, 0.03%)</title><rect x="1159.2" y="309" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.18" y="319.5" ></text>
</g>
<g >
<title>cfree (679,238 samples, 0.01%)</title><rect x="1069.7" y="389" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1072.71" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,305,776 samples, 0.02%)</title><rect x="1165.7" y="357" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1168.68" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (35,362,636 samples, 0.45%)</title><rect x="381.0" y="517" width="5.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="383.96" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,760,317 samples, 0.06%)</title><rect x="1130.2" y="341" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1133.24" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (793,130 samples, 0.01%)</title><rect x="939.2" y="389" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="942.23" y="399.5" ></text>
</g>
<g >
<title>cfree (165,280,697 samples, 2.09%)</title><rect x="38.2" y="565" width="24.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="41.15" y="575.5" >c..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (950,158 samples, 0.01%)</title><rect x="1051.8" y="197" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1054.84" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,502,375 samples, 0.03%)</title><rect x="1066.1" y="133" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1069.06" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,741,586 samples, 0.02%)</title><rect x="954.1" y="357" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="957.10" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,187,532 samples, 0.02%)</title><rect x="1130.1" y="213" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1133.06" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (10,194,918 samples, 0.13%)</title><rect x="384.7" y="501" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="387.72" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,349,795 samples, 0.02%)</title><rect x="1021.8" y="101" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1024.79" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (102,882,682 samples, 1.30%)</title><rect x="403.7" y="549" width="15.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="406.68" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,368,018 samples, 0.06%)</title><rect x="1164.4" y="389" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1167.44" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,554,414 samples, 0.05%)</title><rect x="184.3" y="517" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="187.31" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,720,155 samples, 0.02%)</title><rect x="193.0" y="549" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="195.95" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (2,371,794 samples, 0.03%)</title><rect x="81.9" y="485" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="84.86" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,073,481 samples, 0.01%)</title><rect x="1164.2" y="357" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1167.16" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,860,797 samples, 0.04%)</title><rect x="1003.6" y="261" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1006.62" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (259,370,655 samples, 3.28%)</title><rect x="335.9" y="517" width="38.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="338.87" y="527.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (46,710,476 samples, 0.59%)</title><rect x="1123.3" y="325" width="6.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1126.26" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (9,072,787 samples, 0.11%)</title><rect x="1144.2" y="373" width="1.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1147.19" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (2,096,534 samples, 0.03%)</title><rect x="435.4" y="501" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="438.38" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,919,766 samples, 0.02%)</title><rect x="965.3" y="229" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="968.35" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,110,664 samples, 0.03%)</title><rect x="1066.1" y="85" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1069.06" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,409,984 samples, 0.07%)</title><rect x="1055.0" y="101" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1058.02" y="111.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (800,880 samples, 0.01%)</title><rect x="1131.5" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1134.50" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (800,880 samples, 0.01%)</title><rect x="1131.5" y="309" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1134.50" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,579,679 samples, 0.02%)</title><rect x="1004.1" y="325" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1007.11" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (35,061,101 samples, 0.44%)</title><rect x="374.6" y="501" width="5.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="377.62" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (11,520,099 samples, 0.15%)</title><rect x="1160.0" y="357" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1162.98" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,404,089 samples, 0.04%)</title><rect x="587.0" y="421" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="590.05" y="431.5" ></text>
</g>
<g >
<title>cfree (1,850,575 samples, 0.02%)</title><rect x="1151.5" y="229" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1154.49" y="239.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (51,202,073 samples, 0.65%)</title><rect x="863.2" y="517" width="7.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="866.20" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (6,669,051 samples, 0.08%)</title><rect x="587.6" y="421" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="590.61" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,108,516 samples, 0.03%)</title><rect x="1129.9" y="245" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1132.92" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,405,744 samples, 0.03%)</title><rect x="79.3" y="501" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="82.27" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (56,555,878 samples, 0.72%)</title><rect x="1145.7" y="437" width="8.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1148.68" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (12,631,138 samples, 0.16%)</title><rect x="987.4" y="197" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="990.45" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,981,648 samples, 0.03%)</title><rect x="435.4" y="453" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="438.40" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (42,072,251 samples, 0.53%)</title><rect x="697.8" y="533" width="6.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="700.80" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (31,026,500 samples, 0.39%)</title><rect x="226.0" y="501" width="4.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="229.01" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,021,011 samples, 0.01%)</title><rect x="1169.8" y="549" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1172.84" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (930,058 samples, 0.01%)</title><rect x="1067.0" y="181" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1069.97" y="191.5" ></text>
</g>
<g >
<title>operator new (230,692,862 samples, 2.92%)</title><rect x="145.1" y="565" width="34.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="148.09" y="575.5" >op..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (14,356,228 samples, 0.18%)</title><rect x="77.9" y="549" width="2.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="80.91" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (935,071 samples, 0.01%)</title><rect x="1132.9" y="405" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1135.93" y="415.5" ></text>
</g>
<g >
<title>cfree (4,368,943 samples, 0.06%)</title><rect x="1062.1" y="181" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1065.06" y="191.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (12,441,498 samples, 0.16%)</title><rect x="684.3" y="501" width="1.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="687.27" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (2,141,711 samples, 0.03%)</title><rect x="739.6" y="517" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="742.63" y="527.5" ></text>
</g>
<g >
<title>std::abs (3,058,945 samples, 0.04%)</title><rect x="731.0" y="533" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="734.00" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (918,220 samples, 0.01%)</title><rect x="846.8" y="437" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="849.78" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (19,939,829 samples, 0.25%)</title><rect x="1147.4" y="341" width="2.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1150.35" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (164,456,682 samples, 2.08%)</title><rect x="1007.6" y="325" width="24.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1010.58" y="335.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,062,496 samples, 0.01%)</title><rect x="1145.4" y="229" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1148.38" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (894,974 samples, 0.01%)</title><rect x="1169.7" y="565" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1172.70" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,184,513 samples, 0.01%)</title><rect x="1136.6" y="277" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1139.58" y="287.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (907,301 samples, 0.01%)</title><rect x="1189.9" y="517" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1192.86" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (902,142 samples, 0.01%)</title><rect x="881.9" y="549" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="884.88" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (14,324,273 samples, 0.18%)</title><rect x="514.2" y="501" width="2.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="517.23" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,975,007 samples, 0.03%)</title><rect x="1165.4" y="389" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1168.38" y="399.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,997,853 samples, 0.03%)</title><rect x="736.6" y="485" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="739.60" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,859,320 samples, 0.02%)</title><rect x="1119.1" y="261" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1122.09" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,079,889 samples, 0.09%)</title><rect x="1026.5" y="181" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1029.45" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (2,678,455 samples, 0.03%)</title><rect x="734.4" y="501" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="737.38" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (3,678,835 samples, 0.05%)</title><rect x="999.7" y="357" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1002.71" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (777,830 samples, 0.01%)</title><rect x="590.8" y="549" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="593.83" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,375,311 samples, 0.02%)</title><rect x="1137.4" y="293" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1140.37" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,603,249 samples, 0.02%)</title><rect x="530.6" y="501" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="533.60" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (817,772 samples, 0.01%)</title><rect x="1164.5" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1167.48" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (42,072,251 samples, 0.53%)</title><rect x="697.8" y="549" width="6.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="700.80" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,161,149 samples, 0.03%)</title><rect x="1150.0" y="229" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1153.01" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (1,441,636 samples, 0.02%)</title><rect x="1101.9" y="133" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1104.86" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,763,402 samples, 0.03%)</title><rect x="1104.0" y="197" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1106.96" y="207.5" ></text>
</g>
<g >
<title>operator new (1,205,182 samples, 0.02%)</title><rect x="1093.4" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1096.38" y="399.5" ></text>
</g>
<g >
<title>std::abs (2,193,721 samples, 0.03%)</title><rect x="433.6" y="533" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="436.59" y="543.5" ></text>
</g>
<g >
<title>operator new (42,853,730 samples, 0.54%)</title><rect x="980.4" y="277" width="6.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="983.43" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,051,485 samples, 0.06%)</title><rect x="1134.2" y="309" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.23" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (2,391,607 samples, 0.03%)</title><rect x="1087.1" y="309" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1090.06" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (16,808,404 samples, 0.21%)</title><rect x="1160.0" y="389" width="2.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1162.96" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (19,939,829 samples, 0.25%)</title><rect x="1147.4" y="277" width="2.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1150.35" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,840,773 samples, 0.05%)</title><rect x="701.1" y="485" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="704.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,391,843 samples, 0.03%)</title><rect x="1066.5" y="197" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1069.53" y="207.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (8,535,964 samples, 0.11%)</title><rect x="76.6" y="485" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="79.63" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,732,079 samples, 0.02%)</title><rect x="586.5" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="589.47" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (126,801,712 samples, 1.61%)</title><rect x="948.7" y="421" width="19.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="951.71" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,380,312 samples, 0.03%)</title><rect x="1164.5" y="293" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1167.48" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (17,671,616 samples, 0.22%)</title><rect x="522.1" y="469" width="2.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="525.09" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,017,221 samples, 0.06%)</title><rect x="1026.5" y="149" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1029.45" y="159.5" ></text>
</g>
<g >
<title>roundf32x (3,311,220 samples, 0.04%)</title><rect x="506.3" y="565" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="509.30" y="575.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (3,980,029 samples, 0.05%)</title><rect x="394.8" y="549" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="397.76" y="559.5" ></text>
</g>
<g >
<title>operator new (4,640,478 samples, 0.06%)</title><rect x="996.2" y="229" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="999.24" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,725,561 samples, 0.02%)</title><rect x="1119.1" y="245" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1122.11" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,145,836 samples, 0.03%)</title><rect x="1068.6" y="405" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1071.60" y="415.5" ></text>
</g>
<g >
<title>decltype  (1,984,281 samples, 0.03%)</title><rect x="437.1" y="485" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="440.07" y="495.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (34,349,418 samples, 0.43%)</title><rect x="71.5" y="485" width="5.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="74.50" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,118,772 samples, 0.01%)</title><rect x="929.5" y="357" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="932.47" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (20,433,072 samples, 0.26%)</title><rect x="84.4" y="549" width="3.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="87.44" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (918,937 samples, 0.01%)</title><rect x="435.8" y="485" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="438.80" y="495.5" ></text>
</g>
<g >
<title>malloc (13,698,895 samples, 0.17%)</title><rect x="1062.7" y="181" width="2.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1065.72" y="191.5" ></text>
</g>
<g >
<title>cfree (934,846 samples, 0.01%)</title><rect x="1117.6" y="245" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1120.62" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (9,111,986 samples, 0.12%)</title><rect x="917.6" y="389" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="920.62" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,154,333 samples, 0.01%)</title><rect x="1136.8" y="325" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1139.80" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (127,800,943 samples, 1.62%)</title><rect x="667.0" y="549" width="19.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="670.04" y="559.5" ></text>
</g>
<g >
<title>operator delete (3,391,508 samples, 0.04%)</title><rect x="1022.0" y="213" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1025.05" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (9,076,806 samples, 0.11%)</title><rect x="388.8" y="485" width="1.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="391.85" y="495.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,485,032 samples, 0.07%)</title><rect x="688.9" y="469" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="691.89" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (65,433,701 samples, 0.83%)</title><rect x="919.9" y="389" width="9.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="922.93" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (2,349,465 samples, 0.03%)</title><rect x="80.9" y="485" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="83.89" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (5,141,374 samples, 0.07%)</title><rect x="1164.3" y="421" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1167.32" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (11,907,255 samples, 0.15%)</title><rect x="393.0" y="501" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="395.98" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,523,248 samples, 0.03%)</title><rect x="1138.3" y="373" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1141.27" y="383.5" ></text>
</g>
<g >
<title>is_close_int (20,236,537 samples, 0.26%)</title><rect x="936.5" y="405" width="3.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="939.49" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (9,778,167 samples, 0.12%)</title><rect x="410.7" y="485" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="413.65" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (801,396 samples, 0.01%)</title><rect x="1163.3" y="373" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1166.27" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,603,249 samples, 0.02%)</title><rect x="530.6" y="485" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="533.60" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (6,719,244 samples, 0.09%)</title><rect x="996.0" y="293" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="998.99" y="303.5" ></text>
</g>
<g >
<title>update_process_times (1,072,312 samples, 0.01%)</title><rect x="1033.3" y="213" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1036.27" y="223.5" ></text>
</g>
<g >
<title>cfree (64,988,140 samples, 0.82%)</title><rect x="1109.7" y="277" width="9.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1112.66" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (146,543,551 samples, 1.86%)</title><rect x="569.0" y="565" width="21.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="572.05" y="575.5" >s..</text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (1,462,150 samples, 0.02%)</title><rect x="1170.4" y="549" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1173.40" y="559.5" ></text>
</g>
<g >
<title>operator delete (2,241,944 samples, 0.03%)</title><rect x="1143.6" y="389" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1146.63" y="399.5" ></text>
</g>
<g >
<title>roundf32x (14,166,216 samples, 0.18%)</title><rect x="829.2" y="565" width="2.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="832.15" y="575.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (785,181 samples, 0.01%)</title><rect x="1161.0" y="261" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1163.97" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,186,072 samples, 0.02%)</title><rect x="973.8" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="976.80" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (10,267,595 samples, 0.13%)</title><rect x="1141.1" y="405" width="1.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1144.15" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (31,026,500 samples, 0.39%)</title><rect x="226.0" y="453" width="4.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="229.01" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (7,882,859 samples, 0.10%)</title><rect x="976.7" y="373" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="979.67" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,554,383 samples, 0.08%)</title><rect x="1155.5" y="341" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1158.48" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,894,057 samples, 0.04%)</title><rect x="1085.5" y="325" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1088.53" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,184,513 samples, 0.01%)</title><rect x="1136.6" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.58" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (15,975,155 samples, 0.20%)</title><rect x="993.4" y="357" width="2.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="996.38" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (51,202,073 samples, 0.65%)</title><rect x="863.2" y="549" width="7.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="866.20" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,554,414 samples, 0.05%)</title><rect x="184.3" y="485" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="187.31" y="495.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (41,316,566 samples, 0.52%)</title><rect x="940.4" y="373" width="6.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="943.41" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,409,946 samples, 0.03%)</title><rect x="1050.6" y="149" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1053.63" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (39,691,618 samples, 0.50%)</title><rect x="920.2" y="357" width="6.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="923.23" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (92,592,059 samples, 1.17%)</title><rect x="1109.1" y="309" width="13.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1112.09" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,305,776 samples, 0.02%)</title><rect x="1165.7" y="325" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1168.68" y="335.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (4,157,956 samples, 0.05%)</title><rect x="205.5" y="549" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="208.53" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,990,528 samples, 0.03%)</title><rect x="79.3" y="437" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="82.27" y="447.5" ></text>
</g>
<g >
<title>operator new (10,469,503 samples, 0.13%)</title><rect x="587.0" y="437" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="590.05" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (9,380,226 samples, 0.12%)</title><rect x="836.9" y="517" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="839.91" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,184,513 samples, 0.01%)</title><rect x="1136.6" y="245" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1139.58" y="255.5" ></text>
</g>
<g >
<title>get_inbetween_points (131,137,732 samples, 1.66%)</title><rect x="419.1" y="565" width="19.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="422.05" y="575.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (800,320 samples, 0.01%)</title><rect x="1166.2" y="469" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1169.16" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (3,840,773 samples, 0.05%)</title><rect x="701.1" y="501" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="704.12" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,678,455 samples, 0.03%)</title><rect x="734.4" y="485" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="737.38" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,347,899 samples, 0.02%)</title><rect x="999.4" y="341" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1002.45" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,230,196 samples, 0.09%)</title><rect x="383.4" y="453" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="386.39" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,073,796 samples, 0.01%)</title><rect x="1123.4" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1126.40" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (1,454,873 samples, 0.02%)</title><rect x="1087.9" y="341" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1090.90" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (7,176,719 samples, 0.09%)</title><rect x="412.1" y="501" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="415.11" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (7,331,791 samples, 0.09%)</title><rect x="437.4" y="533" width="1.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="440.37" y="543.5" ></text>
</g>
<g >
<title>decltype  (5,655,092 samples, 0.07%)</title><rect x="417.9" y="421" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="420.88" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,952,603 samples, 0.06%)</title><rect x="1141.9" y="373" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1144.94" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (19,226,466 samples, 0.24%)</title><rect x="690.0" y="501" width="2.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="692.97" y="511.5" ></text>
</g>
<g >
<title>decltype  (2,019,829 samples, 0.03%)</title><rect x="737.5" y="485" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="740.53" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (777,830 samples, 0.01%)</title><rect x="590.8" y="437" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="593.83" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (47,614,620 samples, 0.60%)</title><rect x="903.8" y="517" width="7.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="906.84" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,312,871 samples, 0.05%)</title><rect x="1153.4" y="261" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1156.41" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,312,871 samples, 0.05%)</title><rect x="1153.4" y="245" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1156.41" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (26,941,831 samples, 0.34%)</title><rect x="941.0" y="357" width="4.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="943.96" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,609,172 samples, 0.02%)</title><rect x="435.7" y="501" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="438.69" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (7,536,185 samples, 0.10%)</title><rect x="702.9" y="469" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="705.86" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (9,778,167 samples, 0.12%)</title><rect x="410.7" y="453" width="1.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="413.65" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (680,997 samples, 0.01%)</title><rect x="1102.6" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1105.58" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,190,423 samples, 0.02%)</title><rect x="735.0" y="453" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="737.98" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (445,092,960 samples, 5.64%)</title><rect x="1001.0" y="357" width="66.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1003.98" y="367.5" >std::_R..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (3,865,357 samples, 0.05%)</title><rect x="946.6" y="389" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="949.58" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,725,561 samples, 0.02%)</title><rect x="1119.1" y="149" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1122.11" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (671,116 samples, 0.01%)</title><rect x="995.6" y="309" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="998.55" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (11,501,978 samples, 0.15%)</title><rect x="431.9" y="533" width="1.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="434.87" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,694,330 samples, 0.02%)</title><rect x="1108.3" y="181" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1111.28" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (26,941,831 samples, 0.34%)</title><rect x="941.0" y="309" width="4.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="943.96" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (249,958,600 samples, 3.17%)</title><rect x="506.8" y="565" width="37.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="509.79" y="575.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (4,535,629 samples, 0.06%)</title><rect x="1000.3" y="357" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1003.26" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,677,043 samples, 0.08%)</title><rect x="845.1" y="469" width="1.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="848.14" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (918,937 samples, 0.01%)</title><rect x="435.8" y="469" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="438.80" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (13,575,461 samples, 0.17%)</title><rect x="397.9" y="517" width="2.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="400.93" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,447,241 samples, 0.02%)</title><rect x="1066.7" y="181" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1069.67" y="191.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (918,519 samples, 0.01%)</title><rect x="1032.0" y="277" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1035.02" y="287.5" ></text>
</g>
<g >
<title>operator new (2,721,155 samples, 0.03%)</title><rect x="1126.6" y="229" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.64" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (775,090 samples, 0.01%)</title><rect x="1146.2" y="261" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1149.22" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (801,396 samples, 0.01%)</title><rect x="1163.3" y="389" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1166.27" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (95,502,364 samples, 1.21%)</title><rect x="1094.3" y="309" width="14.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1097.30" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (931,814 samples, 0.01%)</title><rect x="1140.4" y="373" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1143.39" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (8,868,235 samples, 0.11%)</title><rect x="528.1" y="485" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="531.09" y="495.5" ></text>
</g>
<g >
<title>malloc (3,381,981 samples, 0.04%)</title><rect x="1152.2" y="213" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1155.21" y="223.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (684,194 samples, 0.01%)</title><rect x="704.0" y="501" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="706.99" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (802,477 samples, 0.01%)</title><rect x="1092.5" y="293" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1095.53" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,901,728 samples, 0.05%)</title><rect x="1139.8" y="325" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1142.81" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,021,011 samples, 0.01%)</title><rect x="1169.8" y="565" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1172.84" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (1,045,817 samples, 0.01%)</title><rect x="1146.2" y="341" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1149.22" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (689,716 samples, 0.01%)</title><rect x="94.6" y="469" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="97.64" y="479.5" ></text>
</g>
<g >
<title>folio_end_writeback (765,820 samples, 0.01%)</title><rect x="965.1" y="149" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="968.13" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,027,852 samples, 0.16%)</title><rect x="987.4" y="261" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="990.41" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (938,582 samples, 0.01%)</title><rect x="939.1" y="309" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="942.05" y="319.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (6,454,274 samples, 0.08%)</title><rect x="1139.7" y="389" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1142.69" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (825,006 samples, 0.01%)</title><rect x="1050.5" y="181" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1053.48" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (20,957,201 samples, 0.27%)</title><rect x="969.3" y="389" width="3.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="972.34" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (13,153,544 samples, 0.17%)</title><rect x="965.7" y="389" width="2.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="968.69" y="399.5" ></text>
</g>
<g >
<title>cfree (11,312,305 samples, 0.14%)</title><rect x="1014.9" y="213" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1017.87" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,256,421 samples, 0.03%)</title><rect x="1101.8" y="229" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1104.76" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,049,805 samples, 0.01%)</title><rect x="972.3" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="975.31" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,062,496 samples, 0.01%)</title><rect x="1145.4" y="261" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1148.38" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,833,558 samples, 0.06%)</title><rect x="1153.4" y="341" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1156.37" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,599,600 samples, 0.02%)</title><rect x="919.0" y="405" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="921.98" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (689,716 samples, 0.01%)</title><rect x="94.6" y="485" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="97.64" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (12,475,287 samples, 0.16%)</title><rect x="1140.9" y="421" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1143.91" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,323,305 samples, 0.11%)</title><rect x="1188.8" y="581" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1191.76" y="591.5" ></text>
</g>
<g >
<title>cfree (1,468,664 samples, 0.02%)</title><rect x="945.2" y="293" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="948.18" y="303.5" ></text>
</g>
<g >
<title>is_close_int (3,060,721 samples, 0.04%)</title><rect x="1091.7" y="373" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1094.72" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (38,569,503 samples, 0.49%)</title><rect x="584.1" y="485" width="5.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="587.06" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,990,528 samples, 0.03%)</title><rect x="79.3" y="421" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="82.27" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (6,357,353 samples, 0.08%)</title><rect x="695.4" y="517" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="698.38" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (3,035,465 samples, 0.04%)</title><rect x="81.8" y="501" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="84.76" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,459,786 samples, 0.07%)</title><rect x="1182.8" y="581" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1185.79" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,260,224 samples, 0.03%)</title><rect x="986.5" y="229" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="989.50" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,192,951 samples, 0.02%)</title><rect x="316.4" y="501" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="319.39" y="511.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (4,646,439 samples, 0.06%)</title><rect x="196.5" y="549" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="199.49" y="559.5" ></text>
</g>
<g >
<title>gen_all_points (26,823,446 samples, 0.34%)</title><rect x="83.5" y="565" width="4.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.48" y="575.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (153,514,163 samples, 1.94%)</title><rect x="967.7" y="421" width="22.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="970.66" y="431.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,585,726 samples, 0.02%)</title><rect x="550.3" y="549" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="553.28" y="559.5" ></text>
</g>
<g >
<title>operator new (942,563 samples, 0.01%)</title><rect x="944.1" y="277" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="947.10" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (931,715 samples, 0.01%)</title><rect x="984.2" y="149" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="987.21" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (9,172,209 samples, 0.12%)</title><rect x="395.4" y="549" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="398.35" y="559.5" ></text>
</g>
<g >
<title>operator new (1,205,484 samples, 0.02%)</title><rect x="1151.5" y="213" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.55" y="223.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (8,535,964 samples, 0.11%)</title><rect x="76.6" y="501" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="79.63" y="511.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (1,189,320 samples, 0.02%)</title><rect x="1163.3" y="405" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1166.27" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,354,689 samples, 0.02%)</title><rect x="1156.5" y="357" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1159.54" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (47,614,620 samples, 0.60%)</title><rect x="903.8" y="533" width="7.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="906.84" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,826,155 samples, 0.06%)</title><rect x="989.5" y="341" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="992.53" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (812,733 samples, 0.01%)</title><rect x="594.1" y="453" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="597.09" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (50,068,475 samples, 0.63%)</title><rect x="1059.4" y="229" width="7.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1062.41" y="239.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,062,668 samples, 0.03%)</title><rect x="1027.2" y="149" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1030.20" y="159.5" ></text>
</g>
<g >
<title>cfree (5,890,455 samples, 0.07%)</title><rect x="1158.3" y="309" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1161.29" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (160,610,308 samples, 2.03%)</title><rect x="1034.8" y="245" width="24.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1037.84" y="255.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,468,953 samples, 0.02%)</title><rect x="995.0" y="309" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="998.03" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,554,414 samples, 0.05%)</title><rect x="184.3" y="501" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="187.31" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,547,050 samples, 0.03%)</title><rect x="85.9" y="453" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="88.90" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (9,111,986 samples, 0.12%)</title><rect x="917.6" y="405" width="1.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="920.62" y="415.5" ></text>
</g>
<g >
<title>operator new (1,907,631 samples, 0.02%)</title><rect x="939.7" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="942.74" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (935,322 samples, 0.01%)</title><rect x="187.6" y="517" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="190.65" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (14,442,774 samples, 0.18%)</title><rect x="80.1" y="549" width="2.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="83.05" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (930,757 samples, 0.01%)</title><rect x="1054.1" y="181" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1057.06" y="191.5" ></text>
</g>
<g >
<title>decltype  (772,935 samples, 0.01%)</title><rect x="1189.9" y="485" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.88" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (5,275,371 samples, 0.07%)</title><rect x="1164.3" y="453" width="0.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1167.32" y="463.5" ></text>
</g>
<g >
<title>operator delete (1,333,584 samples, 0.02%)</title><rect x="929.1" y="293" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="932.07" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (2,141,711 samples, 0.03%)</title><rect x="739.6" y="501" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="742.63" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,072,312 samples, 0.01%)</title><rect x="1033.3" y="229" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1036.27" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (12,631,138 samples, 0.16%)</title><rect x="987.4" y="181" width="1.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="990.45" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (10,142,160 samples, 0.13%)</title><rect x="1086.6" y="373" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1089.60" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (95,502,364 samples, 1.21%)</title><rect x="1094.3" y="325" width="14.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1097.30" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (13,060,614 samples, 0.17%)</title><rect x="1056.9" y="133" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1059.86" y="143.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,316,339 samples, 0.02%)</title><rect x="688.7" y="453" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="691.69" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (775,090 samples, 0.01%)</title><rect x="1146.2" y="309" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1149.22" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (12,036,643 samples, 0.15%)</title><rect x="737.8" y="517" width="1.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="740.83" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,286,276 samples, 0.08%)</title><rect x="94.3" y="549" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="97.28" y="559.5" ></text>
</g>
<g >
<title>decltype  (1,142,435 samples, 0.01%)</title><rect x="384.5" y="437" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="387.55" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,424,237 samples, 0.04%)</title><rect x="1067.0" y="293" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1069.97" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (34,349,418 samples, 0.43%)</title><rect x="71.5" y="501" width="5.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="74.50" y="511.5" ></text>
</g>
<g >
<title>cfree (1,319,297 samples, 0.02%)</title><rect x="1028.6" y="101" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1031.59" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,591,501 samples, 0.02%)</title><rect x="1021.8" y="133" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1024.75" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (52,379,738 samples, 0.66%)</title><rect x="68.8" y="517" width="7.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="71.81" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (11,520,099 samples, 0.15%)</title><rect x="1160.0" y="341" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1162.98" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (44,804,042 samples, 0.57%)</title><rect x="1076.8" y="293" width="6.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1079.76" y="303.5" ></text>
</g>
<g >
<title>malloc (4,804,939 samples, 0.06%)</title><rect x="1135.1" y="325" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1138.12" y="335.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (3,459,715 samples, 0.04%)</title><rect x="703.5" y="437" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="706.47" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,457,148 samples, 0.17%)</title><rect x="1056.8" y="197" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1059.80" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (50,068,475 samples, 0.63%)</title><rect x="1059.4" y="245" width="7.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1062.41" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (19,939,829 samples, 0.25%)</title><rect x="1147.4" y="325" width="2.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1150.35" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,333,990 samples, 0.02%)</title><rect x="984.2" y="229" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="987.17" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (8,318,925 samples, 0.11%)</title><rect x="861.4" y="549" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="864.40" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,171,970 samples, 0.01%)</title><rect x="1066.7" y="149" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1069.71" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (802,477 samples, 0.01%)</title><rect x="1092.5" y="325" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1095.53" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,686,699 samples, 0.10%)</title><rect x="588.6" y="373" width="1.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="591.63" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (18,729,679 samples, 0.24%)</title><rect x="1150.6" y="277" width="2.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1153.57" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (6,719,244 samples, 0.09%)</title><rect x="996.0" y="261" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="998.99" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (764,980 samples, 0.01%)</title><rect x="1171.3" y="565" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1174.28" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,811,740 samples, 0.02%)</title><rect x="948.3" y="421" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="951.26" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (24,275,403 samples, 0.31%)</title><rect x="1028.3" y="213" width="3.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1031.33" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,141,711 samples, 0.03%)</title><rect x="739.6" y="533" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="742.63" y="543.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (3,083,329 samples, 0.04%)</title><rect x="725.4" y="549" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="728.36" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (17,671,616 samples, 0.22%)</title><rect x="522.1" y="533" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="525.09" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,176,019 samples, 0.01%)</title><rect x="972.3" y="293" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="975.29" y="303.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (2,149,838 samples, 0.03%)</title><rect x="430.5" y="549" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="433.51" y="559.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (57,193,266 samples, 0.72%)</title><rect x="1154.2" y="437" width="8.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1157.17" y="447.5" ></text>
</g>
<g >
<title>cfree (6,287,024 samples, 0.08%)</title><rect x="980.8" y="261" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="983.81" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,220,255 samples, 0.03%)</title><rect x="1085.5" y="261" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1088.53" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,763,402 samples, 0.03%)</title><rect x="1104.0" y="181" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1106.96" y="191.5" ></text>
</g>
<g >
<title>common_interrupt (1,287,929 samples, 0.02%)</title><rect x="965.1" y="309" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="968.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (793,713 samples, 0.01%)</title><rect x="1051.0" y="181" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1054.00" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (17,671,616 samples, 0.22%)</title><rect x="522.1" y="485" width="2.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="525.09" y="495.5" ></text>
</g>
<g >
<title>get_inbetween_points (13,569,095 samples, 0.17%)</title><rect x="1138.7" y="437" width="2.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1141.69" y="447.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (5,655,092 samples, 0.07%)</title><rect x="417.9" y="453" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="420.88" y="463.5" ></text>
</g>
<g >
<title>operator new (22,268,904 samples, 0.28%)</title><rect x="1179.0" y="581" width="3.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1182.02" y="591.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (428,409,567 samples, 5.42%)</title><rect x="1068.9" y="421" width="64.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1071.92" y="431.5" >std::se..</text>
</g>
<g >
<title>[libc.so.6] (9,880,563 samples, 0.13%)</title><rect x="1059.4" y="197" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1062.45" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,068,031 samples, 0.01%)</title><rect x="1006.8" y="325" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1009.83" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (14,594,775 samples, 0.18%)</title><rect x="390.2" y="485" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="393.20" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,043,725 samples, 0.01%)</title><rect x="83.3" y="469" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="86.32" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,187,532 samples, 0.02%)</title><rect x="1130.1" y="229" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1133.06" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (4,874,016 samples, 0.06%)</title><rect x="1003.4" y="309" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1006.38" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,426,523 samples, 0.07%)</title><rect x="550.5" y="549" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="553.51" y="559.5" ></text>
</g>
<g >
<title>malloc (36,320,079 samples, 0.46%)</title><rect x="1016.6" y="213" width="5.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1019.62" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (796,390 samples, 0.01%)</title><rect x="939.1" y="293" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="942.07" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (13,149,880 samples, 0.17%)</title><rect x="852.9" y="549" width="2.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="855.91" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,708,106 samples, 0.02%)</title><rect x="986.5" y="149" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="989.50" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (955,610 samples, 0.01%)</title><rect x="1162.5" y="389" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1165.51" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,482,325 samples, 0.02%)</title><rect x="1033.2" y="293" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1036.23" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,317,712 samples, 0.02%)</title><rect x="1138.3" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1141.31" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,312,871 samples, 0.05%)</title><rect x="1153.4" y="277" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1156.41" y="287.5" ></text>
</g>
<g >
<title>cfree (4,900,421 samples, 0.06%)</title><rect x="922.7" y="293" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="925.71" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (14,594,775 samples, 0.18%)</title><rect x="390.2" y="469" width="2.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="393.20" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,609,853 samples, 0.02%)</title><rect x="1033.2" y="325" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1036.21" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (12,441,498 samples, 0.16%)</title><rect x="684.3" y="517" width="1.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="687.27" y="527.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (162,534,328 samples, 2.06%)</title><rect x="350.3" y="469" width="24.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="353.34" y="479.5" >a..</text>
</g>
<g >
<title>exit_mmap (832,571 samples, 0.01%)</title><rect x="1170.0" y="485" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1173.03" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,043,725 samples, 0.01%)</title><rect x="83.3" y="501" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="86.32" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,686,699 samples, 0.10%)</title><rect x="588.6" y="357" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="591.63" y="367.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (14,521,706 samples, 0.18%)</title><rect x="908.8" y="501" width="2.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="911.78" y="511.5" ></text>
</g>
<g >
<title>choose_next_point (138,083,944 samples, 1.75%)</title><rect x="62.8" y="565" width="20.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="65.85" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,625,331 samples, 0.02%)</title><rect x="862.6" y="549" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="865.64" y="559.5" ></text>
</g>
<g >
<title>operator new (3,557,823 samples, 0.05%)</title><rect x="1136.0" y="325" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.04" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,980,005 samples, 0.03%)</title><rect x="693.9" y="549" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="696.95" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (2,955,409 samples, 0.04%)</title><rect x="1087.4" y="293" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1090.42" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (19,416,214 samples, 0.25%)</title><rect x="1142.8" y="421" width="2.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1145.78" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,002,962 samples, 0.03%)</title><rect x="1052.0" y="197" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1055.04" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (918,937 samples, 0.01%)</title><rect x="435.8" y="453" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="438.80" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,391,340 samples, 0.03%)</title><rect x="1101.7" y="245" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1104.74" y="255.5" ></text>
</g>
<g >
<title>update_process_times (1,357,398 samples, 0.02%)</title><rect x="1117.0" y="133" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1119.99" y="143.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (673,939 samples, 0.01%)</title><rect x="1091.6" y="373" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1094.56" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,693,868 samples, 0.06%)</title><rect x="1153.4" y="325" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1156.39" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,596,023 samples, 0.02%)</title><rect x="995.0" y="341" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="998.01" y="351.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (2,367,803 samples, 0.03%)</title><rect x="936.1" y="405" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="939.14" y="415.5" ></text>
</g>
<g >
<title>operator new (92,307,064 samples, 1.17%)</title><rect x="1013.7" y="229" width="13.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1016.72" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,331,576 samples, 0.04%)</title><rect x="945.1" y="309" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="948.10" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (8,931,196 samples, 0.11%)</title><rect x="993.7" y="325" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="996.68" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,502,375 samples, 0.03%)</title><rect x="1066.1" y="149" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1069.06" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,603,249 samples, 0.02%)</title><rect x="530.6" y="469" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="533.60" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,975,007 samples, 0.03%)</title><rect x="1165.4" y="373" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1168.38" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (8,281,373 samples, 0.10%)</title><rect x="996.0" y="341" width="1.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="998.99" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (39,691,618 samples, 0.50%)</title><rect x="920.2" y="341" width="6.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="923.23" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (2,801,801 samples, 0.04%)</title><rect x="85.9" y="501" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="88.86" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (947,987 samples, 0.01%)</title><rect x="929.3" y="293" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="932.33" y="303.5" ></text>
</g>
<g >
<title>malloc (8,809,026 samples, 0.11%)</title><rect x="592.4" y="565" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="595.42" y="575.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,078,598 samples, 0.04%)</title><rect x="935.4" y="389" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="938.42" y="399.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,942,118 samples, 0.02%)</title><rect x="87.2" y="437" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="90.16" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (2,517,719 samples, 0.03%)</title><rect x="553.4" y="549" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="556.35" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (768,719 samples, 0.01%)</title><rect x="1043.4" y="197" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1046.40" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,602,936 samples, 0.02%)</title><rect x="954.1" y="341" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="957.12" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,305,776 samples, 0.02%)</title><rect x="1165.7" y="341" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1168.68" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (970,813 samples, 0.01%)</title><rect x="1170.0" y="549" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1173.03" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (102,882,682 samples, 1.30%)</title><rect x="403.7" y="533" width="15.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="406.68" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (3,865,357 samples, 0.05%)</title><rect x="946.6" y="373" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="949.58" y="383.5" ></text>
</g>
<g >
<title>handle_edge_irq (1,287,929 samples, 0.02%)</title><rect x="965.1" y="277" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="968.07" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,088,204 samples, 0.52%)</title><rect x="1111.1" y="261" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1114.12" y="271.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,428,739 samples, 0.03%)</title><rect x="568.7" y="549" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="571.66" y="559.5" ></text>
</g>
<g >
<title>operator new (90,730,682 samples, 1.15%)</title><rect x="1042.6" y="213" width="13.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1045.57" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (17,831,297 samples, 0.23%)</title><rect x="416.1" y="501" width="2.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="419.06" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,175,219 samples, 0.03%)</title><rect x="919.2" y="357" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="922.22" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (44,804,042 samples, 0.57%)</title><rect x="1076.8" y="309" width="6.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1079.76" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,452,331 samples, 0.02%)</title><rect x="1162.9" y="325" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.88" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (777,830 samples, 0.01%)</title><rect x="590.8" y="517" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="593.83" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,657,401 samples, 0.03%)</title><rect x="1131.2" y="357" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1134.23" y="367.5" ></text>
</g>
<g >
<title>do_group_exit (970,813 samples, 0.01%)</title><rect x="1170.0" y="533" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1173.03" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (18,729,679 samples, 0.24%)</title><rect x="1150.6" y="325" width="2.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1153.57" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,331,576 samples, 0.04%)</title><rect x="945.1" y="325" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="948.10" y="335.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,721,952 samples, 0.02%)</title><rect x="591.0" y="565" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="593.95" y="575.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (907,301 samples, 0.01%)</title><rect x="1189.9" y="501" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.86" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (5,187,050 samples, 0.07%)</title><rect x="563.3" y="565" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="566.31" y="575.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (4,686,172 samples, 0.06%)</title><rect x="206.1" y="549" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="209.15" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (8,868,235 samples, 0.11%)</title><rect x="528.1" y="453" width="1.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="531.09" y="463.5" ></text>
</g>
<g >
<title>operator delete (675,404 samples, 0.01%)</title><rect x="1148.4" y="245" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1151.42" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,331,041 samples, 0.02%)</title><rect x="436.9" y="469" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="439.87" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,145,772 samples, 0.03%)</title><rect x="1006.7" y="341" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1009.73" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (77,533,070 samples, 0.98%)</title><rect x="977.8" y="373" width="11.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="980.85" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (1,630,410 samples, 0.02%)</title><rect x="82.5" y="549" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="85.47" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,161,149 samples, 0.03%)</title><rect x="1150.0" y="149" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1153.01" y="159.5" ></text>
</g>
<g >
<title>operator new (1,373,532 samples, 0.02%)</title><rect x="942.2" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="945.21" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (9,380,226 samples, 0.12%)</title><rect x="836.9" y="533" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="839.91" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (15,951,908 samples, 0.20%)</title><rect x="193.7" y="549" width="2.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="196.67" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (166,837,930 samples, 2.11%)</title><rect x="1007.2" y="341" width="25.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1010.23" y="351.5" >s..</text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (51,202,073 samples, 0.65%)</title><rect x="863.2" y="533" width="7.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="866.20" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (6,273,948 samples, 0.08%)</title><rect x="435.9" y="501" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="438.93" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,504,248 samples, 0.06%)</title><rect x="1137.6" y="373" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1140.60" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (162,534,328 samples, 2.06%)</title><rect x="350.3" y="501" width="24.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="353.34" y="511.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,380,312 samples, 0.03%)</title><rect x="1164.5" y="309" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1167.48" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (800,880 samples, 0.01%)</title><rect x="1131.5" y="277" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1134.50" y="287.5" ></text>
</g>
<g >
<title>decltype  (2,062,668 samples, 0.03%)</title><rect x="1027.2" y="117" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1030.20" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,763,402 samples, 0.03%)</title><rect x="1104.0" y="261" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1106.96" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,129,149 samples, 0.05%)</title><rect x="1131.6" y="373" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1134.62" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,615,607 samples, 0.02%)</title><rect x="1156.8" y="357" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1159.79" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (17,671,616 samples, 0.22%)</title><rect x="522.1" y="501" width="2.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="525.09" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (943,904 samples, 0.01%)</title><rect x="1189.7" y="517" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1192.72" y="527.5" ></text>
</g>
<g >
<title>cfree (17,969,837 samples, 0.23%)</title><rect x="1039.2" y="213" width="2.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1042.24" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,073,948 samples, 0.01%)</title><rect x="1117.3" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1120.26" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,576,676 samples, 0.02%)</title><rect x="1164.8" y="341" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1167.83" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (12,867,797 samples, 0.16%)</title><rect x="1054.2" y="181" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1057.20" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (7,213,891 samples, 0.09%)</title><rect x="993.8" y="309" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="996.78" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,066,702 samples, 0.01%)</title><rect x="1127.3" y="213" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1130.30" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (823,729 samples, 0.01%)</title><rect x="1137.4" y="229" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1140.37" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,615,607 samples, 0.02%)</title><rect x="1156.8" y="341" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1159.79" y="351.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,718,747 samples, 0.09%)</title><rect x="1083.5" y="325" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1086.45" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,069,128 samples, 0.01%)</title><rect x="984.2" y="181" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="987.19" y="191.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (794,939 samples, 0.01%)</title><rect x="948.4" y="373" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="951.42" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,708,106 samples, 0.02%)</title><rect x="986.5" y="181" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="989.50" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,663,554 samples, 0.03%)</title><rect x="935.5" y="357" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="938.48" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (7,331,791 samples, 0.09%)</title><rect x="437.4" y="501" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="440.37" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (6,615,531 samples, 0.08%)</title><rect x="691.9" y="469" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="694.85" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,743,675 samples, 0.02%)</title><rect x="1032.9" y="325" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1035.93" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (77,141,386 samples, 0.98%)</title><rect x="977.8" y="309" width="11.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="980.85" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,305,776 samples, 0.02%)</title><rect x="1165.7" y="373" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1168.68" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,220,255 samples, 0.03%)</title><rect x="1085.5" y="277" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1088.53" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (802,477 samples, 0.01%)</title><rect x="1092.5" y="309" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1095.53" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,678,455 samples, 0.03%)</title><rect x="734.4" y="453" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="737.38" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (3,901,728 samples, 0.05%)</title><rect x="1139.8" y="373" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1142.81" y="383.5" ></text>
</g>
<g >
<title>cfree (2,808,131 samples, 0.04%)</title><rect x="974.0" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="977.00" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (1,198,325 samples, 0.02%)</title><rect x="1050.7" y="53" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1053.75" y="63.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,055,543 samples, 0.01%)</title><rect x="994.9" y="277" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="997.86" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,829,462 samples, 0.12%)</title><rect x="927.0" y="277" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="929.98" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,161,149 samples, 0.03%)</title><rect x="1150.0" y="181" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1153.01" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (3,808,915 samples, 0.05%)</title><rect x="86.9" y="501" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="89.88" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (818,051 samples, 0.01%)</title><rect x="950.0" y="389" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="953.00" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (3,865,357 samples, 0.05%)</title><rect x="946.6" y="405" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="949.58" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (154,303,342 samples, 1.95%)</title><rect x="1108.6" y="373" width="23.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1111.57" y="383.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (50,068,475 samples, 0.63%)</title><rect x="1059.4" y="261" width="7.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1062.41" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (13,787,495 samples, 0.17%)</title><rect x="533.8" y="533" width="2.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="536.77" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,844,513 samples, 0.02%)</title><rect x="945.8" y="341" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="948.84" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (814,967 samples, 0.01%)</title><rect x="1130.5" y="229" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.48" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,718,747 samples, 0.09%)</title><rect x="1083.5" y="341" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1086.45" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,981,648 samples, 0.03%)</title><rect x="435.4" y="469" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="438.40" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (95,502,364 samples, 1.21%)</title><rect x="1094.3" y="341" width="14.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1097.30" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,826,155 samples, 0.06%)</title><rect x="989.5" y="373" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="992.53" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,596,023 samples, 0.02%)</title><rect x="995.0" y="325" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="998.01" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (12,076,457 samples, 0.15%)</title><rect x="937.4" y="389" width="1.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="940.43" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (829,143 samples, 0.01%)</title><rect x="94.6" y="501" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="97.62" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (4,488,320 samples, 0.06%)</title><rect x="693.3" y="485" width="0.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="696.28" y="495.5" ></text>
</g>
<g >
<title>cfree (1,170,304 samples, 0.01%)</title><rect x="1164.6" y="245" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1167.64" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,558,749 samples, 0.06%)</title><rect x="1153.4" y="309" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1156.41" y="319.5" ></text>
</g>
<g >
<title>operator new (9,895,992 samples, 0.13%)</title><rect x="1057.2" y="85" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1060.17" y="95.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,320,592 samples, 0.02%)</title><rect x="187.0" y="485" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="189.96" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (33,092,914 samples, 0.42%)</title><rect x="903.8" y="501" width="5.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="906.84" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (941,956 samples, 0.01%)</title><rect x="1165.4" y="309" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1168.40" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,827,186 samples, 0.05%)</title><rect x="1161.7" y="325" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1164.74" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (2,449,015 samples, 0.03%)</title><rect x="95.2" y="533" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="98.21" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (684,328 samples, 0.01%)</title><rect x="967.6" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="970.56" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (23,594,695 samples, 0.30%)</title><rect x="1028.4" y="149" width="3.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1031.35" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,313,333 samples, 0.04%)</title><rect x="1108.1" y="277" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1111.07" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,753,575 samples, 0.02%)</title><rect x="1117.0" y="197" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1119.95" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (920,965 samples, 0.01%)</title><rect x="994.0" y="293" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="997.02" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (943,904 samples, 0.01%)</title><rect x="1189.7" y="501" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.72" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (41,715,091 samples, 0.53%)</title><rect x="940.4" y="389" width="6.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="943.35" y="399.5" ></text>
</g>
<g >
<title>operator new (2,872,122 samples, 0.04%)</title><rect x="1051.4" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1054.39" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,840,773 samples, 0.05%)</title><rect x="701.1" y="453" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="704.12" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (4,472,580 samples, 0.06%)</title><rect x="82.8" y="533" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="85.81" y="543.5" ></text>
</g>
<g >
<title>operator new (4,228,560 samples, 0.05%)</title><rect x="1144.7" y="293" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1147.73" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (802,636 samples, 0.01%)</title><rect x="1126.2" y="229" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1129.25" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (777,683 samples, 0.01%)</title><rect x="1149.8" y="213" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1152.76" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (25,294,057 samples, 0.32%)</title><rect x="1023.7" y="213" width="3.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1026.73" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (65,270,075 samples, 0.83%)</title><rect x="68.2" y="533" width="9.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="71.16" y="543.5" ></text>
</g>
<g >
<title>cfree (15,096,990 samples, 0.19%)</title><rect x="926.7" y="293" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="929.68" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (50,334,250 samples, 0.64%)</title><rect x="1059.4" y="277" width="7.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1062.41" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,990,528 samples, 0.03%)</title><rect x="79.3" y="469" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="82.27" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,375,311 samples, 0.02%)</title><rect x="1137.4" y="277" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1140.37" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,222,633 samples, 0.08%)</title><rect x="941.2" y="293" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="944.18" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (916,674 samples, 0.01%)</title><rect x="206.8" y="549" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="209.85" y="559.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (793,130 samples, 0.01%)</title><rect x="939.2" y="357" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="942.23" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,515,898 samples, 0.06%)</title><rect x="986.2" y="245" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="989.16" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (2,538,230 samples, 0.03%)</title><rect x="81.2" y="485" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="84.24" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (45,305,975 samples, 0.57%)</title><rect x="584.1" y="533" width="6.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="587.06" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,826,102 samples, 0.05%)</title><rect x="1130.4" y="309" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1133.38" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,320,592 samples, 0.02%)</title><rect x="187.0" y="517" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="189.96" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,195,115 samples, 0.05%)</title><rect x="918.2" y="357" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="921.17" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (157,992,875 samples, 2.00%)</title><rect x="831.3" y="565" width="23.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="834.27" y="575.5" >s..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,818,764 samples, 0.04%)</title><rect x="185.8" y="485" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="188.84" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (163,365,072 samples, 2.07%)</title><rect x="1034.6" y="325" width="24.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1037.58" y="335.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,726,275 samples, 0.02%)</title><rect x="847.7" y="517" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="850.68" y="527.5" ></text>
</g>
<g >
<title>cfree (14,274,470 samples, 0.18%)</title><rect x="1166.5" y="581" width="2.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1169.48" y="591.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (801,396 samples, 0.01%)</title><rect x="1163.3" y="357" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1166.27" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,587,865 samples, 0.08%)</title><rect x="1139.7" y="405" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1142.67" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,827,186 samples, 0.05%)</title><rect x="1161.7" y="357" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1164.74" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (928,704 samples, 0.01%)</title><rect x="1130.9" y="341" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1133.95" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,408,291 samples, 0.03%)</title><rect x="1152.9" y="213" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1155.95" y="223.5" ></text>
</g>
<g >
<title>cfree (1,589,107 samples, 0.02%)</title><rect x="589.5" y="309" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="592.46" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (677,563 samples, 0.01%)</title><rect x="1132.7" y="277" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1135.65" y="287.5" ></text>
</g>
<g >
<title>is_close_int (2,288,225 samples, 0.03%)</title><rect x="1139.2" y="421" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1142.23" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,437,340 samples, 0.02%)</title><rect x="946.2" y="341" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="949.17" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (8,993,159 samples, 0.11%)</title><rect x="695.0" y="549" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="697.99" y="559.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,165,585 samples, 0.03%)</title><rect x="418.7" y="501" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="421.73" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,694,330 samples, 0.02%)</title><rect x="1108.3" y="229" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1111.28" y="239.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,942,118 samples, 0.02%)</title><rect x="87.2" y="453" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="90.16" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,066,702 samples, 0.01%)</title><rect x="1127.3" y="181" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1130.30" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (11,907,255 samples, 0.15%)</title><rect x="393.0" y="517" width="1.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="395.98" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,079,889 samples, 0.09%)</title><rect x="1026.5" y="165" width="1.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1029.45" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (11,612,018 samples, 0.15%)</title><rect x="1158.2" y="357" width="1.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1161.22" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,471,093 samples, 0.02%)</title><rect x="1088.1" y="373" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1091.12" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (28,384,280 samples, 0.36%)</title><rect x="689.7" y="533" width="4.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="692.71" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (92,592,059 samples, 1.17%)</title><rect x="1109.1" y="341" width="13.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1112.09" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (5,275,371 samples, 0.07%)</title><rect x="1164.3" y="437" width="0.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1167.32" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,686,699 samples, 0.10%)</title><rect x="588.6" y="421" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="591.63" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (35,061,101 samples, 0.44%)</title><rect x="374.6" y="517" width="5.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="377.62" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (9,072,787 samples, 0.11%)</title><rect x="1144.2" y="309" width="1.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1147.19" y="319.5" ></text>
</g>
<g >
<title>malloc (1,868,621 samples, 0.02%)</title><rect x="942.4" y="293" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="945.42" y="303.5" ></text>
</g>
<g >
<title>operator new (1,607,065 samples, 0.02%)</title><rect x="1129.1" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1132.10" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,260,224 samples, 0.03%)</title><rect x="986.5" y="213" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="989.50" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (56,303,073 samples, 0.71%)</title><rect x="1145.7" y="389" width="8.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1148.68" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (28,384,280 samples, 0.36%)</title><rect x="689.7" y="549" width="4.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="692.71" y="559.5" ></text>
</g>
<g >
<title>gen_all_points (1,189,320 samples, 0.02%)</title><rect x="1163.3" y="453" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1166.27" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (801,407 samples, 0.01%)</title><rect x="1183.1" y="533" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1186.15" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,587,865 samples, 0.08%)</title><rect x="1139.7" y="421" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1142.67" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (777,830 samples, 0.01%)</title><rect x="590.8" y="533" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="593.83" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (3,146,142 samples, 0.04%)</title><rect x="694.2" y="549" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="697.24" y="559.5" ></text>
</g>
<g >
<title>malloc (211,826,788 samples, 2.68%)</title><rect x="95.6" y="565" width="31.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="98.58" y="575.5" >ma..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (689,006 samples, 0.01%)</title><rect x="977.5" y="325" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="980.55" y="335.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (7,294,343 samples, 0.09%)</title><rect x="1137.6" y="389" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1140.60" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,986,813 samples, 0.03%)</title><rect x="1091.8" y="357" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1094.84" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,826,102 samples, 0.05%)</title><rect x="1130.4" y="293" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1133.38" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (14,324,273 samples, 0.18%)</title><rect x="514.2" y="517" width="2.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="517.23" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,194,285 samples, 0.02%)</title><rect x="1107.3" y="293" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1110.32" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,127,805 samples, 0.03%)</title><rect x="1164.0" y="421" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1167.00" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,494,649 samples, 0.02%)</title><rect x="971.1" y="357" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="974.06" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,017,221 samples, 0.06%)</title><rect x="1026.5" y="101" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1029.45" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,894,443 samples, 0.02%)</title><rect x="1102.1" y="213" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1105.14" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (822,038 samples, 0.01%)</title><rect x="977.5" y="341" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="980.53" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (1,068,651 samples, 0.01%)</title><rect x="95.0" y="501" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="98.02" y="511.5" ></text>
</g>
<g >
<title>operator new (1,049,066 samples, 0.01%)</title><rect x="316.6" y="549" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="319.65" y="559.5" ></text>
</g>
<g >
<title>operator new (2,317,045 samples, 0.03%)</title><rect x="1153.7" y="213" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1156.67" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (690,810 samples, 0.01%)</title><rect x="588.2" y="373" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="591.21" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,319,972 samples, 0.03%)</title><rect x="965.3" y="261" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="968.29" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,612,018 samples, 0.15%)</title><rect x="1158.2" y="325" width="1.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1161.22" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,459,006 samples, 0.07%)</title><rect x="1065.6" y="165" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1068.62" y="175.5" ></text>
</g>
<g >
<title>operator new (2,112,890 samples, 0.03%)</title><rect x="1104.0" y="149" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1107.04" y="159.5" ></text>
</g>
<g >
<title>operator new (15,673,146 samples, 0.20%)</title><rect x="923.7" y="293" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="926.72" y="303.5" ></text>
</g>
<g >
<title>operator delete (1,334,216 samples, 0.02%)</title><rect x="1064.8" y="181" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1067.76" y="191.5" ></text>
</g>
<g >
<title>gen_all_points (66,210,339 samples, 0.84%)</title><rect x="919.8" y="421" width="9.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="922.82" y="431.5" ></text>
</g>
<g >
<title>choose_next_point (10,192,619 samples, 0.13%)</title><rect x="1003.0" y="341" width="1.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1006.02" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,766,583 samples, 0.02%)</title><rect x="701.8" y="453" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="704.77" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (4,064,711 samples, 0.05%)</title><rect x="1003.4" y="293" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1006.44" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,073,481 samples, 0.01%)</title><rect x="1164.2" y="373" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1167.16" y="383.5" ></text>
</g>
<g >
<title>operator new (9,624,877 samples, 0.12%)</title><rect x="1151.9" y="229" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.87" y="239.5" ></text>
</g>
<g >
<title>choose_next_point (253,278,653 samples, 3.21%)</title><rect x="658.5" y="565" width="37.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="661.49" y="575.5" >cho..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (26,941,831 samples, 0.34%)</title><rect x="941.0" y="341" width="4.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="943.96" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (9,380,226 samples, 0.12%)</title><rect x="836.9" y="501" width="1.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="839.91" y="511.5" ></text>
</g>
<g >
<title>update_process_times (1,198,325 samples, 0.02%)</title><rect x="1050.7" y="69" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1053.75" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,827,186 samples, 0.05%)</title><rect x="1161.7" y="309" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1164.74" y="319.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (4,139,732 samples, 0.05%)</title><rect x="880.6" y="549" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="883.64" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,405,744 samples, 0.03%)</title><rect x="79.3" y="485" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="82.27" y="495.5" ></text>
</g>
<g >
<title>cfree (4,131,664 samples, 0.05%)</title><rect x="992.8" y="357" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="995.77" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,661,134 samples, 0.03%)</title><rect x="995.3" y="325" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="998.25" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,145,836 samples, 0.03%)</title><rect x="1068.6" y="421" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1071.60" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (5,557,310 samples, 0.07%)</title><rect x="693.1" y="501" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="696.12" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (23,931,369 samples, 0.30%)</title><rect x="686.1" y="533" width="3.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="689.13" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (822,038 samples, 0.01%)</title><rect x="977.5" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="980.53" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (25,769,977 samples, 0.33%)</title><rect x="1133.7" y="373" width="3.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1136.73" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,476,656 samples, 0.06%)</title><rect x="399.3" y="469" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="402.29" y="479.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,984,148 samples, 0.03%)</title><rect x="1055.8" y="133" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1058.83" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,141,374 samples, 0.07%)</title><rect x="1164.3" y="405" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1167.32" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (10,759,560 samples, 0.14%)</title><rect x="551.3" y="549" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="554.32" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,434,692 samples, 0.04%)</title><rect x="1132.2" y="373" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1135.24" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,609,853 samples, 0.02%)</title><rect x="1033.2" y="309" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1036.21" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,416,771 samples, 0.07%)</title><rect x="412.4" y="485" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="415.37" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (7,770,963 samples, 0.10%)</title><rect x="414.7" y="485" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="417.67" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,273,339 samples, 0.03%)</title><rect x="1050.6" y="133" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1053.65" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,901,728 samples, 0.05%)</title><rect x="1139.8" y="341" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1142.81" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,174,299 samples, 0.01%)</title><rect x="1028.4" y="101" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1031.41" y="111.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,304,251 samples, 0.03%)</title><rect x="1102.1" y="261" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1105.14" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,307,234 samples, 0.04%)</title><rect x="71.0" y="501" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="74.01" y="511.5" ></text>
</g>
<g >
<title>task_tick_fair (923,208 samples, 0.01%)</title><rect x="1050.8" y="37" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1053.77" y="47.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (34,349,418 samples, 0.43%)</title><rect x="71.5" y="469" width="5.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="74.50" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,664,298 samples, 0.03%)</title><rect x="1149.9" y="245" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1152.94" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (23,594,695 samples, 0.30%)</title><rect x="1028.4" y="133" width="3.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1031.35" y="143.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (2,574,142 samples, 0.03%)</title><rect x="430.8" y="549" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="433.83" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (931,814 samples, 0.01%)</title><rect x="1140.4" y="341" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1143.39" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (8,902,343 samples, 0.11%)</title><rect x="383.4" y="485" width="1.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="386.39" y="495.5" ></text>
</g>
<g >
<title>nvme_irq (1,287,929 samples, 0.02%)</title><rect x="965.1" y="229" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="968.07" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,470,626 samples, 0.11%)</title><rect x="80.4" y="501" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="83.35" y="511.5" ></text>
</g>
<g >
<title>operator new (236,264,221 samples, 2.99%)</title><rect x="470.9" y="565" width="35.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="473.94" y="575.5" >op..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (953,591 samples, 0.01%)</title><rect x="1132.6" y="325" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1135.61" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,380,312 samples, 0.03%)</title><rect x="1164.5" y="373" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1167.48" y="383.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (915,179 samples, 0.01%)</title><rect x="436.7" y="485" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="439.74" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (8,993,159 samples, 0.11%)</title><rect x="695.0" y="533" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="697.99" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,166,252 samples, 0.01%)</title><rect x="997.0" y="245" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1000.00" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,256,421 samples, 0.03%)</title><rect x="1101.8" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1104.76" y="223.5" ></text>
</g>
<g >
<title>round@plt (1,056,251 samples, 0.01%)</title><rect x="179.6" y="565" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="182.56" y="575.5" ></text>
</g>
<g >
<title>decltype  (780,971 samples, 0.01%)</title><rect x="1032.0" y="261" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1035.04" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (46,710,476 samples, 0.59%)</title><rect x="1123.3" y="341" width="6.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1126.26" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,212,418 samples, 0.02%)</title><rect x="1039.5" y="197" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.46" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (802,868 samples, 0.01%)</title><rect x="1153.2" y="165" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1156.19" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (14,386,200 samples, 0.18%)</title><rect x="1084.5" y="373" width="2.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1087.45" y="383.5" ></text>
</g>
<g >
<title>choose_next_point (1,219,425 samples, 0.02%)</title><rect x="1146.0" y="373" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1148.98" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (812,733 samples, 0.01%)</title><rect x="594.1" y="501" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="597.09" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,779,259 samples, 0.02%)</title><rect x="590.9" y="581" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="593.94" y="591.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,292,951 samples, 0.05%)</title><rect x="1086.0" y="325" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1088.96" y="335.5" ></text>
</g>
<g >
<title>operator delete (3,435,213 samples, 0.04%)</title><rect x="1106.5" y="293" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1109.47" y="303.5" ></text>
</g>
<g >
<title>get_inbetween_points (28,555,093 samples, 0.36%)</title><rect x="1089.0" y="389" width="4.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1092.00" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (671,116 samples, 0.01%)</title><rect x="995.6" y="293" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="998.55" y="303.5" ></text>
</g>
<g >
<title>operator new (1,180,867 samples, 0.01%)</title><rect x="1107.0" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.98" y="303.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,411,494 samples, 0.02%)</title><rect x="591.0" y="533" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="593.95" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (673,553 samples, 0.01%)</title><rect x="970.0" y="373" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="972.98" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,056,323 samples, 0.01%)</title><rect x="1122.8" y="229" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1125.76" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,443,351 samples, 0.03%)</title><rect x="1102.1" y="277" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1105.12" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,980,005 samples, 0.03%)</title><rect x="693.9" y="533" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="696.95" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (44,804,042 samples, 0.57%)</title><rect x="1076.8" y="325" width="6.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1079.76" y="335.5" ></text>
</g>
<g >
<title>operator new (3,043,497 samples, 0.04%)</title><rect x="975.9" y="373" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="978.91" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,881,703 samples, 0.09%)</title><rect x="898.6" y="549" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="901.62" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,073,481 samples, 0.01%)</title><rect x="1164.2" y="325" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1167.16" y="335.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,292,951 samples, 0.05%)</title><rect x="1086.0" y="293" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1088.96" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (161,664,228 samples, 2.05%)</title><rect x="1034.8" y="309" width="24.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1037.84" y="319.5" >s..</text>
</g>
<g >
<title>operator new (788,055 samples, 0.01%)</title><rect x="1066.7" y="69" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1069.73" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,320,592 samples, 0.02%)</title><rect x="187.0" y="501" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="189.96" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,766,583 samples, 0.02%)</title><rect x="701.8" y="469" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="704.77" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,721,381 samples, 0.02%)</title><rect x="1101.8" y="165" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1104.84" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (793,130 samples, 0.01%)</title><rect x="939.2" y="373" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="942.23" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (8,115,109 samples, 0.10%)</title><rect x="673.2" y="501" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="676.18" y="511.5" ></text>
</g>
<g >
<title>operator new (782,399 samples, 0.01%)</title><rect x="1056.7" y="197" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1059.69" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (800,896 samples, 0.01%)</title><rect x="1093.0" y="309" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1095.99" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,674,691 samples, 0.06%)</title><rect x="994.2" y="293" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="997.16" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (5,528,075 samples, 0.07%)</title><rect x="702.0" y="501" width="0.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="705.04" y="511.5" ></text>
</g>
<g >
<title>is_close_int (18,116,881 samples, 0.23%)</title><rect x="431.2" y="549" width="2.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="434.21" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (674,586 samples, 0.01%)</title><rect x="1139.8" y="309" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.81" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,338,406 samples, 0.08%)</title><rect x="1160.1" y="277" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.14" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (28,276,881 samples, 0.36%)</title><rect x="1133.4" y="389" width="4.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1136.35" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (924,030 samples, 0.01%)</title><rect x="1073.5" y="341" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1076.45" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (25,769,977 samples, 0.33%)</title><rect x="1133.7" y="357" width="3.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1136.73" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,851,205 samples, 0.02%)</title><rect x="1189.7" y="533" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1192.72" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,333,990 samples, 0.02%)</title><rect x="984.2" y="245" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="987.17" y="255.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (1,990,816 samples, 0.03%)</title><rect x="1188.4" y="565" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.37" y="575.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,312,871 samples, 0.05%)</title><rect x="1153.4" y="229" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1156.41" y="239.5" ></text>
</g>
<g >
<title>operator new (2,135,187 samples, 0.03%)</title><rect x="928.6" y="277" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="931.60" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (92,592,059 samples, 1.17%)</title><rect x="1109.1" y="293" width="13.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1112.09" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,901,728 samples, 0.05%)</title><rect x="1139.8" y="357" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1142.81" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,952,603 samples, 0.06%)</title><rect x="1141.9" y="389" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1144.94" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,062,496 samples, 0.01%)</title><rect x="1145.4" y="181" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1148.38" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (2,809,535 samples, 0.04%)</title><rect x="1184.2" y="581" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1187.19" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (21,875,903 samples, 0.28%)</title><rect x="434.1" y="549" width="3.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="437.10" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (763,801 samples, 0.01%)</title><rect x="1164.8" y="245" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1167.83" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,686,699 samples, 0.10%)</title><rect x="588.6" y="341" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="591.63" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (6,719,244 samples, 0.09%)</title><rect x="996.0" y="245" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="998.99" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,606,534 samples, 0.02%)</title><rect x="86.6" y="485" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="89.60" y="495.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (10,194,918 samples, 0.13%)</title><rect x="384.7" y="485" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="387.72" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (889,059 samples, 0.01%)</title><rect x="1169.8" y="517" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1172.84" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,719,244 samples, 0.09%)</title><rect x="996.0" y="277" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="998.99" y="287.5" ></text>
</g>
<g >
<title>malloc (7,754,931 samples, 0.10%)</title><rect x="1127.5" y="261" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1130.54" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (15,951,908 samples, 0.20%)</title><rect x="193.7" y="517" width="2.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="196.67" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (7,231,520 samples, 0.09%)</title><rect x="917.7" y="373" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="920.72" y="383.5" ></text>
</g>
<g >
<title>malloc (3,183,097 samples, 0.04%)</title><rect x="1013.2" y="229" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1016.22" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (777,830 samples, 0.01%)</title><rect x="590.8" y="501" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="593.83" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,380,312 samples, 0.03%)</title><rect x="1164.5" y="357" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1167.48" y="367.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,870,552 samples, 0.02%)</title><rect x="1183.9" y="533" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1186.91" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (8,929,232 samples, 0.11%)</title><rect x="848.8" y="533" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="851.85" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (4,115,907 samples, 0.05%)</title><rect x="945.0" y="357" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="947.98" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (4,818,160 samples, 0.06%)</title><rect x="1169.0" y="549" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1171.98" y="559.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,843,964 samples, 0.10%)</title><rect x="971.3" y="357" width="1.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="974.30" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (79,462,444 samples, 1.01%)</title><rect x="838.3" y="549" width="11.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="841.31" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (95,502,364 samples, 1.21%)</title><rect x="1094.3" y="357" width="14.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1097.30" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (19,939,829 samples, 0.25%)</title><rect x="1147.4" y="261" width="2.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1150.35" y="271.5" ></text>
</g>
<g >
<title>malloc (3,320,225 samples, 0.04%)</title><rect x="1033.7" y="325" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1036.68" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (41,578,631 samples, 0.53%)</title><rect x="731.6" y="549" width="6.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="734.62" y="559.5" ></text>
</g>
<g >
<title>operator delete (1,975,962 samples, 0.03%)</title><rect x="925.5" y="277" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="928.51" y="287.5" ></text>
</g>
<g >
<title>malloc (160,191,851 samples, 2.03%)</title><rect x="438.6" y="565" width="24.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="441.65" y="575.5" >m..</text>
</g>
<g >
<title>std::pair&lt;int, int&gt;::pair&lt;int, double&gt; (1,075,818 samples, 0.01%)</title><rect x="433.9" y="549" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="436.92" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (25,310,812 samples, 0.32%)</title><rect x="1052.3" y="197" width="3.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1055.34" y="207.5" ></text>
</g>
<g >
<title>malloc (1,288,833 samples, 0.02%)</title><rect x="1040.1" y="197" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1043.09" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,312,341 samples, 0.02%)</title><rect x="972.3" y="325" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="975.27" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (787,420 samples, 0.01%)</title><rect x="1161.6" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1164.58" y="287.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (912,344 samples, 0.01%)</title><rect x="1163.8" y="389" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1166.81" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,270,748 samples, 0.05%)</title><rect x="587.8" y="405" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="590.77" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,835,553 samples, 0.04%)</title><rect x="79.6" y="501" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="82.63" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (2,236,980 samples, 0.03%)</title><rect x="397.0" y="533" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="399.99" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,584,065 samples, 0.02%)</title><rect x="995.3" y="293" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="998.25" y="303.5" ></text>
</g>
<g >
<title>operator new (1,599,184 samples, 0.02%)</title><rect x="923.2" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="926.17" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,547,050 samples, 0.03%)</title><rect x="85.9" y="469" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="88.90" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (801,407 samples, 0.01%)</title><rect x="1183.1" y="501" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1186.15" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (812,445 samples, 0.01%)</title><rect x="1183.4" y="565" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1186.39" y="575.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (21,200,785 samples, 0.27%)</title><rect x="434.2" y="517" width="3.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="437.20" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (160,610,308 samples, 2.03%)</title><rect x="1034.8" y="277" width="24.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1037.84" y="287.5" >s..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,554,383 samples, 0.08%)</title><rect x="1155.5" y="309" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1158.48" y="319.5" ></text>
</g>
<g >
<title>operator new (10,082,992 samples, 0.13%)</title><rect x="1040.3" y="197" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1043.29" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (2,101,127 samples, 0.03%)</title><rect x="1163.7" y="453" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1166.67" y="463.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,323,165 samples, 0.02%)</title><rect x="196.9" y="533" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="199.93" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,120,019 samples, 0.08%)</title><rect x="221.5" y="549" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="224.46" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (918,220 samples, 0.01%)</title><rect x="846.8" y="485" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="849.78" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,341,212 samples, 0.04%)</title><rect x="532.0" y="517" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="534.96" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,364,529 samples, 0.06%)</title><rect x="688.0" y="453" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="691.04" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (65,270,075 samples, 0.83%)</title><rect x="68.2" y="549" width="9.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="71.16" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (37,702,880 samples, 0.48%)</title><rect x="386.8" y="501" width="5.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="389.75" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,321,271 samples, 0.02%)</title><rect x="594.1" y="549" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="597.07" y="559.5" ></text>
</g>
<g >
<title>is_close_int (4,919,795 samples, 0.06%)</title><rect x="93.5" y="549" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="96.50" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,576,676 samples, 0.02%)</title><rect x="1164.8" y="357" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1167.83" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,409,984 samples, 0.07%)</title><rect x="1055.0" y="85" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1058.02" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,074,208 samples, 0.01%)</title><rect x="1122.1" y="277" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1125.11" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (798,246 samples, 0.01%)</title><rect x="1064.6" y="165" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1067.62" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,453,799 samples, 0.03%)</title><rect x="965.3" y="309" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="968.29" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,394,132 samples, 0.09%)</title><rect x="1055.0" y="165" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1058.02" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (3,902,467 samples, 0.05%)</title><rect x="1183.6" y="581" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1186.61" y="591.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,579,679 samples, 0.02%)</title><rect x="1004.1" y="309" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1007.11" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (9,076,806 samples, 0.11%)</title><rect x="388.8" y="469" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="391.85" y="479.5" ></text>
</g>
<g >
<title>gen_all_points (127,815,351 samples, 1.62%)</title><rect x="400.0" y="565" width="19.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="402.96" y="575.5" ></text>
</g>
<g >
<title>do_exit (970,813 samples, 0.01%)</title><rect x="1170.0" y="517" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1173.03" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,044,808 samples, 0.01%)</title><rect x="694.8" y="533" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="697.83" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (92,592,059 samples, 1.17%)</title><rect x="1109.1" y="357" width="13.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1112.09" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (10,142,160 samples, 0.13%)</title><rect x="1086.6" y="357" width="1.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1089.60" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (10,021,402 samples, 0.13%)</title><rect x="393.3" y="485" width="1.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="396.26" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,424,237 samples, 0.04%)</title><rect x="1067.0" y="229" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1069.97" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (2,538,230 samples, 0.03%)</title><rect x="81.2" y="469" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="84.24" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,263,457 samples, 0.03%)</title><rect x="1164.0" y="437" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1166.98" y="447.5" ></text>
</g>
<g >
<title>malloc (5,732,669 samples, 0.07%)</title><rect x="943.2" y="277" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="946.19" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,768,439 samples, 0.16%)</title><rect x="987.4" y="229" width="2.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="990.45" y="239.5" ></text>
</g>
<g >
<title>operator delete (144,654,326 samples, 1.83%)</title><rect x="779.4" y="565" width="21.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="782.43" y="575.5" >o..</text>
</g>
<g >
<title>operator new (2,110,735 samples, 0.03%)</title><rect x="987.1" y="261" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="990.07" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,983,738 samples, 0.04%)</title><rect x="1156.7" y="373" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1159.74" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,554,414 samples, 0.05%)</title><rect x="184.3" y="533" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="187.31" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,066,702 samples, 0.01%)</title><rect x="1127.3" y="197" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1130.30" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (673,676 samples, 0.01%)</title><rect x="1133.1" y="405" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1136.07" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (933,336 samples, 0.01%)</title><rect x="1033.3" y="197" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1036.29" y="207.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,672,147 samples, 0.02%)</title><rect x="384.5" y="453" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="387.47" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,195,002 samples, 0.03%)</title><rect x="985.1" y="261" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="988.12" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (8,931,196 samples, 0.11%)</title><rect x="993.7" y="341" width="1.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="996.68" y="351.5" ></text>
</g>
<g >
<title>cfree (792,678 samples, 0.01%)</title><rect x="1140.4" y="309" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1143.41" y="319.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (917,987 samples, 0.01%)</title><rect x="1004.2" y="261" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1007.21" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (12,036,643 samples, 0.15%)</title><rect x="737.8" y="549" width="1.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="740.83" y="559.5" ></text>
</g>
<g >
<title>operator new (2,397,766 samples, 0.03%)</title><rect x="1121.6" y="277" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1124.61" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,985,900 samples, 0.03%)</title><rect x="1092.7" y="325" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1095.69" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,746,752 samples, 0.10%)</title><rect x="1065.3" y="181" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1068.27" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (1,227,994 samples, 0.02%)</title><rect x="438.5" y="533" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="441.46" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,437,340 samples, 0.02%)</title><rect x="946.2" y="325" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="949.17" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,815,452 samples, 0.04%)</title><rect x="919.2" y="405" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="922.22" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (7,331,791 samples, 0.09%)</title><rect x="437.4" y="549" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="440.37" y="559.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,554,383 samples, 0.08%)</title><rect x="1155.5" y="325" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1158.48" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (11,612,018 samples, 0.15%)</title><rect x="1158.2" y="373" width="1.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1161.22" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,424,237 samples, 0.04%)</title><rect x="1067.0" y="213" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1069.97" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,347,393 samples, 0.02%)</title><rect x="916.5" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="919.53" y="431.5" ></text>
</g>
<g >
<title>choose_next_point (1,595,566 samples, 0.02%)</title><rect x="1165.1" y="421" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1168.15" y="431.5" ></text>
</g>
<g >
<title>_start (1,709,478,742 samples, 21.65%)</title><rect x="911.0" y="581" width="255.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="913.98" y="591.5" >_start</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,306,322 samples, 0.02%)</title><rect x="1163.7" y="421" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1166.75" y="431.5" ></text>
</g>
<g >
<title>cfree (1,457,052 samples, 0.02%)</title><rect x="1165.4" y="325" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1168.38" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (51,671,751 samples, 0.65%)</title><rect x="524.7" y="533" width="7.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="527.73" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,975,007 samples, 0.03%)</title><rect x="1165.4" y="341" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1168.38" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (819,078 samples, 0.01%)</title><rect x="944.9" y="293" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="947.86" y="303.5" ></text>
</g>
<g >
<title>operator new (1,198,463 samples, 0.02%)</title><rect x="1119.2" y="133" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1122.19" y="143.5" ></text>
</g>
<g >
<title>malloc (824,832 samples, 0.01%)</title><rect x="1153.7" y="197" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1156.73" y="207.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,195,115 samples, 0.05%)</title><rect x="918.2" y="341" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="921.17" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (802,868 samples, 0.01%)</title><rect x="1153.2" y="181" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1156.19" y="191.5" ></text>
</g>
<g >
<title>operator new (1,044,134 samples, 0.01%)</title><rect x="1065.0" y="181" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1067.96" y="191.5" ></text>
</g>
<g >
<title>__libc_start_main (1,709,478,742 samples, 21.65%)</title><rect x="911.0" y="565" width="255.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="913.98" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>[libc.so.6] (4,277,375 samples, 0.05%)</title><rect x="1158.5" y="293" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.49" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,504,248 samples, 0.06%)</title><rect x="1137.6" y="325" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1140.60" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,499,595 samples, 0.07%)</title><rect x="1001.6" y="341" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1004.57" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (46,710,476 samples, 0.59%)</title><rect x="1123.3" y="277" width="6.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1126.26" y="287.5" ></text>
</g>
<g >
<title>operator new (1,202,096 samples, 0.02%)</title><rect x="589.5" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="592.52" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,466,763 samples, 0.02%)</title><rect x="999.2" y="325" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1002.15" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (33,092,914 samples, 0.42%)</title><rect x="903.8" y="453" width="5.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="906.84" y="463.5" ></text>
</g>
<g >
<title>operator new (31,615,947 samples, 0.40%)</title><rect x="1061.7" y="197" width="4.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1064.71" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,150,172 samples, 0.08%)</title><rect x="531.0" y="517" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="534.04" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,322,126 samples, 0.02%)</title><rect x="316.4" y="517" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="319.39" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (5,977,659 samples, 0.08%)</title><rect x="1165.1" y="437" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1168.11" y="447.5" ></text>
</g>
<g >
<title>operator delete (1,196,794 samples, 0.02%)</title><rect x="923.5" y="293" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="926.54" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,523,248 samples, 0.03%)</title><rect x="1138.3" y="357" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1141.27" y="367.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (3,515,866 samples, 0.04%)</title><rect x="871.4" y="549" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="874.43" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (11,520,099 samples, 0.15%)</title><rect x="1160.0" y="373" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.98" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (23,594,695 samples, 0.30%)</title><rect x="1028.4" y="117" width="3.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1031.35" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (32,186,494 samples, 0.41%)</title><rect x="843.1" y="533" width="4.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="846.13" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (64,100,526 samples, 0.81%)</title><rect x="553.7" y="517" width="9.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="556.73" y="527.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (66,160,990 samples, 0.84%)</title><rect x="674.4" y="485" width="9.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="677.39" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,576,676 samples, 0.02%)</title><rect x="1164.8" y="293" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1167.83" y="303.5" ></text>
</g>
<g >
<title>get_inbetween_points (3,342,870 samples, 0.04%)</title><rect x="1045.7" y="197" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1048.66" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,220,255 samples, 0.03%)</title><rect x="1085.5" y="245" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1088.53" y="255.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (5,655,092 samples, 0.07%)</title><rect x="417.9" y="437" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="420.88" y="447.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (1,045,817 samples, 0.01%)</title><rect x="1146.2" y="325" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1149.22" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (432,735,217 samples, 5.48%)</title><rect x="232.5" y="565" width="64.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="235.51" y="575.5" >[libc.s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (104,577,854 samples, 1.32%)</title><rect x="668.6" y="517" width="15.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="671.65" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (798,246 samples, 0.01%)</title><rect x="1064.6" y="85" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1067.62" y="95.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,712,767 samples, 0.02%)</title><rect x="82.2" y="549" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="85.21" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,006,699 samples, 0.03%)</title><rect x="1021.7" y="197" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1024.71" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (163,538,163 samples, 2.07%)</title><rect x="1007.6" y="261" width="24.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1010.58" y="271.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (25,141,274 samples, 0.32%)</title><rect x="1150.3" y="357" width="3.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1153.33" y="367.5" ></text>
</g>
<g >
<title>malloc (3,809,239 samples, 0.05%)</title><rect x="924.9" y="277" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="927.94" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (75,693,107 samples, 0.96%)</title><rect x="899.6" y="549" width="11.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="902.64" y="559.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,062,015 samples, 0.01%)</title><rect x="1163.5" y="453" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1166.45" y="463.5" ></text>
</g>
<g >
<title>cfree (7,222,064 samples, 0.09%)</title><rect x="923.8" y="277" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="926.84" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,230,196 samples, 0.09%)</title><rect x="383.4" y="437" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="386.39" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (160,610,308 samples, 2.03%)</title><rect x="1034.8" y="261" width="24.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1037.84" y="271.5" >s..</text>
</g>
<g >
<title>operator new (919,338 samples, 0.01%)</title><rect x="1103.7" y="277" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.67" y="287.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,860,797 samples, 0.04%)</title><rect x="1003.6" y="277" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1006.62" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (2,266,576 samples, 0.03%)</title><rect x="1143.0" y="405" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1146.02" y="415.5" ></text>
</g>
<g >
<title>operator new (1,467,654 samples, 0.02%)</title><rect x="969.1" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="972.08" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (945,309 samples, 0.01%)</title><rect x="970.9" y="357" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="973.91" y="367.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (4,144,416 samples, 0.05%)</title><rect x="881.3" y="549" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="884.26" y="559.5" ></text>
</g>
<g >
<title>cfree (935,186 samples, 0.01%)</title><rect x="1147.0" y="357" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1149.95" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (12,980,721 samples, 0.16%)</title><rect x="1025.6" y="197" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1028.57" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (9,072,787 samples, 0.11%)</title><rect x="1144.2" y="357" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1147.19" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (9,380,226 samples, 0.12%)</title><rect x="836.9" y="485" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="839.91" y="495.5" ></text>
</g>
<g >
<title>operator delete (1,075,684 samples, 0.01%)</title><rect x="970.6" y="357" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="973.60" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (18,729,679 samples, 0.24%)</title><rect x="1150.6" y="261" width="2.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1153.57" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (793,077 samples, 0.01%)</title><rect x="694.7" y="549" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="697.71" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,725,561 samples, 0.02%)</title><rect x="1119.1" y="229" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1122.11" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (14,324,273 samples, 0.18%)</title><rect x="514.2" y="549" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="517.23" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (170,582,478 samples, 2.16%)</title><rect x="207.0" y="565" width="25.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="209.99" y="575.5" >s..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (5,977,659 samples, 0.08%)</title><rect x="1165.1" y="453" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1168.11" y="463.5" ></text>
</g>
<g >
<title>cfree (13,048,220 samples, 0.17%)</title><rect x="1043.6" y="197" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1046.61" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (4,202,050 samples, 0.05%)</title><rect x="736.9" y="469" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="739.90" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,212,617 samples, 0.02%)</title><rect x="1117.3" y="261" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1120.26" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,504,248 samples, 0.06%)</title><rect x="1137.6" y="357" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1140.60" y="367.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (8,281,373 samples, 0.10%)</title><rect x="996.0" y="309" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="998.99" y="319.5" ></text>
</g>
<g >
<title>operator new (1,974,273 samples, 0.02%)</title><rect x="1067.2" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1070.16" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (46,710,476 samples, 0.59%)</title><rect x="1123.3" y="309" width="6.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1126.26" y="319.5" ></text>
</g>
<g >
<title>malloc (3,423,055 samples, 0.04%)</title><rect x="968.5" y="389" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="971.55" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,212,617 samples, 0.02%)</title><rect x="1117.3" y="229" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1120.26" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,603,249 samples, 0.02%)</title><rect x="530.6" y="437" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="533.60" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (28,820,489 samples, 0.36%)</title><rect x="1027.7" y="229" width="4.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1030.71" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (801,407 samples, 0.01%)</title><rect x="1183.1" y="485" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1186.15" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (78,330,619 samples, 0.99%)</title><rect x="1072.8" y="357" width="11.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1075.75" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,320,592 samples, 0.02%)</title><rect x="187.0" y="453" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="189.96" y="463.5" ></text>
</g>
<g >
<title>cfree (131,571,106 samples, 1.67%)</title><rect x="297.2" y="565" width="19.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="300.17" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (697,079 samples, 0.01%)</title><rect x="1027.6" y="229" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1030.61" y="239.5" ></text>
</g>
<g >
<title>choose_next_point (21,039,022 samples, 0.27%)</title><rect x="1154.2" y="405" width="3.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1157.19" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (7,536,185 samples, 0.10%)</title><rect x="702.9" y="485" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="705.86" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,894,057 samples, 0.04%)</title><rect x="1085.5" y="309" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1088.53" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,725,561 samples, 0.02%)</title><rect x="1119.1" y="213" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1122.11" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (10,907,154 samples, 0.14%)</title><rect x="841.5" y="469" width="1.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="844.50" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,355,560 samples, 0.07%)</title><rect x="846.1" y="517" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="849.14" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (42,686,807 samples, 0.54%)</title><rect x="379.9" y="549" width="6.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="382.86" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (4,202,050 samples, 0.05%)</title><rect x="736.9" y="501" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="739.90" y="511.5" ></text>
</g>
<g >
<title>cfree (2,243,547 samples, 0.03%)</title><rect x="1039.6" y="197" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1042.64" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,865,858 samples, 0.02%)</title><rect x="1149.6" y="229" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1152.60" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (9,172,209 samples, 0.12%)</title><rect x="395.4" y="533" width="1.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="398.35" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (13,060,614 samples, 0.17%)</title><rect x="1056.9" y="181" width="1.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1059.86" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (764,980 samples, 0.01%)</title><rect x="1171.3" y="549" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1174.28" y="559.5" ></text>
</g>
<g >
<title>operator delete (1,766,268 samples, 0.02%)</title><rect x="1051.1" y="197" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1054.12" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (931,715 samples, 0.01%)</title><rect x="984.2" y="165" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="987.21" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,205,786 samples, 0.02%)</title><rect x="668.5" y="517" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="671.47" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,664,396 samples, 0.03%)</title><rect x="999.1" y="341" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1002.05" y="351.5" ></text>
</g>
<g >
<title>malloc (902,900 samples, 0.01%)</title><rect x="1130.7" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1133.68" y="255.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,984,281 samples, 0.03%)</title><rect x="437.1" y="501" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="440.07" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,171,970 samples, 0.01%)</title><rect x="1066.7" y="165" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1069.71" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (16,464,276 samples, 0.21%)</title><rect x="986.9" y="277" width="2.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="989.91" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (22,112,757 samples, 0.28%)</title><rect x="347.0" y="501" width="3.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="350.03" y="511.5" ></text>
</g>
<g >
<title>cfree (1,719,788 samples, 0.02%)</title><rect x="1151.9" y="213" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1154.91" y="223.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (5,121,870 samples, 0.06%)</title><rect x="699.2" y="517" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="702.24" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,205,960 samples, 0.02%)</title><rect x="594.1" y="517" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="597.09" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;::pair&lt;int, double&gt; (791,820 samples, 0.01%)</title><rect x="731.5" y="549" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="734.46" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,342,751 samples, 0.02%)</title><rect x="1033.2" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1036.25" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,072,312 samples, 0.01%)</title><rect x="1033.3" y="245" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1036.27" y="255.5" ></text>
</g>
<g >
<title>operator new (8,671,162 samples, 0.11%)</title><rect x="987.9" y="149" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="990.94" y="159.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (2,121,050 samples, 0.03%)</title><rect x="568.3" y="549" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="571.35" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (951,042 samples, 0.01%)</title><rect x="1021.6" y="197" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1024.57" y="207.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (13,153,544 samples, 0.17%)</title><rect x="965.7" y="373" width="2.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="968.69" y="383.5" ></text>
</g>
<g >
<title>malloc (892,934 samples, 0.01%)</title><rect x="928.9" y="293" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="931.94" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (9,072,787 samples, 0.11%)</title><rect x="1144.2" y="389" width="1.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1147.19" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (236,401,547 samples, 2.99%)</title><rect x="1032.2" y="341" width="35.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1035.16" y="351.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,576,676 samples, 0.02%)</title><rect x="1164.8" y="325" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1167.83" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (773,199 samples, 0.01%)</title><rect x="980.7" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="983.65" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,133,103 samples, 0.10%)</title><rect x="991.6" y="357" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="994.55" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (10,595,714 samples, 0.13%)</title><rect x="1154.9" y="357" width="1.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1157.88" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,304,251 samples, 0.03%)</title><rect x="1102.1" y="229" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1105.14" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (801,396 samples, 0.01%)</title><rect x="1163.3" y="341" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1166.27" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (1,099,271 samples, 0.01%)</title><rect x="1143.1" y="389" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1146.07" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (937,833 samples, 0.01%)</title><rect x="81.6" y="517" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="84.62" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (41,578,631 samples, 0.53%)</title><rect x="731.6" y="533" width="6.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="734.62" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (33,092,914 samples, 0.42%)</title><rect x="903.8" y="485" width="5.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="906.84" y="495.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,459,715 samples, 0.04%)</title><rect x="703.5" y="453" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="706.47" y="463.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (1,342,495 samples, 0.02%)</title><rect x="935.9" y="405" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="938.93" y="415.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (778,642 samples, 0.01%)</title><rect x="1143.2" y="357" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1146.24" y="367.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (39,555,386 samples, 0.50%)</title><rect x="731.9" y="517" width="5.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="734.92" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,424,237 samples, 0.04%)</title><rect x="1067.0" y="261" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1069.97" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (1,189,320 samples, 0.02%)</title><rect x="1163.3" y="421" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1166.27" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (8,868,235 samples, 0.11%)</title><rect x="528.1" y="469" width="1.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="531.09" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (800,880 samples, 0.01%)</title><rect x="1131.5" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1134.50" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (800,896 samples, 0.01%)</title><rect x="1093.0" y="293" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1095.99" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,520,099 samples, 0.15%)</title><rect x="1160.0" y="325" width="1.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1162.98" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,881,977 samples, 0.10%)</title><rect x="1086.7" y="325" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1089.68" y="335.5" ></text>
</g>
<g >
<title>update_process_times (1,919,766 samples, 0.02%)</title><rect x="965.3" y="213" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="968.35" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (57,006,204 samples, 0.72%)</title><rect x="386.2" y="533" width="8.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="389.24" y="543.5" ></text>
</g>
<g >
<title>malloc (1,065,047 samples, 0.01%)</title><rect x="987.8" y="149" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="990.78" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (78,330,619 samples, 0.99%)</title><rect x="1072.8" y="373" width="11.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1075.75" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (964,079 samples, 0.01%)</title><rect x="919.3" y="325" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="922.28" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,742,063 samples, 0.02%)</title><rect x="954.1" y="373" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="957.10" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,137,039 samples, 0.03%)</title><rect x="1169.3" y="501" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1172.34" y="511.5" ></text>
</g>
<g >
<title>task_tick_fair (828,796 samples, 0.01%)</title><rect x="965.5" y="181" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="968.47" y="191.5" ></text>
</g>
<g >
<title>decltype  (9,889,837 samples, 0.13%)</title><rect x="406.7" y="501" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="409.66" y="511.5" ></text>
</g>
<g >
<title>operator new (2,148,808 samples, 0.03%)</title><rect x="1028.0" y="213" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1031.01" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,051,019 samples, 0.01%)</title><rect x="1066.7" y="101" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1069.71" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,154,112 samples, 0.04%)</title><rect x="1162.8" y="357" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1165.80" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (22,176,128 samples, 0.28%)</title><rect x="926.2" y="341" width="3.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="929.16" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (67,624,197 samples, 0.86%)</title><rect x="955.6" y="373" width="10.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="958.59" y="383.5" ></text>
</g>
<g >
<title>cfree (1,077,741 samples, 0.01%)</title><rect x="1140.0" y="293" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1142.97" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,212,809 samples, 0.04%)</title><rect x="935.4" y="405" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="938.40" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,374,081 samples, 0.03%)</title><rect x="1023.4" y="213" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1026.38" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (777,830 samples, 0.01%)</title><rect x="590.8" y="453" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="593.83" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,811,855 samples, 0.04%)</title><rect x="1144.2" y="293" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1147.25" y="303.5" ></text>
</g>
<g >
<title>cfree (7,479,625 samples, 0.09%)</title><rect x="1134.0" y="325" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1137.00" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (38,569,503 samples, 0.49%)</title><rect x="584.1" y="469" width="5.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="587.06" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,230,196 samples, 0.09%)</title><rect x="383.4" y="421" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="386.39" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (27,760,957 samples, 0.35%)</title><rect x="1184.6" y="581" width="4.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1187.61" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,409,984 samples, 0.07%)</title><rect x="1055.0" y="117" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1058.02" y="127.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (778,642 samples, 0.01%)</title><rect x="1143.2" y="373" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1146.24" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,220,255 samples, 0.03%)</title><rect x="1085.5" y="293" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1088.53" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,826,155 samples, 0.06%)</title><rect x="989.5" y="357" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="992.53" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (823,729 samples, 0.01%)</title><rect x="1137.4" y="261" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1140.37" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (812,733 samples, 0.01%)</title><rect x="594.1" y="485" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="597.09" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,603,249 samples, 0.02%)</title><rect x="530.6" y="453" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="533.60" y="463.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,952,603 samples, 0.06%)</title><rect x="1141.9" y="357" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1144.94" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,488,137 samples, 0.02%)</title><rect x="1117.0" y="165" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1119.97" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (18,729,679 samples, 0.24%)</title><rect x="1150.6" y="245" width="2.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1153.57" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (918,220 samples, 0.01%)</title><rect x="846.8" y="469" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="849.78" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,576,676 samples, 0.02%)</title><rect x="1164.8" y="277" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1167.83" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,523,248 samples, 0.03%)</title><rect x="1138.3" y="341" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1141.27" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,034,970 samples, 0.01%)</title><rect x="1170.0" y="581" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1173.03" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (66,652,714 samples, 0.84%)</title><rect x="872.1" y="565" width="9.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="875.06" y="575.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,343,861 samples, 0.02%)</title><rect x="1184.4" y="565" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1187.39" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,750,711 samples, 0.02%)</title><rect x="1156.5" y="373" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1159.48" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,393,660 samples, 0.03%)</title><rect x="935.5" y="341" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="938.48" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,750,711 samples, 0.02%)</title><rect x="1156.5" y="389" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1159.48" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,127,433 samples, 0.03%)</title><rect x="1101.8" y="197" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1104.78" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,766,718 samples, 0.02%)</title><rect x="396.7" y="549" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="399.72" y="559.5" ></text>
</g>
<g >
<title>malloc (11,099,172 samples, 0.14%)</title><rect x="1119.5" y="277" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1122.49" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (8,193,682 samples, 0.10%)</title><rect x="196.1" y="565" width="1.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="199.06" y="575.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (67,624,197 samples, 0.86%)</title><rect x="955.6" y="357" width="10.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="958.59" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (5,333,516 samples, 0.07%)</title><rect x="189.5" y="549" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="192.45" y="559.5" ></text>
</g>
<g >
<title>get_inbetween_points (9,906,364 samples, 0.13%)</title><rect x="995.8" y="357" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="998.79" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (46,710,476 samples, 0.59%)</title><rect x="1123.3" y="293" width="6.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1126.26" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (6,615,531 samples, 0.08%)</title><rect x="691.9" y="485" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="694.85" y="495.5" ></text>
</g>
<g >
<title>get_inbetween_points (4,915,458 samples, 0.06%)</title><rect x="1157.3" y="405" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1160.33" y="415.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,316,339 samples, 0.02%)</title><rect x="688.7" y="469" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="691.69" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (10,826,708 samples, 0.14%)</title><rect x="529.4" y="517" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="532.42" y="527.5" ></text>
</g>
<g >
<title>blk_mq_end_request_batch (1,150,532 samples, 0.01%)</title><rect x="965.1" y="213" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="968.07" y="223.5" ></text>
</g>
<g >
<title>operator delete (36,553,713 samples, 0.46%)</title><rect x="1173.6" y="581" width="5.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1176.56" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,083,043 samples, 0.25%)</title><rect x="1147.3" y="357" width="3.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1150.33" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (815,178 samples, 0.01%)</title><rect x="1132.6" y="293" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1135.63" y="303.5" ></text>
</g>
<g >
<title>malloc (2,411,958 samples, 0.03%)</title><rect x="980.0" y="277" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="983.03" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,990,528 samples, 0.03%)</title><rect x="79.3" y="453" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="82.27" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,008,317 samples, 0.05%)</title><rect x="1165.4" y="421" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1168.38" y="431.5" ></text>
</g>
<g >
<title>decltype  (684,194 samples, 0.01%)</title><rect x="704.0" y="485" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="706.99" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,339,078 samples, 0.02%)</title><rect x="1153.1" y="197" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1156.11" y="207.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1,287,929 samples, 0.02%)</title><rect x="965.1" y="325" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="968.07" y="335.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (12,441,498 samples, 0.16%)</title><rect x="684.3" y="485" width="1.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="687.27" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (5,668,664 samples, 0.07%)</title><rect x="691.0" y="469" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="694.00" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,975,007 samples, 0.03%)</title><rect x="1165.4" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1168.38" y="415.5" ></text>
</g>
<g >
<title>decltype  (5,121,870 samples, 0.06%)</title><rect x="699.2" y="501" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="702.24" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (6,677,043 samples, 0.08%)</title><rect x="845.1" y="517" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="848.14" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (18,729,679 samples, 0.24%)</title><rect x="1150.6" y="293" width="2.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1153.57" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event (1,287,929 samples, 0.02%)</title><rect x="965.1" y="261" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="968.07" y="271.5" ></text>
</g>
<g >
<title>decltype  (11,041,210 samples, 0.14%)</title><rect x="230.8" y="469" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="233.82" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (67,559,913 samples, 0.86%)</title><rect x="222.4" y="549" width="10.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="225.38" y="559.5" ></text>
</g>
<g >
<title>cfree (937,585 samples, 0.01%)</title><rect x="979.9" y="277" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="982.86" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,984,148 samples, 0.03%)</title><rect x="1055.8" y="117" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1058.83" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,729,656 samples, 0.02%)</title><rect x="1021.8" y="165" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1024.75" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,424,237 samples, 0.04%)</title><rect x="1067.0" y="197" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1069.97" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,021,572 samples, 0.06%)</title><rect x="1161.7" y="373" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1164.70" y="383.5" ></text>
</g>
<g >
<title>cfree (3,840,855 samples, 0.05%)</title><rect x="1002.4" y="341" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1005.45" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,712,731 samples, 0.02%)</title><rect x="1164.8" y="373" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1167.83" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (9,072,787 samples, 0.11%)</title><rect x="1144.2" y="325" width="1.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1147.19" y="335.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (35,061,101 samples, 0.44%)</title><rect x="374.6" y="485" width="5.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="377.62" y="495.5" ></text>
</g>
<g >
<title>cfree (63,725,744 samples, 0.81%)</title><rect x="1094.9" y="293" width="9.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1097.85" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (17,638,465 samples, 0.22%)</title><rect x="397.3" y="533" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="400.32" y="543.5" ></text>
</g>
<g >
<title>update_process_times (1,340,282 samples, 0.02%)</title><rect x="1102.2" y="165" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1105.22" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (3,265,404 samples, 0.04%)</title><rect x="83.0" y="517" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="85.99" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,520,099 samples, 0.15%)</title><rect x="1160.0" y="309" width="1.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1162.98" y="319.5" ></text>
</g>
<g >
<title>cfree (1,330,317 samples, 0.02%)</title><rect x="916.8" y="421" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="919.83" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (12,189,491 samples, 0.15%)</title><rect x="1154.7" y="389" width="1.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1157.66" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,708,106 samples, 0.02%)</title><rect x="986.5" y="197" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="989.50" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (20,433,072 samples, 0.26%)</title><rect x="84.4" y="533" width="3.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="87.44" y="543.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (6,013,419 samples, 0.08%)</title><rect x="94.3" y="517" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="97.32" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (798,246 samples, 0.01%)</title><rect x="1064.6" y="101" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1067.62" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,166,252 samples, 0.01%)</title><rect x="997.0" y="277" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1000.00" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (7,294,343 samples, 0.09%)</title><rect x="1137.6" y="421" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1140.60" y="431.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (912,344 samples, 0.01%)</title><rect x="1163.8" y="373" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1166.81" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,851,205 samples, 0.02%)</title><rect x="1189.7" y="549" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1192.72" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (164,456,682 samples, 2.08%)</title><rect x="1007.6" y="309" width="24.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1010.58" y="319.5" >s..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (522,101,021 samples, 6.61%)</title><rect x="990.6" y="421" width="78.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="993.59" y="431.5" >std::set&lt;..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (931,814 samples, 0.01%)</title><rect x="1140.4" y="325" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1143.39" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (688,792 samples, 0.01%)</title><rect x="945.2" y="277" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="948.22" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (18,729,679 samples, 0.24%)</title><rect x="1150.6" y="309" width="2.8" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1153.57" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (230,143,217 samples, 2.91%)</title><rect x="594.3" y="565" width="34.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="597.35" y="575.5" >[l..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,352,991 samples, 0.02%)</title><rect x="591.0" y="517" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="593.95" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (153,514,163 samples, 1.94%)</title><rect x="967.7" y="405" width="22.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="970.66" y="415.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (5,668,664 samples, 0.07%)</title><rect x="691.0" y="485" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="694.00" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (798,246 samples, 0.01%)</title><rect x="1064.6" y="149" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1067.62" y="159.5" ></text>
</g>
<g >
<title>roundf32x (2,425,159 samples, 0.03%)</title><rect x="1182.4" y="581" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1185.43" y="591.5" ></text>
</g>
<g >
<title>malloc (13,482,044 samples, 0.17%)</title><rect x="1104.5" y="293" width="2.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1107.46" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,152,709 samples, 0.03%)</title><rect x="1137.3" y="309" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1140.26" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,830,554 samples, 0.02%)</title><rect x="1159.7" y="309" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1162.69" y="319.5" ></text>
</g>
<g >
<title>decltype  (3,459,715 samples, 0.04%)</title><rect x="703.5" y="421" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="706.47" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (801,407 samples, 0.01%)</title><rect x="1183.1" y="549" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1186.15" y="559.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (318,683,418 samples, 4.04%)</title><rect x="332.2" y="549" width="47.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="335.25" y="559.5" >std:..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,818,764 samples, 0.04%)</title><rect x="185.8" y="469" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="188.84" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (2,101,127 samples, 0.03%)</title><rect x="1163.7" y="437" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1166.67" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (12,768,439 samples, 0.16%)</title><rect x="987.4" y="245" width="2.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="990.45" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (888,185 samples, 0.01%)</title><rect x="987.5" y="149" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="990.49" y="159.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (778,642 samples, 0.01%)</title><rect x="1143.2" y="389" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1146.24" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (6,557,203 samples, 0.08%)</title><rect x="1067.6" y="389" width="1.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1070.62" y="399.5" ></text>
</g>
<g >
<title>operator new (9,072,582 samples, 0.11%)</title><rect x="1148.5" y="245" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1151.52" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,603,858 samples, 0.02%)</title><rect x="588.1" y="389" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="591.11" y="399.5" ></text>
</g>
<g >
<title>operator new (1,978,860 samples, 0.03%)</title><rect x="1138.0" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1140.97" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (815,178 samples, 0.01%)</title><rect x="1132.6" y="309" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1135.63" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (19,939,829 samples, 0.25%)</title><rect x="1147.4" y="309" width="2.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1150.35" y="319.5" ></text>
</g>
<g >
<title>cfree (812,974 samples, 0.01%)</title><rect x="657.8" y="549" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="660.82" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (929,733 samples, 0.01%)</title><rect x="948.6" y="421" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="951.57" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,878,714 samples, 0.02%)</title><rect x="1050.6" y="117" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1053.65" y="127.5" ></text>
</g>
<g >
<title>operator delete (1,058,950 samples, 0.01%)</title><rect x="1042.4" y="213" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1045.41" y="223.5" ></text>
</g>
<g >
<title>operator new (17,520,503 samples, 0.22%)</title><rect x="1029.1" y="101" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1032.10" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (41,715,091 samples, 0.53%)</title><rect x="940.4" y="405" width="6.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="943.35" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (38,543,333 samples, 0.49%)</title><rect x="1096.4" y="277" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1099.36" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (21,428,629 samples, 0.27%)</title><rect x="540.9" y="549" width="3.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="543.94" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,442,412 samples, 0.02%)</title><rect x="1146.7" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1149.74" y="367.5" ></text>
</g>
<g >
<title>operator new (2,578,400 samples, 0.03%)</title><rect x="658.0" y="549" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="661.04" y="559.5" ></text>
</g>
<g >
<title>get_inbetween_points (5,337,012 samples, 0.07%)</title><rect x="1170.6" y="581" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1173.62" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (6,677,043 samples, 0.08%)</title><rect x="845.1" y="485" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="848.14" y="495.5" ></text>
</g>
<g >
<title>malloc (11,844,260 samples, 0.15%)</title><rect x="1004.8" y="341" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1007.82" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,380,312 samples, 0.03%)</title><rect x="1164.5" y="325" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1167.48" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (29,468,191 samples, 0.37%)</title><rect x="1133.2" y="405" width="4.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1136.17" y="415.5" ></text>
</g>
<g >
<title>operator new (1,299,885 samples, 0.02%)</title><rect x="1164.6" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1167.64" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,137,039 samples, 0.03%)</title><rect x="1169.3" y="485" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1172.34" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (6,429,627 samples, 0.08%)</title><rect x="970.3" y="373" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="973.34" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (10,907,154 samples, 0.14%)</title><rect x="841.5" y="533" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="844.50" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,322,126 samples, 0.02%)</title><rect x="316.4" y="533" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="319.39" y="543.5" ></text>
</g>
<g >
<title>cfree (913,067 samples, 0.01%)</title><rect x="1138.0" y="293" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1140.97" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (972,291 samples, 0.01%)</title><rect x="1067.5" y="389" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1070.48" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (513,065,280 samples, 6.50%)</title><rect x="990.8" y="373" width="76.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="993.82" y="383.5" >std::_Rb..</text>
</g>
<g >
<title>std::_Rb_tree_decrement (8,100,056 samples, 0.10%)</title><rect x="870.8" y="565" width="1.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="873.85" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,686,002 samples, 0.05%)</title><rect x="1066.9" y="309" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1069.93" y="319.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (918,519 samples, 0.01%)</title><rect x="1032.0" y="293" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1035.02" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (32,033,355 samples, 0.41%)</title><rect x="1008.0" y="229" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1011.02" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,104,781 samples, 0.06%)</title><rect x="998.9" y="357" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1001.93" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (1,081,795 samples, 0.01%)</title><rect x="976.5" y="373" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="979.51" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,364,529 samples, 0.06%)</title><rect x="688.0" y="421" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="691.04" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (2,955,409 samples, 0.04%)</title><rect x="1087.4" y="309" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1090.42" y="319.5" ></text>
</g>
<g >
<title>operator new (1,616,214 samples, 0.02%)</title><rect x="1150.1" y="117" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.09" y="127.5" ></text>
</g>
<g >
<title>malloc (796,368 samples, 0.01%)</title><rect x="974.5" y="373" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="977.48" y="383.5" ></text>
</g>
<g >
<title>__common_interrupt (1,287,929 samples, 0.02%)</title><rect x="965.1" y="293" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="968.07" y="303.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,718,747 samples, 0.09%)</title><rect x="1083.5" y="309" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1086.45" y="319.5" ></text>
</g>
<g >
<title>decltype  (1,050,650 samples, 0.01%)</title><rect x="688.7" y="437" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="691.73" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,948,018 samples, 0.02%)</title><rect x="1161.8" y="261" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.82" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (800,880 samples, 0.01%)</title><rect x="1131.5" y="293" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1134.50" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,584,065 samples, 0.02%)</title><rect x="995.3" y="309" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="998.25" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (12,475,287 samples, 0.16%)</title><rect x="1140.9" y="437" width="1.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1143.91" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,372,601 samples, 0.06%)</title><rect x="1122.3" y="277" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1125.27" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,766,718 samples, 0.02%)</title><rect x="396.7" y="533" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="399.72" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,066,702 samples, 0.01%)</title><rect x="1127.3" y="149" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1130.30" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (8,902,343 samples, 0.11%)</title><rect x="383.4" y="501" width="1.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="386.39" y="511.5" ></text>
</g>
<g >
<title>decltype  (1,942,118 samples, 0.02%)</title><rect x="87.2" y="421" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="90.16" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,043,725 samples, 0.01%)</title><rect x="83.3" y="485" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="86.32" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,168,113 samples, 0.01%)</title><rect x="1088.8" y="341" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1091.82" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (2,449,015 samples, 0.03%)</title><rect x="95.2" y="501" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="98.21" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,476,656 samples, 0.06%)</title><rect x="399.3" y="501" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="402.29" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (16,248,362 samples, 0.21%)</title><rect x="920.3" y="293" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="923.26" y="303.5" ></text>
</g>
<g >
<title>choose_next_point (1,708,813,271 samples, 21.64%)</title><rect x="911.0" y="501" width="255.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="913.98" y="511.5" >choose_next_point</text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,599,600 samples, 0.02%)</title><rect x="919.0" y="389" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="921.98" y="399.5" ></text>
</g>
<g >
<title>__folio_end_writeback (765,820 samples, 0.01%)</title><rect x="965.1" y="133" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="968.13" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,840,773 samples, 0.05%)</title><rect x="701.1" y="469" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="704.12" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (1,454,873 samples, 0.02%)</title><rect x="1087.9" y="325" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1090.90" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,212,617 samples, 0.02%)</title><rect x="1117.3" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1120.26" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,663,554 samples, 0.03%)</title><rect x="935.5" y="373" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="938.48" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,190,423 samples, 0.02%)</title><rect x="735.0" y="485" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="737.98" y="495.5" ></text>
</g>
<g >
<title>operator new (1,332,061 samples, 0.02%)</title><rect x="984.7" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="987.73" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,416,771 samples, 0.07%)</title><rect x="412.4" y="453" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="415.37" y="463.5" ></text>
</g>
<g >
<title>decltype  (13,579,154 samples, 0.17%)</title><rect x="908.9" y="469" width="2.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="911.92" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,988,159 samples, 0.03%)</title><rect x="1101.8" y="181" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1104.80" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (163,538,163 samples, 2.07%)</title><rect x="1007.6" y="245" width="24.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1010.58" y="255.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (50,741,055 samples, 0.64%)</title><rect x="1059.3" y="309" width="7.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1062.35" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,034,970 samples, 0.01%)</title><rect x="1170.0" y="565" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1173.03" y="575.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,409,946 samples, 0.03%)</title><rect x="1050.6" y="165" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1053.63" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,997,895 samples, 0.03%)</title><rect x="696.0" y="501" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="699.03" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (118,483,061 samples, 1.50%)</title><rect x="972.6" y="389" width="17.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="975.55" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,465,001 samples, 0.03%)</title><rect x="436.4" y="485" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="439.37" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,269,104 samples, 0.03%)</title><rect x="1141.6" y="389" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1144.60" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (16,645,228 samples, 0.21%)</title><rect x="1056.3" y="213" width="2.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1059.35" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,277,761 samples, 0.14%)</title><rect x="978.2" y="277" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="981.17" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (806,224 samples, 0.01%)</title><rect x="1006.9" y="309" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1009.87" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (2,175,219 samples, 0.03%)</title><rect x="919.2" y="373" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="922.22" y="383.5" ></text>
</g>
<g >
<title>main (1,709,478,742 samples, 21.65%)</title><rect x="911.0" y="533" width="255.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="913.98" y="543.5" >main</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,677,043 samples, 0.08%)</title><rect x="845.1" y="453" width="1.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="848.14" y="463.5" ></text>
</g>
<g >
<title>malloc (264,229,558 samples, 3.35%)</title><rect x="739.9" y="565" width="39.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="742.95" y="575.5" >mal..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,827,186 samples, 0.05%)</title><rect x="1161.7" y="293" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1164.74" y="303.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,222,179 samples, 0.02%)</title><rect x="918.8" y="341" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="921.80" y="351.5" ></text>
</g>
<g >
<title>update_process_times (1,721,381 samples, 0.02%)</title><rect x="1101.8" y="149" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1104.84" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,280,739 samples, 0.03%)</title><rect x="187.8" y="533" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="190.79" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,835,553 samples, 0.04%)</title><rect x="79.6" y="485" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="82.63" y="495.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,485,032 samples, 0.07%)</title><rect x="688.9" y="485" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="691.89" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,960,456 samples, 0.02%)</title><rect x="1108.3" y="245" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1111.28" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,554,414 samples, 0.05%)</title><rect x="184.3" y="549" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="187.31" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (689,716 samples, 0.01%)</title><rect x="94.6" y="453" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="97.64" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (27,745,531 samples, 0.35%)</title><rect x="1035.1" y="213" width="4.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1038.10" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (777,830 samples, 0.01%)</title><rect x="590.8" y="485" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="593.83" y="495.5" ></text>
</g>
<g >
<title>choose_next_point (1,708,673,425 samples, 21.64%)</title><rect x="911.0" y="485" width="255.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="913.98" y="495.5" >choose_next_point</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,066,702 samples, 0.01%)</title><rect x="1127.3" y="133" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1130.30" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (62,463,459 samples, 0.79%)</title><rect x="180.9" y="565" width="9.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="183.92" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (2,804,827 samples, 0.04%)</title><rect x="396.3" y="501" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="399.30" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (39,691,618 samples, 0.50%)</title><rect x="920.2" y="325" width="6.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="923.23" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,753,575 samples, 0.02%)</title><rect x="1117.0" y="245" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1119.95" y="255.5" ></text>
</g>
<g >
<title>choose_next_point (1,706,814,366 samples, 21.61%)</title><rect x="911.0" y="469" width="255.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="913.98" y="479.5" >choose_next_point</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (38,569,503 samples, 0.49%)</title><rect x="584.1" y="453" width="5.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="587.06" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (12,398,313 samples, 0.16%)</title><rect x="1084.8" y="341" width="1.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1087.75" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (50,068,475 samples, 0.63%)</title><rect x="1059.4" y="213" width="7.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1062.41" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (953,735 samples, 0.01%)</title><rect x="1157.0" y="357" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1160.05" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,870,552 samples, 0.02%)</title><rect x="1183.9" y="565" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1186.91" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (65,989,145 samples, 0.84%)</title><rect x="1073.6" y="341" width="9.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1076.59" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,509,336 samples, 0.03%)</title><rect x="734.8" y="501" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="737.78" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,177,980 samples, 0.01%)</title><rect x="984.9" y="261" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="987.93" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,345,617 samples, 0.02%)</title><rect x="944.6" y="261" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="947.56" y="271.5" ></text>
</g>
<g >
<title>cfree (8,751,411 samples, 0.11%)</title><rect x="1117.5" y="261" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1120.46" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (163,538,163 samples, 2.07%)</title><rect x="1007.6" y="277" width="24.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1010.58" y="287.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (49,348,956 samples, 0.62%)</title><rect x="1146.7" y="373" width="7.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1149.72" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,699,441 samples, 0.02%)</title><rect x="1109.4" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1112.37" y="287.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,721,952 samples, 0.02%)</title><rect x="591.0" y="549" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="593.95" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (793,077 samples, 0.01%)</title><rect x="694.7" y="533" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="697.71" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2,119,523,748 samples, 26.84%)</title><rect x="594.3" y="581" width="316.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="597.27" y="591.5" >[unknown]</text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (674,333 samples, 0.01%)</title><rect x="1157.1" y="325" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1160.09" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (672,417 samples, 0.01%)</title><rect x="989.4" y="373" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="992.43" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (8,868,235 samples, 0.11%)</title><rect x="528.1" y="501" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="531.09" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,051,019 samples, 0.01%)</title><rect x="1066.7" y="117" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1069.71" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,334,626 samples, 0.02%)</title><rect x="954.1" y="309" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="957.12" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,055,319 samples, 0.03%)</title><rect x="965.3" y="245" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="968.33" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (14,324,273 samples, 0.18%)</title><rect x="514.2" y="533" width="2.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="517.23" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,304,251 samples, 0.03%)</title><rect x="1102.1" y="245" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1105.14" y="255.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (12,211,323 samples, 0.15%)</title><rect x="230.6" y="485" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="233.65" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,593,305 samples, 0.03%)</title><rect x="965.3" y="325" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="968.27" y="335.5" ></text>
</g>
<g >
<title>malloc (1,448,201 samples, 0.02%)</title><rect x="1061.4" y="197" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1064.39" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,998,933 samples, 0.05%)</title><rect x="1129.6" y="261" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1132.64" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (17,831,297 samples, 0.23%)</title><rect x="416.1" y="485" width="2.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="419.06" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,678,455 samples, 0.03%)</title><rect x="734.4" y="469" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="737.38" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,212,008 samples, 0.02%)</title><rect x="1033.2" y="261" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1036.25" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (130,292,534 samples, 1.65%)</title><rect x="516.4" y="549" width="19.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="519.37" y="559.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (66,160,990 samples, 0.84%)</title><rect x="674.4" y="469" width="9.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="677.39" y="479.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,870,552 samples, 0.02%)</title><rect x="1183.9" y="549" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1186.91" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,184,513 samples, 0.01%)</title><rect x="1136.6" y="261" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1139.58" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,242,808 samples, 0.08%)</title><rect x="1092.2" y="357" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1095.22" y="367.5" ></text>
</g>
<g >
<title>malloc (2,260,405 samples, 0.03%)</title><rect x="1161.1" y="293" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1164.11" y="303.5" ></text>
</g>
<g >
<title>decltype  (1,336,020 samples, 0.02%)</title><rect x="946.4" y="341" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="949.38" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,471,780 samples, 0.02%)</title><rect x="970.1" y="373" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="973.10" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,055,543 samples, 0.01%)</title><rect x="994.9" y="309" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="997.86" y="319.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,053,920 samples, 0.01%)</title><rect x="1058.8" y="261" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1061.83" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,709,478,742 samples, 21.65%)</title><rect x="911.0" y="549" width="255.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="913.98" y="559.5" >[libc.so.6]</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,766,583 samples, 0.02%)</title><rect x="701.8" y="485" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="704.77" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (918,220 samples, 0.01%)</title><rect x="846.8" y="453" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="849.78" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (809,137 samples, 0.01%)</title><rect x="925.9" y="277" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="928.94" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,140,748 samples, 0.19%)</title><rect x="1143.4" y="405" width="2.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1146.37" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (19,416,214 samples, 0.25%)</title><rect x="1142.8" y="437" width="2.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1145.78" y="447.5" ></text>
</g>
<g >
<title>choose_next_point (556,369,400 samples, 7.04%)</title><rect x="316.8" y="565" width="83.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="319.83" y="575.5" >choose_ne..</text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (2,391,607 samples, 0.03%)</title><rect x="1087.1" y="293" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1090.06" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (23,594,695 samples, 0.30%)</title><rect x="1028.4" y="165" width="3.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1031.35" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (8,470,626 samples, 0.11%)</title><rect x="80.4" y="517" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="83.35" y="527.5" ></text>
</g>
<g >
<title>cfree (199,166,127 samples, 2.52%)</title><rect x="628.7" y="565" width="29.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="631.73" y="575.5" >cf..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,309,202 samples, 0.03%)</title><rect x="701.7" y="501" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="704.69" y="511.5" ></text>
</g>
<g >
<title>[[stack]] (1,488,978,530 samples, 18.85%)</title><rect x="10.0" y="581" width="222.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[[stack]]</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,835,823 samples, 0.07%)</title><rect x="860.5" y="549" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="863.52" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (66,160,990 samples, 0.84%)</title><rect x="674.4" y="501" width="9.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="677.39" y="511.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,445,960 samples, 0.02%)</title><rect x="1146.2" y="373" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1149.16" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,753,575 samples, 0.02%)</title><rect x="1117.0" y="213" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1119.95" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (1,568,472 samples, 0.02%)</title><rect x="1088.3" y="357" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1091.34" y="367.5" ></text>
</g>
<g >
<title>operator new (3,747,913 samples, 0.05%)</title><rect x="1022.6" y="213" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1025.56" y="223.5" ></text>
</g>
<g >
<title>operator new (185,345,529 samples, 2.35%)</title><rect x="801.0" y="565" width="27.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="804.04" y="575.5" >o..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (1,331,041 samples, 0.02%)</title><rect x="436.9" y="501" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="439.87" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (7,294,343 samples, 0.09%)</title><rect x="1137.6" y="405" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1140.60" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (800,148 samples, 0.01%)</title><rect x="1067.3" y="165" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1070.34" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (12,631,138 samples, 0.16%)</title><rect x="987.4" y="213" width="1.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="990.45" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,471,093 samples, 0.02%)</title><rect x="1088.1" y="357" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1091.12" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,661,134 samples, 0.03%)</title><rect x="995.3" y="341" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="998.25" y="351.5" ></text>
</g>
<g >
<title>operator new (3,544,830 samples, 0.04%)</title><rect x="947.5" y="421" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="950.54" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,612,018 samples, 0.15%)</title><rect x="1158.2" y="341" width="1.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1161.22" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (673,676 samples, 0.01%)</title><rect x="1133.1" y="421" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1136.07" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (794,939 samples, 0.01%)</title><rect x="948.4" y="405" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="951.42" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,230,196 samples, 0.09%)</title><rect x="383.4" y="469" width="1.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="386.39" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (14,521,706 samples, 0.18%)</title><rect x="908.8" y="485" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="911.78" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,196,926 samples, 0.02%)</title><rect x="984.2" y="197" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="987.19" y="207.5" ></text>
</g>
<g >
<title>round@plt (2,793,523 samples, 0.04%)</title><rect x="828.7" y="565" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="831.73" y="575.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,062,668 samples, 0.03%)</title><rect x="1027.2" y="133" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1030.20" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,763,402 samples, 0.03%)</title><rect x="1104.0" y="165" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1106.96" y="175.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (27,363,560 samples, 0.35%)</title><rect x="700.0" y="517" width="4.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="703.00" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,205,960 samples, 0.02%)</title><rect x="594.1" y="533" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="597.09" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (802,477 samples, 0.01%)</title><rect x="1092.5" y="277" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1095.53" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,056,323 samples, 0.01%)</title><rect x="1122.8" y="245" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1125.76" y="255.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (15,284,710 samples, 0.19%)</title><rect x="85.2" y="517" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="88.20" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (673,553 samples, 0.01%)</title><rect x="970.0" y="357" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="972.98" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,340,282 samples, 0.02%)</title><rect x="1102.2" y="181" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1105.22" y="191.5" ></text>
</g>
<g >
<title>cfree (2,051,855 samples, 0.03%)</title><rect x="942.1" y="293" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="945.11" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,476,656 samples, 0.06%)</title><rect x="399.3" y="485" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="402.29" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (1,317,071 samples, 0.02%)</title><rect x="1087.9" y="309" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1090.92" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (3,035,465 samples, 0.04%)</title><rect x="81.8" y="517" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="84.76" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (785,181 samples, 0.01%)</title><rect x="1161.0" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1163.97" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (17,671,616 samples, 0.22%)</title><rect x="522.1" y="517" width="2.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="525.09" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,184,513 samples, 0.01%)</title><rect x="1136.6" y="293" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1139.58" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (1,437,340 samples, 0.02%)</title><rect x="946.2" y="357" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="949.17" y="367.5" ></text>
</g>
<g >
<title>operator delete (55,932,500 samples, 0.71%)</title><rect x="462.6" y="565" width="8.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="465.58" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (25,026,160 samples, 0.32%)</title><rect x="184.8" y="549" width="3.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="187.84" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,694,330 samples, 0.02%)</title><rect x="1108.3" y="197" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1111.28" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (106,912,754 samples, 1.35%)</title><rect x="854.9" y="565" width="15.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="857.87" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,068,651 samples, 0.01%)</title><rect x="95.0" y="469" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="98.02" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,607,473 samples, 0.02%)</title><rect x="94.8" y="501" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="97.78" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (43,237,823 samples, 0.55%)</title><rect x="226.0" y="533" width="6.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="229.01" y="543.5" ></text>
</g>
<g >
<title>gen_all_points (51,921,480 samples, 0.66%)</title><rect x="696.3" y="565" width="7.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="699.33" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (936,704 samples, 0.01%)</title><rect x="1117.3" y="181" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1120.28" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,763,402 samples, 0.03%)</title><rect x="1104.0" y="229" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1106.96" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,808,915 samples, 0.05%)</title><rect x="86.9" y="485" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="89.88" y="495.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,222,179 samples, 0.02%)</title><rect x="918.8" y="357" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="921.80" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,818,764 samples, 0.04%)</title><rect x="185.8" y="517" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="188.84" y="527.5" ></text>
</g>
<g >
<title>malloc (3,259,877 samples, 0.04%)</title><rect x="1148.9" y="229" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1151.91" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (34,172,111 samples, 0.43%)</title><rect x="535.8" y="549" width="5.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="538.83" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (26,941,831 samples, 0.34%)</title><rect x="941.0" y="325" width="4.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="943.96" y="335.5" ></text>
</g>
<g >
<title>choose_next_point (18,671,972 samples, 0.24%)</title><rect x="917.0" y="421" width="2.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="920.03" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (4,202,050 samples, 0.05%)</title><rect x="736.9" y="485" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="739.90" y="495.5" ></text>
</g>
<g >
<title>operator delete (119,551,606 samples, 1.51%)</title><rect x="127.2" y="565" width="17.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="130.23" y="575.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,576,676 samples, 0.02%)</title><rect x="1164.8" y="261" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1167.83" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,060,614 samples, 0.17%)</title><rect x="1056.9" y="101" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1059.86" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (1,585,726 samples, 0.02%)</title><rect x="550.3" y="533" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="553.28" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (4,964,307 samples, 0.06%)</title><rect x="1067.9" y="357" width="0.7" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1070.86" y="367.5" ></text>
</g>
<g >
<title>__mmput (832,571 samples, 0.01%)</title><rect x="1170.0" y="501" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1173.03" y="511.5" ></text>
</g>
<g >
<title>malloc (10,678,780 samples, 0.14%)</title><rect x="997.3" y="357" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1000.27" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,166,252 samples, 0.01%)</title><rect x="997.0" y="293" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1000.00" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,450,965 samples, 0.02%)</title><rect x="935.6" y="309" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="938.62" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (10,907,154 samples, 0.14%)</title><rect x="841.5" y="485" width="1.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="844.50" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,010,816 samples, 0.04%)</title><rect x="188.1" y="533" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="191.13" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (2,825,341 samples, 0.04%)</title><rect x="552.9" y="549" width="0.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="555.93" y="559.5" ></text>
</g>
<g >
<title>decltype  (2,165,585 samples, 0.03%)</title><rect x="418.7" y="485" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="421.73" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (3,297,322 samples, 0.04%)</title><rect x="93.7" y="533" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="96.72" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (794,939 samples, 0.01%)</title><rect x="948.4" y="389" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="951.42" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,453,799 samples, 0.03%)</title><rect x="965.3" y="293" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="968.29" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1,227,994 samples, 0.02%)</title><rect x="438.5" y="517" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="441.46" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (262,192,637 samples, 3.32%)</title><rect x="1093.6" y="389" width="39.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1096.58" y="399.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,829,900 samples, 0.11%)</title><rect x="532.5" y="533" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="535.45" y="543.5" ></text>
</g>
<g >
<title>operator new (2,701,932 samples, 0.03%)</title><rect x="1140.0" y="309" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1142.97" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,083,685 samples, 0.01%)</title><rect x="1129.5" y="261" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1132.48" y="271.5" ></text>
</g>
<g >
<title>cfree (672,742 samples, 0.01%)</title><rect x="1143.5" y="389" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1146.51" y="399.5" ></text>
</g>
<g >
<title>scheduler_tick (1,071,179 samples, 0.01%)</title><rect x="954.2" y="245" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="957.16" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (17,638,465 samples, 0.22%)</title><rect x="397.3" y="549" width="2.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="400.32" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (823,729 samples, 0.01%)</title><rect x="1137.4" y="213" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1140.37" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (943,904 samples, 0.01%)</title><rect x="1189.7" y="469" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1192.72" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (3,678,835 samples, 0.05%)</title><rect x="999.7" y="341" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1002.71" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (43,237,823 samples, 0.55%)</title><rect x="226.0" y="517" width="6.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="229.01" y="527.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (673,802 samples, 0.01%)</title><rect x="1085.9" y="293" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1088.86" y="303.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,336,020 samples, 0.02%)</title><rect x="946.4" y="357" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="949.38" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (1,462,150 samples, 0.02%)</title><rect x="1170.4" y="565" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1173.40" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (19,122,082 samples, 0.24%)</title><rect x="1150.5" y="341" width="2.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1153.51" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (33,219,941 samples, 0.42%)</title><rect x="564.1" y="565" width="4.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="567.08" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,753,400 samples, 0.02%)</title><rect x="1102.2" y="197" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1105.16" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,818,764 samples, 0.04%)</title><rect x="185.8" y="533" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="188.84" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,110,664 samples, 0.03%)</title><rect x="1066.1" y="69" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1069.06" y="79.5" ></text>
</g>
<g >
<title>update_process_times (797,370 samples, 0.01%)</title><rect x="1117.3" y="149" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1120.30" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,312,341 samples, 0.02%)</title><rect x="972.3" y="309" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="975.27" y="319.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,674,691 samples, 0.06%)</title><rect x="994.2" y="277" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="997.16" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,019,829 samples, 0.03%)</title><rect x="737.5" y="501" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="740.53" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,110,664 samples, 0.03%)</title><rect x="1066.1" y="117" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1069.06" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,935,725 samples, 0.06%)</title><rect x="846.9" y="517" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="849.94" y="527.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,860,797 samples, 0.04%)</title><rect x="1003.6" y="245" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1006.62" y="255.5" ></text>
</g>
<g >
<title>cfree (25,972,078 samples, 0.33%)</title><rect x="1123.6" y="261" width="3.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1126.58" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (798,246 samples, 0.01%)</title><rect x="1064.6" y="117" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1067.62" y="127.5" ></text>
</g>
<g >
<title>cfree (1,565,340 samples, 0.02%)</title><rect x="1144.7" y="277" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1147.75" y="287.5" ></text>
</g>
<g >
<title>malloc (16,997,637 samples, 0.22%)</title><rect x="981.8" y="261" width="2.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="984.83" y="271.5" ></text>
</g>
<g >
<title>cfree (7,571,121 samples, 0.10%)</title><rect x="1102.5" y="277" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1105.48" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (797,370 samples, 0.01%)</title><rect x="1117.3" y="165" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1120.30" y="175.5" ></text>
</g>
<g >
<title>cfree (1,579,545 samples, 0.02%)</title><rect x="1138.3" y="309" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1141.31" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (1,227,994 samples, 0.02%)</title><rect x="438.5" y="549" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="441.46" y="559.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (13,153,544 samples, 0.17%)</title><rect x="965.7" y="357" width="2.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="968.69" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,975,007 samples, 0.03%)</title><rect x="1165.4" y="357" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1168.38" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,212,617 samples, 0.02%)</title><rect x="1117.3" y="213" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1120.26" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (14,356,228 samples, 0.18%)</title><rect x="77.9" y="533" width="2.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="80.91" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (37,702,880 samples, 0.48%)</title><rect x="386.8" y="517" width="5.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="389.75" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (918,220 samples, 0.01%)</title><rect x="846.8" y="501" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="849.78" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,357,398 samples, 0.02%)</title><rect x="1117.0" y="149" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1119.99" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,263,457 samples, 0.03%)</title><rect x="1164.0" y="453" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1166.98" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (29,468,191 samples, 0.37%)</title><rect x="1133.2" y="421" width="4.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1136.17" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,409,946 samples, 0.03%)</title><rect x="1050.6" y="181" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1053.63" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (57,006,204 samples, 0.72%)</title><rect x="386.2" y="549" width="8.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="389.24" y="559.5" ></text>
</g>
<g >
<title>get_inbetween_points (117,321,673 samples, 1.49%)</title><rect x="929.7" y="421" width="17.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="932.71" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (823,729 samples, 0.01%)</title><rect x="1137.4" y="245" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1140.37" y="255.5" ></text>
</g>
<g >
<title>cfree (934,416 samples, 0.01%)</title><rect x="987.6" y="149" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="990.62" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (11,612,018 samples, 0.15%)</title><rect x="1158.2" y="389" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.22" y="399.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,053,920 samples, 0.01%)</title><rect x="1058.8" y="277" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1061.83" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (680,588 samples, 0.01%)</title><rect x="1153.9" y="197" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1156.91" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,154,112 samples, 0.04%)</title><rect x="1162.8" y="389" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1165.80" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (1,189,320 samples, 0.02%)</title><rect x="1163.3" y="437" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1166.27" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (38,855,502 samples, 0.49%)</title><rect x="190.3" y="565" width="5.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="193.25" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (163,538,163 samples, 2.07%)</title><rect x="1007.6" y="293" width="24.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1010.58" y="303.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (10,907,154 samples, 0.14%)</title><rect x="841.5" y="517" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="844.50" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,826,102 samples, 0.05%)</title><rect x="1130.4" y="277" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1133.38" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (800,320 samples, 0.01%)</title><rect x="1166.2" y="453" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1169.16" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (24,147,311 samples, 0.31%)</title><rect x="1028.4" y="197" width="3.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1031.35" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,006,699 samples, 0.03%)</title><rect x="1021.7" y="181" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1024.71" y="191.5" ></text>
</g>
<g >
<title>decltype  (1,722,747 samples, 0.02%)</title><rect x="1055.9" y="101" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1058.86" y="111.5" ></text>
</g>
<g >
<title>operator delete (2,675,457 samples, 0.03%)</title><rect x="1128.7" y="261" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1131.70" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (4,535,629 samples, 0.06%)</title><rect x="1000.3" y="341" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1003.26" y="351.5" ></text>
</g>
<g >
<title>all (7,897,567,866 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,040,927 samples, 0.05%)</title><rect x="1137.0" y="325" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1139.97" y="335.5" ></text>
</g>
<g >
<title>std::abs (1,087,146 samples, 0.01%)</title><rect x="939.4" y="389" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="942.35" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,051,019 samples, 0.01%)</title><rect x="1066.7" y="133" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1069.71" y="143.5" ></text>
</g>
<g >
<title>cfree (1,346,836 samples, 0.02%)</title><rect x="1102.7" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1105.68" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (128,274,935 samples, 1.62%)</title><rect x="544.1" y="565" width="19.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="547.14" y="575.5" ></text>
</g>
<g >
<title>cfree (1,846,017 samples, 0.02%)</title><rect x="942.9" y="277" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="945.91" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (2,449,015 samples, 0.03%)</title><rect x="95.2" y="549" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="98.21" y="559.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,672,147 samples, 0.02%)</title><rect x="384.5" y="469" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="387.47" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,981,648 samples, 0.03%)</title><rect x="435.4" y="485" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="438.40" y="495.5" ></text>
</g>
<g >
<title>decltype  (1,053,920 samples, 0.01%)</title><rect x="1058.8" y="245" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1061.83" y="255.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,195,115 samples, 0.05%)</title><rect x="918.2" y="325" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="921.17" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,680,868 samples, 0.07%)</title><rect x="688.0" y="501" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="691.04" y="511.5" ></text>
</g>
<g >
<title>task_tick_fair (675,336 samples, 0.01%)</title><rect x="1117.1" y="101" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1120.06" y="111.5" ></text>
</g>
<g >
<title>operator new (5,403,337 samples, 0.07%)</title><rect x="1117.9" y="245" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1120.86" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,017,221 samples, 0.06%)</title><rect x="1026.5" y="117" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1029.45" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,818,764 samples, 0.04%)</title><rect x="185.8" y="501" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="188.84" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (936,107 samples, 0.01%)</title><rect x="944.6" y="245" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="947.62" y="255.5" ></text>
</g>
<g >
<title>operator delete (8,792,565 samples, 0.11%)</title><rect x="974.6" y="373" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="977.60" y="383.5" ></text>
</g>
<g >
<title>malloc (687,210 samples, 0.01%)</title><rect x="1145.0" y="277" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1147.98" y="287.5" ></text>
</g>
<g >
<title>cfree (1,029,951 samples, 0.01%)</title><rect x="1033.4" y="325" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1036.45" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,776,813 samples, 0.02%)</title><rect x="1165.7" y="405" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1168.68" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (779,582 samples, 0.01%)</title><rect x="986.0" y="245" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="989.04" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,161,149 samples, 0.03%)</title><rect x="1150.0" y="133" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1153.01" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,066,702 samples, 0.01%)</title><rect x="1127.3" y="229" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1130.30" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (50,334,250 samples, 0.64%)</title><rect x="1059.4" y="293" width="7.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1062.41" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,680,868 samples, 0.07%)</title><rect x="688.0" y="485" width="0.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="691.04" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (8,535,964 samples, 0.11%)</title><rect x="76.6" y="517" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="79.63" y="527.5" ></text>
</g>
<g >
<title>cfree (2,245,374 samples, 0.03%)</title><rect x="1148.6" y="229" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1151.56" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (22,176,128 samples, 0.28%)</title><rect x="926.2" y="357" width="3.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="929.16" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,602,936 samples, 0.02%)</title><rect x="954.1" y="325" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="957.12" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (1,186,045 samples, 0.02%)</title><rect x="935.7" y="277" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="938.66" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (7,881,977 samples, 0.10%)</title><rect x="1086.7" y="341" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1089.68" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,826,102 samples, 0.05%)</title><rect x="1130.4" y="325" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1133.38" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (8,281,373 samples, 0.10%)</title><rect x="996.0" y="325" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="998.99" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (916,245 samples, 0.01%)</title><rect x="1021.9" y="69" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1024.85" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,273,235 samples, 0.12%)</title><rect x="985.5" y="261" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="988.45" y="271.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (6,736,472 samples, 0.09%)</title><rect x="589.8" y="485" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="592.82" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (77,141,386 samples, 0.98%)</title><rect x="977.8" y="341" width="11.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="980.85" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (2,119,953 samples, 0.03%)</title><rect x="862.9" y="549" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="865.88" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (161,664,228 samples, 2.05%)</title><rect x="1034.8" y="293" width="24.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1037.84" y="303.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,424,237 samples, 0.04%)</title><rect x="1067.0" y="277" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1069.97" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (13,060,614 samples, 0.17%)</title><rect x="1056.9" y="165" width="1.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1059.86" y="175.5" ></text>
</g>
<g >
<title>operator new (812,875 samples, 0.01%)</title><rect x="1164.9" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1167.95" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,062,496 samples, 0.01%)</title><rect x="1145.4" y="213" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1148.38" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (95,502,364 samples, 1.21%)</title><rect x="1094.3" y="373" width="14.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1097.30" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (1,227,994 samples, 0.02%)</title><rect x="438.5" y="501" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="441.46" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,547,050 samples, 0.03%)</title><rect x="85.9" y="485" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="88.90" y="495.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (780,195 samples, 0.01%)</title><rect x="871.8" y="533" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="874.84" y="543.5" ></text>
</g>
<g >
<title>cfree (4,046,624 samples, 0.05%)</title><rect x="1126.5" y="245" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1129.46" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (11,678,639 samples, 0.15%)</title><rect x="735.2" y="501" width="1.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="738.16" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (4,818,160 samples, 0.06%)</title><rect x="1169.0" y="565" width="0.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1171.98" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (3,219,446 samples, 0.04%)</title><rect x="86.4" y="501" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="89.40" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (7,536,185 samples, 0.10%)</title><rect x="702.9" y="501" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="705.86" y="511.5" ></text>
</g>
<g >
<title>is_close_int (1,335,990 samples, 0.02%)</title><rect x="1157.7" y="389" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1160.69" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (21,279,794 samples, 0.27%)</title><rect x="727.8" y="533" width="3.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="730.82" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,141,711 samples, 0.03%)</title><rect x="739.6" y="549" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="742.63" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,997,895 samples, 0.03%)</title><rect x="696.0" y="485" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="699.03" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,394,132 samples, 0.09%)</title><rect x="1055.0" y="149" width="1.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1058.02" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (522,101,021 samples, 6.61%)</title><rect x="990.6" y="405" width="78.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="993.59" y="415.5" >std::_Rb_..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (3,969,968 samples, 0.05%)</title><rect x="392.4" y="517" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="395.38" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (964,079 samples, 0.01%)</title><rect x="919.3" y="341" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="922.28" y="351.5" ></text>
</g>
<g >
<title>cfree (1,039,094 samples, 0.01%)</title><rect x="1165.7" y="309" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1168.68" y="319.5" ></text>
</g>
<g >
<title>update_process_times (1,450,965 samples, 0.02%)</title><rect x="935.6" y="293" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="938.62" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (775,090 samples, 0.01%)</title><rect x="1146.2" y="293" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1149.22" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,062,496 samples, 0.01%)</title><rect x="1145.4" y="197" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1148.38" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (953,591 samples, 0.01%)</title><rect x="1132.6" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1135.61" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (19,226,466 samples, 0.24%)</title><rect x="690.0" y="517" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="692.97" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,303,824 samples, 0.04%)</title><rect x="593.8" y="565" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="596.77" y="575.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (917,987 samples, 0.01%)</title><rect x="1004.2" y="245" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1007.21" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (831,231 samples, 0.01%)</title><rect x="919.4" y="325" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="922.42" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (77,533,070 samples, 0.98%)</title><rect x="977.8" y="357" width="11.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="980.85" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,489,022 samples, 0.06%)</title><rect x="1076.1" y="325" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1079.09" y="335.5" ></text>
</g>
<g >
<title>malloc (1,332,470 samples, 0.02%)</title><rect x="1028.9" y="101" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1031.90" y="111.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (4,874,016 samples, 0.06%)</title><rect x="1003.4" y="325" width="0.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1006.38" y="335.5" ></text>
</g>
<g >
<title>clone_endio (1,017,684 samples, 0.01%)</title><rect x="965.1" y="197" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="968.09" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (1,080,931 samples, 0.01%)</title><rect x="1117.0" y="117" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1120.04" y="127.5" ></text>
</g>
<g >
<title>operator new (13,713,500 samples, 0.17%)</title><rect x="942.7" y="293" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="945.71" y="303.5" ></text>
</g>
<g >
<title>malloc (14,334,282 samples, 0.18%)</title><rect x="1171.4" y="581" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1174.42" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,028,522 samples, 0.03%)</title><rect x="1088.7" y="373" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1091.69" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,029,006 samples, 0.08%)</title><rect x="1150.6" y="229" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.59" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,442,108 samples, 0.02%)</title><rect x="1004.1" y="293" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1007.13" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,391,340 samples, 0.03%)</title><rect x="1101.7" y="261" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1104.74" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (896,973 samples, 0.01%)</title><rect x="1159.8" y="293" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1162.83" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (56,303,073 samples, 0.71%)</title><rect x="1145.7" y="405" width="8.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1148.68" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,409,984 samples, 0.07%)</title><rect x="1055.0" y="133" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1058.02" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,334,626 samples, 0.02%)</title><rect x="954.1" y="293" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="957.12" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,485,702 samples, 0.26%)</title><rect x="591.2" y="581" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="594.21" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (803,801 samples, 0.01%)</title><rect x="1144.1" y="389" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1147.07" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (513,065,280 samples, 6.50%)</title><rect x="990.8" y="389" width="76.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="993.82" y="399.5" >std::_Rb..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (10,692,239 samples, 0.14%)</title><rect x="410.5" y="501" width="1.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="413.51" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (800,896 samples, 0.01%)</title><rect x="1093.0" y="325" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1095.99" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,182,777 samples, 0.01%)</title><rect x="948.1" y="421" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="951.09" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (7,331,791 samples, 0.09%)</title><rect x="437.4" y="517" width="1.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="440.37" y="527.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (953,591 samples, 0.01%)</title><rect x="1132.6" y="341" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1135.61" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,686,699 samples, 0.10%)</title><rect x="588.6" y="325" width="1.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="591.63" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (953,735 samples, 0.01%)</title><rect x="1157.0" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.05" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,384,921 samples, 0.18%)</title><rect x="1124.2" y="245" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1127.22" y="255.5" ></text>
</g>
<g >
<title>gen_all_points (2,796,316 samples, 0.04%)</title><rect x="1170.2" y="581" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1173.20" y="591.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (9,778,167 samples, 0.12%)</title><rect x="410.7" y="469" width="1.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="413.65" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,729,656 samples, 0.02%)</title><rect x="1021.8" y="149" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1024.75" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,371,967 samples, 0.04%)</title><rect x="926.2" y="293" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="929.18" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,093,649 samples, 0.08%)</title><rect x="1147.4" y="245" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1150.35" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (949,729 samples, 0.01%)</title><rect x="1056.2" y="213" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1059.20" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (31,026,500 samples, 0.39%)</title><rect x="226.0" y="485" width="4.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="229.01" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (812,733 samples, 0.01%)</title><rect x="594.1" y="469" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="597.09" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,712,767 samples, 0.02%)</title><rect x="82.2" y="533" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="85.21" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,154,112 samples, 0.04%)</title><rect x="1162.8" y="373" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1165.80" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,068,651 samples, 0.01%)</title><rect x="95.0" y="485" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="98.02" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,093,851 samples, 0.03%)</title><rect x="187.2" y="517" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="190.16" y="527.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,736,472 samples, 0.09%)</title><rect x="589.8" y="501" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="592.82" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,626,807 samples, 0.02%)</title><rect x="1117.0" y="181" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1119.95" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (56,806,822 samples, 0.72%)</title><rect x="1059.0" y="325" width="8.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1061.99" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (13,060,614 samples, 0.17%)</title><rect x="1056.9" y="149" width="1.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1059.86" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (6,677,043 samples, 0.08%)</title><rect x="845.1" y="501" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="848.14" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,251,988 samples, 0.03%)</title><rect x="1122.6" y="261" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1125.58" y="271.5" ></text>
</g>
<g >
<title>cfree (2,008,329 samples, 0.03%)</title><rect x="1012.8" y="229" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1015.82" y="239.5" ></text>
</g>
<g >
<title>update_process_times (931,715 samples, 0.01%)</title><rect x="984.2" y="133" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="987.21" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (14,324,273 samples, 0.18%)</title><rect x="514.2" y="485" width="2.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="517.23" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,455,078 samples, 0.02%)</title><rect x="1161.5" y="293" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1164.48" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,686,699 samples, 0.10%)</title><rect x="588.6" y="405" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="591.63" y="415.5" ></text>
</g>
<g >
<title>operator delete (3,074,244 samples, 0.04%)</title><rect x="1121.1" y="277" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1124.15" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (318,683,418 samples, 4.04%)</title><rect x="332.2" y="533" width="47.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="335.25" y="543.5" >std:..</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (22,176,128 samples, 0.28%)</title><rect x="926.2" y="325" width="3.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="929.16" y="335.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (64,491,541 samples, 0.82%)</title><rect x="920.1" y="373" width="9.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="923.07" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,123,353 samples, 0.03%)</title><rect x="935.5" y="325" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="938.52" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (188,293,498 samples, 2.38%)</title><rect x="10.0" y="565" width="28.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >[..</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,190,423 samples, 0.02%)</title><rect x="735.0" y="469" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="737.98" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (3,865,357 samples, 0.05%)</title><rect x="946.6" y="357" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="949.58" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (38,569,503 samples, 0.49%)</title><rect x="584.1" y="501" width="5.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="587.06" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (2,804,827 samples, 0.04%)</title><rect x="396.3" y="517" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="399.30" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (45,305,975 samples, 0.57%)</title><rect x="584.1" y="517" width="6.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="587.06" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,110,734 samples, 0.03%)</title><rect x="702.5" y="485" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="705.45" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (19,282,449 samples, 0.24%)</title><rect x="413.2" y="501" width="2.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="416.18" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,523,248 samples, 0.03%)</title><rect x="1138.3" y="325" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1141.27" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (42,686,807 samples, 0.54%)</title><rect x="379.9" y="533" width="6.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="382.86" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,104,211 samples, 0.08%)</title><rect x="847.9" y="533" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="850.93" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,380,312 samples, 0.03%)</title><rect x="1164.5" y="277" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1167.48" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (931,814 samples, 0.01%)</title><rect x="1140.4" y="357" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1143.39" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,815,452 samples, 0.04%)</title><rect x="919.2" y="389" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="922.22" y="399.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (2,392,186 samples, 0.03%)</title><rect x="563.7" y="549" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="566.67" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (787,558 samples, 0.01%)</title><rect x="86.3" y="501" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="89.28" y="511.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,292,951 samples, 0.05%)</title><rect x="1086.0" y="309" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1088.96" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,200,972 samples, 0.02%)</title><rect x="954.1" y="277" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="957.14" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,827,186 samples, 0.05%)</title><rect x="1161.7" y="341" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1164.74" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (33,092,914 samples, 0.42%)</title><rect x="903.8" y="469" width="5.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="906.84" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,504,248 samples, 0.06%)</title><rect x="1137.6" y="341" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1140.60" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (1,568,472 samples, 0.02%)</title><rect x="1088.3" y="373" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1091.34" y="383.5" ></text>
</g>
<g >
<title>operator delete (1,359,623 samples, 0.02%)</title><rect x="939.5" y="405" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="942.53" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (777,830 samples, 0.01%)</title><rect x="590.8" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.83" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (104,230,550 samples, 1.32%)</title><rect x="950.1" y="389" width="15.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="953.12" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (7,813,986 samples, 0.10%)</title><rect x="954.4" y="373" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="957.42" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (831,231 samples, 0.01%)</title><rect x="919.4" y="341" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="922.42" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,835,553 samples, 0.04%)</title><rect x="79.6" y="469" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="82.63" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,763,402 samples, 0.03%)</title><rect x="1104.0" y="245" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1106.96" y="255.5" ></text>
</g>
<g >
<title>task_tick_fair (964,185 samples, 0.01%)</title><rect x="1102.3" y="133" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1105.26" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (3,980,029 samples, 0.05%)</title><rect x="394.8" y="533" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="397.76" y="543.5" ></text>
</g>
<g >
<title>get_inbetween_points (239,988,350 samples, 3.04%)</title><rect x="704.1" y="565" width="35.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="707.09" y="575.5" >get..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (58,427,246 samples, 0.74%)</title><rect x="582.1" y="549" width="8.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="585.10" y="559.5" ></text>
</g>
<g >
<title>scheduler_tick (1,084,948 samples, 0.01%)</title><rect x="1102.3" y="149" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1105.26" y="159.5" ></text>
</g>
<g >
<title>choose_next_point (1,708,813,271 samples, 21.64%)</title><rect x="911.0" y="517" width="255.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="913.98" y="527.5" >choose_next_point</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (12,036,643 samples, 0.15%)</title><rect x="737.8" y="501" width="1.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="740.83" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,622,458 samples, 0.02%)</title><rect x="939.0" y="373" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="941.97" y="383.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,470,303 samples, 0.02%)</title><rect x="1004.6" y="341" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1007.60" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,222,179 samples, 0.02%)</title><rect x="918.8" y="373" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="921.80" y="383.5" ></text>
</g>
<g >
<title>choose_next_point (1,688,039,230 samples, 21.37%)</title><rect x="911.1" y="453" width="252.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="914.06" y="463.5" >choose_next_point</text>
</g>
<g >
<title>hrtimer_interrupt (2,453,799 samples, 0.03%)</title><rect x="965.3" y="277" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="968.29" y="287.5" ></text>
</g>
<g >
<title>cfree (1,677,556 samples, 0.02%)</title><rect x="592.2" y="565" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="595.17" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (9,380,226 samples, 0.12%)</title><rect x="836.9" y="549" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="839.91" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,320,592 samples, 0.02%)</title><rect x="187.0" y="469" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="189.96" y="479.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (811,759 samples, 0.01%)</title><rect x="977.7" y="357" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="980.73" y="367.5" ></text>
</g>
<g >
<title>operator delete (1,312,309 samples, 0.02%)</title><rect x="1135.8" y="325" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1138.84" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,028,522 samples, 0.03%)</title><rect x="1088.7" y="357" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1091.69" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (18,262,020 samples, 0.23%)</title><rect x="850.2" y="549" width="2.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="853.18" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (54,937,161 samples, 0.70%)</title><rect x="1122.9" y="357" width="8.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1125.92" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,073,481 samples, 0.01%)</title><rect x="1164.2" y="405" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1167.16" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,843,964 samples, 0.10%)</title><rect x="971.3" y="373" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="974.30" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (2,449,015 samples, 0.03%)</title><rect x="95.2" y="517" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="98.21" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,490,864 samples, 0.03%)</title><rect x="1189.6" y="565" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1192.63" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,184,513 samples, 0.01%)</title><rect x="1136.6" y="325" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1139.58" y="335.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,674,691 samples, 0.06%)</title><rect x="994.2" y="261" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="997.16" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (917,987 samples, 0.01%)</title><rect x="1004.2" y="277" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1007.21" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,075,193 samples, 0.01%)</title><rect x="939.1" y="341" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="942.05" y="351.5" ></text>
</g>
<g >
<title>cfree (2,350,079 samples, 0.03%)</title><rect x="1161.8" y="277" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1164.80" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,380,312 samples, 0.03%)</title><rect x="1164.5" y="341" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1167.48" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (10,245,741 samples, 0.13%)</title><rect x="186.3" y="533" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="189.26" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (894,974 samples, 0.01%)</title><rect x="1169.7" y="549" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1172.70" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (4,263,267 samples, 0.05%)</title><rect x="736.0" y="485" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="738.96" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (22,176,128 samples, 0.28%)</title><rect x="926.2" y="309" width="3.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="929.16" y="319.5" ></text>
</g>
<g >
<title>attempt7_cpp (7,897,567,604 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >attempt7_cpp</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,960,456 samples, 0.02%)</title><rect x="1108.3" y="261" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1111.28" y="271.5" ></text>
</g>
<g >
<title>gen_all_points (7,415,903 samples, 0.09%)</title><rect x="1137.6" y="437" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1140.58" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,866,527 samples, 0.02%)</title><rect x="692.8" y="517" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="695.84" y="527.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (67,624,197 samples, 0.86%)</title><rect x="955.6" y="341" width="10.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="958.59" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,890,374 samples, 0.02%)</title><rect x="193.2" y="549" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="196.21" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,075,193 samples, 0.01%)</title><rect x="939.1" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="942.05" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (23,931,369 samples, 0.30%)</title><rect x="686.1" y="549" width="3.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="689.13" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (21,875,903 samples, 0.28%)</title><rect x="434.1" y="533" width="3.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="437.10" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,549,681 samples, 0.07%)</title><rect x="588.6" y="309" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="591.63" y="319.5" ></text>
</g>
<g >
<title>cfree (1,836,680 samples, 0.02%)</title><rect x="1162.8" y="341" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1165.82" y="351.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,211,323 samples, 0.15%)</title><rect x="230.6" y="501" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="233.65" y="511.5" ></text>
</g>
<g >
<title>malloc (1,325,507 samples, 0.02%)</title><rect x="947.2" y="421" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="950.24" y="431.5" ></text>
</g>
</g>
</svg>
