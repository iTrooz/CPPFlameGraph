<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>[libc.so.6] (9,062,940 samples, 0.04%)</title><rect x="1158.0" y="229" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1160.96" y="239.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (17,586,410 samples, 0.07%)</title><rect x="69.5" y="437" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="72.45" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;Call&gt;::deallocate (2,379,100 samples, 0.01%)</title><rect x="352.9" y="437" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="355.91" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,032,181 samples, 0.01%)</title><rect x="1153.4" y="149" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1156.39" y="159.5" ></text>
</g>
<g >
<title>malloc (4,860,160 samples, 0.02%)</title><rect x="1155.0" y="373" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1157.96" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (8,798,130 samples, 0.04%)</title><rect x="1096.8" y="245" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1099.79" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,575,542 samples, 0.01%)</title><rect x="1073.3" y="181" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1076.33" y="191.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (28,466,499 samples, 0.12%)</title><rect x="1033.7" y="357" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1036.75" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,155,586 samples, 0.02%)</title><rect x="1049.8" y="213" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1052.78" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (290,172,757 samples, 1.22%)</title><rect x="1063.3" y="293" width="14.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1066.28" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,320,067 samples, 0.01%)</title><rect x="1030.8" y="389" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1033.83" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (3,003,374 samples, 0.01%)</title><rect x="1056.8" y="165" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1059.76" y="175.5" ></text>
</g>
<g >
<title>malloc (58,022,540 samples, 0.24%)</title><rect x="1081.0" y="165" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1084.00" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (20,609,820 samples, 0.09%)</title><rect x="745.8" y="453" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="748.81" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (22,508,857 samples, 0.09%)</title><rect x="1156.7" y="341" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1159.67" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (2,974,198 samples, 0.01%)</title><rect x="72.1" y="469" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="75.13" y="479.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (2,791,853 samples, 0.01%)</title><rect x="1180.2" y="533" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1183.18" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,698,357 samples, 0.04%)</title><rect x="1169.4" y="261" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1172.37" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_pop_back_aux (9,765,062 samples, 0.04%)</title><rect x="747.6" y="485" width="0.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="750.64" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (332,589,247 samples, 1.39%)</title><rect x="593.7" y="517" width="16.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="596.74" y="527.5" ></text>
</g>
<g >
<title>malloc (22,580,777 samples, 0.09%)</title><rect x="976.2" y="229" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="979.23" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (2,330,940 samples, 0.01%)</title><rect x="630.5" y="517" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="633.53" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (6,418,909 samples, 0.03%)</title><rect x="1052.2" y="357" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1055.21" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (31,281,941 samples, 0.13%)</title><rect x="1086.0" y="181" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1088.97" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (9,289,851 samples, 0.04%)</title><rect x="1085.3" y="69" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1088.28" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (85,215,669 samples, 0.36%)</title><rect x="1121.9" y="421" width="4.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1124.89" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,217,538 samples, 0.03%)</title><rect x="999.5" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1002.55" y="255.5" ></text>
</g>
<g >
<title>cfree (3,239,470 samples, 0.01%)</title><rect x="979.6" y="213" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="982.61" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (11,346,251 samples, 0.05%)</title><rect x="295.4" y="357" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="298.41" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,126,424 samples, 0.02%)</title><rect x="644.5" y="453" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="647.47" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,588,928 samples, 0.02%)</title><rect x="1177.1" y="213" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1180.09" y="223.5" ></text>
</g>
<g >
<title>operator new (7,488,265 samples, 0.03%)</title><rect x="1091.6" y="357" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1094.64" y="367.5" ></text>
</g>
<g >
<title>Call::~Call (936,815,423 samples, 3.93%)</title><rect x="980.5" y="485" width="46.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="983.46" y="495.5" >Call..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,263,145 samples, 0.01%)</title><rect x="1060.1" y="325" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1063.05" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,246,046 samples, 0.01%)</title><rect x="245.1" y="421" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="248.13" y="431.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (442,821,656 samples, 1.86%)</title><rect x="1155.9" y="485" width="21.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1158.93" y="495.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (19,351,581 samples, 0.08%)</title><rect x="1084.9" y="149" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1087.93" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (63,672,936 samples, 0.27%)</title><rect x="294.6" y="437" width="3.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="297.59" y="447.5" ></text>
</g>
<g >
<title>end_bio_extent_writepage (4,577,220 samples, 0.02%)</title><rect x="1109.7" y="149" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1112.65" y="159.5" ></text>
</g>
<g >
<title>common_interrupt (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="437" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1109.38" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (4,187,890 samples, 0.02%)</title><rect x="1111.0" y="421" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1113.96" y="431.5" ></text>
</g>
<g >
<title>decltype (29,841,328 samples, 0.13%)</title><rect x="1030.9" y="405" width="1.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1033.95" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (8,811,950 samples, 0.04%)</title><rect x="244.4" y="485" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="247.38" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,058,032 samples, 0.01%)</title><rect x="996.8" y="213" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="999.76" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (9,233,859 samples, 0.04%)</title><rect x="681.6" y="453" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="684.56" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,697,928 samples, 0.02%)</title><rect x="1052.0" y="277" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1054.98" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (28,353,492 samples, 0.12%)</title><rect x="843.2" y="501" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="846.16" y="511.5" ></text>
</g>
<g >
<title>decltype  (10,177,310 samples, 0.04%)</title><rect x="1056.4" y="261" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1059.40" y="271.5" ></text>
</g>
<g >
<title>update_process_times (2,058,032 samples, 0.01%)</title><rect x="996.8" y="197" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="999.76" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;Call&gt;::deallocate (2,081,995 samples, 0.01%)</title><rect x="747.7" y="421" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="750.69" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (3,413,858 samples, 0.01%)</title><rect x="505.4" y="485" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="508.44" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,696,811 samples, 0.03%)</title><rect x="157.8" y="421" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="160.82" y="431.5" ></text>
</g>
<g >
<title>cfree (14,542,126 samples, 0.06%)</title><rect x="1145.8" y="245" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1148.83" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (7,384,403 samples, 0.03%)</title><rect x="292.4" y="485" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="295.43" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (2,096,990 samples, 0.01%)</title><rect x="1058.6" y="245" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1061.61" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5,146,657 samples, 0.02%)</title><rect x="927.4" y="197" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="930.38" y="207.5" ></text>
</g>
<g >
<title>operator new (95,580,306 samples, 0.40%)</title><rect x="1145.6" y="261" width="4.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1148.58" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (23,649,601 samples, 0.10%)</title><rect x="716.1" y="421" width="1.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="719.06" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (54,213,790 samples, 0.23%)</title><rect x="1156.4" y="389" width="2.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1159.42" y="399.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (8,813,457 samples, 0.04%)</title><rect x="328.8" y="421" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="331.77" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (4,379,863 samples, 0.02%)</title><rect x="716.4" y="357" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="719.38" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,740,400 samples, 0.01%)</title><rect x="1176.9" y="133" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1179.87" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,166,340 samples, 0.03%)</title><rect x="1091.0" y="213" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1094.02" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (26,558,413 samples, 0.11%)</title><rect x="350.5" y="437" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="353.53" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (35,280,969 samples, 0.15%)</title><rect x="1142.8" y="261" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.76" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (91,084,858 samples, 0.38%)</title><rect x="339.6" y="469" width="4.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="342.57" y="479.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::size (19,705,244 samples, 0.08%)</title><rect x="749.7" y="517" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="752.70" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (25,326,863 samples, 0.11%)</title><rect x="641.9" y="421" width="1.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="644.86" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (47,227,172 samples, 0.20%)</title><rect x="78.9" y="485" width="2.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="81.87" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (476,643,658 samples, 2.00%)</title><rect x="1130.4" y="405" width="23.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1133.41" y="415.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (36,908,684 samples, 0.15%)</title><rect x="899.2" y="357" width="1.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="902.23" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,344,723 samples, 0.02%)</title><rect x="627.1" y="421" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="630.08" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (9,289,851 samples, 0.04%)</title><rect x="1085.3" y="101" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1088.28" y="111.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (44,356,339 samples, 0.19%)</title><rect x="624.3" y="501" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="627.25" y="511.5" ></text>
</g>
<g >
<title>std::operator- (9,507,366 samples, 0.04%)</title><rect x="84.1" y="485" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="87.08" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (135,265,699 samples, 0.57%)</title><rect x="1111.5" y="453" width="6.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1114.52" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,032,181 samples, 0.01%)</title><rect x="1153.4" y="117" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1156.39" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,326,159 samples, 0.01%)</title><rect x="1052.3" y="181" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1055.28" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,418,909 samples, 0.03%)</title><rect x="1052.2" y="293" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1055.21" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,587,036 samples, 0.02%)</title><rect x="978.7" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="981.74" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (22,615,486 samples, 0.09%)</title><rect x="615.2" y="501" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="618.17" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (61,468,428 samples, 0.26%)</title><rect x="1032.4" y="389" width="3.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1035.42" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,588,928 samples, 0.02%)</title><rect x="1177.1" y="117" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1180.09" y="127.5" ></text>
</g>
<g >
<title>cfree (3,944,416 samples, 0.02%)</title><rect x="1158.7" y="229" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1161.65" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (20,609,820 samples, 0.09%)</title><rect x="745.8" y="437" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="748.81" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (155,874,408 samples, 0.65%)</title><rect x="1169.9" y="357" width="7.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1172.85" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,858,584 samples, 0.04%)</title><rect x="1126.6" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1129.58" y="415.5" ></text>
</g>
<g >
<title>decltype (99,777,021 samples, 0.42%)</title><rect x="292.8" y="517" width="4.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="295.80" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (15,754,779 samples, 0.07%)</title><rect x="148.5" y="517" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="151.46" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,914,268 samples, 0.02%)</title><rect x="82.7" y="453" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="85.68" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (164,300,633 samples, 0.69%)</title><rect x="970.9" y="341" width="8.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="973.93" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,259,971 samples, 0.01%)</title><rect x="70.3" y="453" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="73.32" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (10,177,310 samples, 0.04%)</title><rect x="1056.4" y="277" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1059.40" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,376,419 samples, 0.02%)</title><rect x="1157.5" y="181" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1160.47" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,864,545 samples, 0.06%)</title><rect x="509.8" y="517" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="512.78" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (34,678,321 samples, 0.15%)</title><rect x="1084.2" y="165" width="1.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1087.17" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (46,199,854 samples, 0.19%)</title><rect x="542.3" y="501" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="545.31" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (54,213,790 samples, 0.23%)</title><rect x="1156.4" y="437" width="2.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1159.42" y="447.5" ></text>
</g>
<g >
<title>cfree (86,861,471 samples, 0.36%)</title><rect x="1160.9" y="277" width="4.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1163.91" y="287.5" ></text>
</g>
<g >
<title>Call::~Call (122,867,326 samples, 0.52%)</title><rect x="346.6" y="517" width="6.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="349.58" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (9,344,189 samples, 0.04%)</title><rect x="736.4" y="485" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="739.36" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,797,745 samples, 0.02%)</title><rect x="1090.5" y="101" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1093.48" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (18,063,065 samples, 0.08%)</title><rect x="1031.5" y="309" width="0.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1034.53" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (183,267,075 samples, 0.77%)</title><rect x="1078.6" y="229" width="9.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1081.63" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,183,892 samples, 0.02%)</title><rect x="984.6" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="987.59" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,055,255 samples, 0.01%)</title><rect x="546.7" y="421" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="549.68" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (25,326,863 samples, 0.11%)</title><rect x="641.9" y="437" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="644.86" y="447.5" ></text>
</g>
<g >
<title>operator new (29,818,251 samples, 0.13%)</title><rect x="1093.5" y="181" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1096.52" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,073,658 samples, 0.02%)</title><rect x="82.4" y="437" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="85.43" y="447.5" ></text>
</g>
<g >
<title>operator new (6,028,857 samples, 0.03%)</title><rect x="1172.3" y="117" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1175.35" y="127.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (85,978,463 samples, 0.36%)</title><rect x="616.7" y="501" width="4.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="619.69" y="511.5" ></text>
</g>
<g >
<title>malloc (2,759,260 samples, 0.01%)</title><rect x="952.8" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="955.81" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (27,288,180 samples, 0.11%)</title><rect x="1086.1" y="149" width="1.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1089.15" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,028,627 samples, 0.02%)</title><rect x="735.6" y="453" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="738.56" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (11,185,912 samples, 0.05%)</title><rect x="888.3" y="469" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="891.33" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,056,777 samples, 0.01%)</title><rect x="1047.0" y="245" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1050.01" y="255.5" ></text>
</g>
<g >
<title>gen_all_points (32,721,950 samples, 0.14%)</title><rect x="727.6" y="533" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="730.57" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,651,280 samples, 0.02%)</title><rect x="978.8" y="149" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="981.79" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (13,125,966 samples, 0.06%)</title><rect x="965.9" y="181" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="968.94" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (14,813,443 samples, 0.06%)</title><rect x="318.8" y="485" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="321.82" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;Call&gt;::allocate (9,102,924 samples, 0.04%)</title><rect x="1091.6" y="373" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1094.57" y="383.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (20,157,683 samples, 0.08%)</title><rect x="153.7" y="469" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="156.72" y="479.5" ></text>
</g>
<g >
<title>cfree (10,230,429 samples, 0.04%)</title><rect x="1065.6" y="181" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1068.63" y="191.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,344,579 samples, 0.01%)</title><rect x="1044.2" y="261" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1047.20" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (5,605,806 samples, 0.02%)</title><rect x="747.8" y="405" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="750.85" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,061,657 samples, 0.01%)</title><rect x="681.9" y="389" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="684.88" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,588,928 samples, 0.02%)</title><rect x="1177.1" y="165" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1180.09" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (4,379,863 samples, 0.02%)</title><rect x="716.4" y="373" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="719.38" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (127,831,458 samples, 0.54%)</title><rect x="932.8" y="277" width="6.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="935.81" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (8,811,950 samples, 0.04%)</title><rect x="244.4" y="501" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="247.38" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (42,792,653 samples, 0.18%)</title><rect x="315.4" y="485" width="2.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="318.43" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (636,619,226 samples, 2.67%)</title><rect x="907.6" y="293" width="31.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="910.65" y="303.5" >st..</text>
</g>
<g >
<title>Call::~Call (3,675,836 samples, 0.02%)</title><rect x="1180.0" y="533" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1183.00" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,333,018 samples, 0.02%)</title><rect x="928.8" y="261" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="931.81" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (28,353,492 samples, 0.12%)</title><rect x="843.2" y="485" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="846.16" y="495.5" ></text>
</g>
<g >
<title>operator new (2,794,656 samples, 0.01%)</title><rect x="978.9" y="117" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="981.86" y="127.5" ></text>
</g>
<g >
<title>common_interrupt (4,813,124 samples, 0.02%)</title><rect x="1109.7" y="293" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1112.65" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,041,222 samples, 0.02%)</title><rect x="1041.5" y="261" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1044.55" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,723,635 samples, 0.02%)</title><rect x="729.0" y="453" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="731.96" y="463.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (45,313,914 samples, 0.19%)</title><rect x="747.5" y="517" width="2.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="750.46" y="527.5" ></text>
</g>
<g >
<title>__folio_end_writeback (3,663,448 samples, 0.02%)</title><rect x="1109.7" y="117" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1112.70" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,084,988 samples, 0.01%)</title><rect x="1041.0" y="261" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1043.99" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (30,578,370 samples, 0.13%)</title><rect x="1075.9" y="117" width="1.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1078.92" y="127.5" ></text>
</g>
<g >
<title>malloc (27,084,361 samples, 0.11%)</title><rect x="905.3" y="389" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="908.30" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,723,635 samples, 0.02%)</title><rect x="729.0" y="437" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="731.96" y="447.5" ></text>
</g>
<g >
<title>void std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_push_back_aux&lt;Call&amp;&gt; (115,183,937 samples, 0.48%)</title><rect x="1091.6" y="437" width="5.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1094.57" y="447.5" ></text>
</g>
<g >
<title>get_inbetween_points (26,257,434 samples, 0.11%)</title><rect x="1035.9" y="421" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1038.89" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,594,345 samples, 0.02%)</title><rect x="1153.7" y="261" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1156.72" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (62,776,674 samples, 0.26%)</title><rect x="1161.9" y="261" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.88" y="271.5" ></text>
</g>
<g >
<title>operator delete (9,885,761 samples, 0.04%)</title><rect x="998.6" y="341" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1001.60" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (13,422,188 samples, 0.06%)</title><rect x="887.7" y="453" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="890.67" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (16,588,082 samples, 0.07%)</title><rect x="316.7" y="453" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="319.73" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,041,222 samples, 0.02%)</title><rect x="1041.5" y="309" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1044.55" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (38,515,249 samples, 0.16%)</title><rect x="548.1" y="501" width="1.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="551.13" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (107,003,860 samples, 0.45%)</title><rect x="933.8" y="165" width="5.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="936.82" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (34,296,405 samples, 0.14%)</title><rect x="68.8" y="501" width="1.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="71.79" y="511.5" ></text>
</g>
<g >
<title>choose_next_point (2,338,256 samples, 0.01%)</title><rect x="1078.0" y="293" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1081.05" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,986,600 samples, 0.02%)</title><rect x="1155.5" y="373" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1158.49" y="383.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (16,229,934 samples, 0.07%)</title><rect x="353.1" y="469" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="356.06" y="479.5" ></text>
</g>
<g >
<title>is_close_int (21,267,783 samples, 0.09%)</title><rect x="1106.7" y="453" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1109.72" y="463.5" ></text>
</g>
<g >
<title>std::operator- (3,230,331 samples, 0.01%)</title><rect x="1177.8" y="453" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1180.84" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (12,106,736 samples, 0.05%)</title><rect x="1085.3" y="133" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1088.28" y="143.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (7,384,403 samples, 0.03%)</title><rect x="292.4" y="501" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="295.43" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (152,985,124 samples, 0.64%)</title><rect x="321.7" y="501" width="7.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="324.74" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (27,288,180 samples, 0.11%)</title><rect x="1086.1" y="85" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1089.15" y="95.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,046,032 samples, 0.01%)</title><rect x="1186.0" y="453" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1189.00" y="463.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,173,873 samples, 0.01%)</title><rect x="510.5" y="453" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="513.53" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,098,228 samples, 0.01%)</title><rect x="1026.4" y="421" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1029.41" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,879,793 samples, 0.05%)</title><rect x="325.7" y="453" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="328.71" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (7,437,159 samples, 0.03%)</title><rect x="726.5" y="485" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="729.54" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,140,749 samples, 0.06%)</title><rect x="1019.1" y="309" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1022.14" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,691,833 samples, 0.02%)</title><rect x="1138.1" y="245" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1141.05" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,948,525 samples, 0.07%)</title><rect x="1157.8" y="277" width="0.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1160.84" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (6,696,811 samples, 0.03%)</title><rect x="157.8" y="453" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="160.82" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,221,823 samples, 0.04%)</title><rect x="1151.4" y="245" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.42" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (37,747,021 samples, 0.16%)</title><rect x="313.1" y="485" width="1.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="316.09" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (16,608,921 samples, 0.07%)</title><rect x="965.9" y="197" width="0.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="968.94" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,706,671 samples, 0.02%)</title><rect x="1051.1" y="181" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1054.11" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (142,476,840 samples, 0.60%)</title><rect x="1097.3" y="453" width="7.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1100.27" y="463.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (15,582,729 samples, 0.07%)</title><rect x="728.4" y="485" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="731.42" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (3,217,312 samples, 0.01%)</title><rect x="896.8" y="373" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="899.83" y="383.5" ></text>
</g>
<g >
<title>operator delete (4,410,473 samples, 0.02%)</title><rect x="1166.2" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1169.16" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,480,838 samples, 0.06%)</title><rect x="1049.3" y="309" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1052.32" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (564,440,135 samples, 2.37%)</title><rect x="1126.3" y="469" width="28.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1129.34" y="479.5" >s..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (12,269,985 samples, 0.05%)</title><rect x="1052.9" y="357" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1055.90" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (3,920,360 samples, 0.02%)</title><rect x="1056.7" y="197" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1059.71" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,209,298 samples, 0.03%)</title><rect x="1172.3" y="229" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1175.29" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (20,609,820 samples, 0.09%)</title><rect x="745.8" y="405" width="1.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="748.81" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (15,948,525 samples, 0.07%)</title><rect x="1157.8" y="325" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.84" y="335.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (2,964,253 samples, 0.01%)</title><rect x="83.1" y="453" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="86.10" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (6,490,636 samples, 0.03%)</title><rect x="978.3" y="165" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="981.34" y="175.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,474,797 samples, 0.03%)</title><rect x="1127.8" y="309" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1130.79" y="319.5" ></text>
</g>
<g >
<title>operator new (3,716,635 samples, 0.02%)</title><rect x="1174.0" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1176.97" y="271.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,629,614 samples, 0.01%)</title><rect x="1075.3" y="117" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1078.27" y="127.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (13,732,997 samples, 0.06%)</title><rect x="1128.5" y="357" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1131.51" y="367.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="373" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1109.38" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (294,438,683 samples, 1.23%)</title><rect x="1005.3" y="341" width="14.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1008.27" y="351.5" ></text>
</g>
<g >
<title>malloc (2,058,879 samples, 0.01%)</title><rect x="1093.1" y="293" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1096.06" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,486,449 samples, 0.01%)</title><rect x="1053.9" y="405" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1056.92" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (41,613,551 samples, 0.17%)</title><rect x="1093.2" y="261" width="2.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1096.23" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (6,267,531 samples, 0.03%)</title><rect x="78.1" y="517" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="81.14" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (46,549,131 samples, 0.20%)</title><rect x="1151.4" y="261" width="2.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1154.37" y="271.5" ></text>
</g>
<g >
<title>operator new (4,165,305 samples, 0.02%)</title><rect x="1124.7" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1127.72" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (37,369,711 samples, 0.16%)</title><rect x="344.7" y="469" width="1.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="347.73" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (14,558,872 samples, 0.06%)</title><rect x="1107.0" y="437" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1110.00" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,727,516 samples, 0.02%)</title><rect x="1015.6" y="293" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1018.58" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (41,613,551 samples, 0.17%)</title><rect x="1093.2" y="277" width="2.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1096.23" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,455,347 samples, 0.01%)</title><rect x="1047.7" y="197" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1050.67" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,325,214 samples, 0.02%)</title><rect x="1049.8" y="261" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1052.78" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (9,780,685 samples, 0.04%)</title><rect x="726.0" y="437" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="728.95" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,041,222 samples, 0.02%)</title><rect x="1041.5" y="213" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1044.55" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (37,427,329 samples, 0.16%)</title><rect x="725.1" y="517" width="1.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="728.06" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,577,431 samples, 0.04%)</title><rect x="1083.3" y="149" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1086.25" y="159.5" ></text>
</g>
<g >
<title>Call::~Call (34,752,655 samples, 0.15%)</title><rect x="81.2" y="517" width="1.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="84.21" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,376,419 samples, 0.02%)</title><rect x="1157.5" y="229" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1160.47" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (27,288,180 samples, 0.11%)</title><rect x="1086.1" y="101" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1089.15" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,112,776 samples, 0.05%)</title><rect x="884.9" y="389" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="887.87" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,360,548 samples, 0.04%)</title><rect x="1049.6" y="293" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1052.58" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,497,751 samples, 0.01%)</title><rect x="891.5" y="501" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="894.49" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,319,039 samples, 0.01%)</title><rect x="892.4" y="453" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="895.37" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (9,241,026 samples, 0.04%)</title><rect x="1058.5" y="277" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1061.47" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (741,683,053 samples, 3.11%)</title><rect x="1054.9" y="389" width="36.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1057.87" y="399.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (47,199,773 samples, 0.20%)</title><rect x="1151.4" y="341" width="2.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1154.37" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,102,796 samples, 0.01%)</title><rect x="510.3" y="405" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="513.30" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,330,557 samples, 0.01%)</title><rect x="77.8" y="437" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="80.78" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (6,267,531 samples, 0.03%)</title><rect x="78.1" y="469" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="81.14" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,629,614 samples, 0.01%)</title><rect x="1075.3" y="101" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1078.27" y="111.5" ></text>
</g>
<g >
<title>operator new (1,313,155,925 samples, 5.51%)</title><rect x="445.8" y="533" width="65.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="448.83" y="543.5" >operato..</text>
</g>
<g >
<title>_start (5,746,730,793 samples, 24.10%)</title><rect x="893.6" y="549" width="284.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="896.59" y="559.5" >_start</text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (12,982,479 samples, 0.05%)</title><rect x="335.4" y="501" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="338.37" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (30,726,228 samples, 0.13%)</title><rect x="1175.5" y="293" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1178.50" y="303.5" ></text>
</g>
<g >
<title>cfree (2,970,270 samples, 0.01%)</title><rect x="1151.9" y="245" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1154.88" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,752,790,190 samples, 7.35%)</title><rect x="893.7" y="469" width="86.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="896.72" y="479.5" >std::set&lt;s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,818,167 samples, 0.01%)</title><rect x="1092.3" y="197" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1095.31" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,326,159 samples, 0.01%)</title><rect x="1052.3" y="165" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1055.28" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,651,280 samples, 0.02%)</title><rect x="978.8" y="165" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="981.79" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (62,011,320 samples, 0.26%)</title><rect x="1087.9" y="261" width="3.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1090.92" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,651,280 samples, 0.02%)</title><rect x="978.8" y="213" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="981.79" y="223.5" ></text>
</g>
<g >
<title>[attempt7_iter_cpp] (14,711,336 samples, 0.06%)</title><rect x="644.1" y="533" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="647.10" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (172,668,216 samples, 0.72%)</title><rect x="1142.6" y="293" width="8.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1145.63" y="303.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (58,512,305 samples, 0.25%)</title><rect x="1108.1" y="421" width="2.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1111.06" y="431.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (5,586,212 samples, 0.02%)</title><rect x="624.0" y="453" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="626.98" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (28,363,156 samples, 0.12%)</title><rect x="342.7" y="421" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="345.67" y="431.5" ></text>
</g>
<g >
<title>decltype (40,306,009 samples, 0.17%)</title><rect x="715.2" y="517" width="2.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="718.23" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (19,932,964 samples, 0.08%)</title><rect x="296.0" y="357" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="298.97" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,156,348 samples, 0.02%)</title><rect x="1090.5" y="85" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1093.48" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (6,753,045 samples, 0.03%)</title><rect x="1019.3" y="261" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1022.32" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,149,322 samples, 0.02%)</title><rect x="981.2" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="984.20" y="431.5" ></text>
</g>
<g >
<title>[unknown] (5,030,432,732 samples, 21.10%)</title><rect x="643.5" y="549" width="249.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="646.52" y="559.5" >[unknown]</text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (2,286,942 samples, 0.01%)</title><rect x="327.6" y="453" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="330.57" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (21,037,237 samples, 0.09%)</title><rect x="547.1" y="501" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="550.09" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (104,867,109 samples, 0.44%)</title><rect x="638.3" y="533" width="5.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="641.30" y="543.5" ></text>
</g>
<g >
<title>malloc (3,679,578 samples, 0.02%)</title><rect x="1091.1" y="133" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1094.13" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,931,168 samples, 0.05%)</title><rect x="1074.8" y="133" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1077.76" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,093,914 samples, 0.01%)</title><rect x="353.6" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="356.59" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,549,872 samples, 0.03%)</title><rect x="502.7" y="517" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="505.70" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (27,060,878 samples, 0.11%)</title><rect x="1095.4" y="197" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1098.42" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (45,377,496 samples, 0.19%)</title><rect x="1166.6" y="261" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1169.58" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (185,213,491 samples, 0.78%)</title><rect x="1160.7" y="325" width="9.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1163.69" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (31,221,645 samples, 0.13%)</title><rect x="1138.5" y="261" width="1.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1141.53" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,706,671 samples, 0.02%)</title><rect x="1051.1" y="229" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1054.11" y="239.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (106,081,013 samples, 0.44%)</title><rect x="1092.0" y="421" width="5.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1095.02" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (61,773,430 samples, 0.26%)</title><rect x="1087.9" y="229" width="3.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1090.92" y="239.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (4,403,101 samples, 0.02%)</title><rect x="1179.2" y="501" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1182.16" y="511.5" ></text>
</g>
<g >
<title>decltype (3,498,772 samples, 0.01%)</title><rect x="1092.3" y="293" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1095.28" y="303.5" ></text>
</g>
<g >
<title>is_close_int (2,113,579 samples, 0.01%)</title><rect x="983.8" y="405" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="986.76" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (289,486,670 samples, 1.21%)</title><rect x="1063.3" y="229" width="14.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1066.28" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,378,246 samples, 0.01%)</title><rect x="1125.6" y="197" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1128.55" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (22,508,857 samples, 0.09%)</title><rect x="1156.7" y="309" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1159.67" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,927,787 samples, 0.02%)</title><rect x="1047.6" y="293" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1050.64" y="303.5" ></text>
</g>
<g >
<title>decltype (7,572,238 samples, 0.03%)</title><rect x="241.8" y="501" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="244.84" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (28,368,727 samples, 0.12%)</title><rect x="1097.3" y="341" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1100.27" y="351.5" ></text>
</g>
<g >
<title>cfree (50,647,788 samples, 0.21%)</title><rect x="1170.1" y="261" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1173.14" y="271.5" ></text>
</g>
<g >
<title>btowc (115,091,386 samples, 0.48%)</title><rect x="240.8" y="533" width="5.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="243.76" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (196,976,327 samples, 0.83%)</title><rect x="1132.2" y="325" width="9.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1135.22" y="335.5" ></text>
</g>
<g >
<title>Call::Call (12,269,985 samples, 0.05%)</title><rect x="1052.9" y="373" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1055.90" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (4,115,517 samples, 0.02%)</title><rect x="1179.7" y="485" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1182.74" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (46,199,854 samples, 0.19%)</title><rect x="542.3" y="437" width="2.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="545.31" y="447.5" ></text>
</g>
<g >
<title>Call::Call (745,604,308 samples, 3.13%)</title><rect x="1054.7" y="405" width="36.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1057.67" y="415.5" >Cal..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,326,159 samples, 0.01%)</title><rect x="1052.3" y="197" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1055.28" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (28,353,492 samples, 0.12%)</title><rect x="843.2" y="517" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="846.16" y="527.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (9,132,576 samples, 0.04%)</title><rect x="852.0" y="517" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="855.02" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (25,326,863 samples, 0.11%)</title><rect x="641.9" y="453" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="644.86" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,474,251 samples, 0.03%)</title><rect x="1139.6" y="149" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1142.61" y="159.5" ></text>
</g>
<g >
<title>operator delete (4,892,873 samples, 0.02%)</title><rect x="977.4" y="229" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="980.35" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,792,879 samples, 0.06%)</title><rect x="1031.5" y="277" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1034.54" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (2,302,673 samples, 0.01%)</title><rect x="81.2" y="469" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="84.21" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (69,737,550 samples, 0.29%)</title><rect x="966.9" y="261" width="3.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="969.86" y="271.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,759,767 samples, 0.01%)</title><rect x="1139.9" y="197" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1142.93" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,337,038 samples, 0.01%)</title><rect x="1019.0" y="309" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1022.02" y="319.5" ></text>
</g>
<g >
<title>Call::~Call (3,032,746 samples, 0.01%)</title><rect x="715.1" y="517" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="718.08" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,753,045 samples, 0.03%)</title><rect x="1019.3" y="213" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1022.32" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (18,192,715 samples, 0.08%)</title><rect x="242.2" y="485" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="245.22" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,633,831 samples, 0.03%)</title><rect x="1003.9" y="309" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1006.93" y="319.5" ></text>
</g>
<g >
<title>__frame_dummy_init_array_entry (22,438,832 samples, 0.09%)</title><rect x="892.5" y="549" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="895.48" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,097,876 samples, 0.02%)</title><rect x="930.6" y="245" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="933.55" y="255.5" ></text>
</g>
<g >
<title>operator delete (5,198,732 samples, 0.02%)</title><rect x="954.9" y="261" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="957.95" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (5,028,627 samples, 0.02%)</title><rect x="735.6" y="437" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="738.56" y="447.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (5,605,806 samples, 0.02%)</title><rect x="747.8" y="453" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="750.85" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,316,171 samples, 0.01%)</title><rect x="1092.6" y="245" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1095.60" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (2,031,693 samples, 0.01%)</title><rect x="292.7" y="469" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="295.70" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (50,893,931 samples, 0.21%)</title><rect x="1050.0" y="389" width="2.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1053.04" y="399.5" ></text>
</g>
<g >
<title>cfree (820,524,932 samples, 3.44%)</title><rect x="246.5" y="533" width="40.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="249.45" y="543.5" >cfree</text>
</g>
<g >
<title>[libc.so.6] (8,648,819 samples, 0.04%)</title><rect x="240.8" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="243.76" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,534,614 samples, 0.02%)</title><rect x="1110.1" y="325" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1113.05" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,309,507 samples, 0.01%)</title><rect x="1041.0" y="277" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1043.98" y="287.5" ></text>
</g>
<g >
<title>operator delete (432,793,924 samples, 1.82%)</title><rect x="782.6" y="533" width="21.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="785.62" y="543.5" >o..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,315,722 samples, 0.01%)</title><rect x="1058.1" y="245" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1061.13" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (10,374,210 samples, 0.04%)</title><rect x="337.6" y="485" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="340.56" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (159,302,761 samples, 0.67%)</title><rect x="599.5" y="421" width="7.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="602.49" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::deallocate (2,081,995 samples, 0.01%)</title><rect x="747.7" y="453" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="750.69" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (378,668,805 samples, 1.59%)</title><rect x="1159.1" y="405" width="18.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1162.10" y="415.5" ></text>
</g>
<g >
<title>cfree (4,268,867 samples, 0.02%)</title><rect x="1123.2" y="309" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1126.21" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (3,963,499 samples, 0.02%)</title><rect x="1110.4" y="405" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1113.44" y="415.5" ></text>
</g>
<g >
<title>operator new (2,078,254 samples, 0.01%)</title><rect x="1156.1" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1159.13" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,808,328 samples, 0.03%)</title><rect x="1024.4" y="309" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1027.35" y="319.5" ></text>
</g>
<g >
<title>cfree (5,809,565 samples, 0.02%)</title><rect x="1130.9" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1133.94" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,749,957 samples, 0.01%)</title><rect x="1138.1" y="181" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1141.08" y="191.5" ></text>
</g>
<g >
<title>malloc (22,079,251 samples, 0.09%)</title><rect x="506.0" y="517" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="508.96" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,992,101 samples, 0.01%)</title><rect x="1090.8" y="117" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1093.83" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::size (19,705,244 samples, 0.08%)</title><rect x="749.7" y="501" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="752.70" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (2,818,167 samples, 0.01%)</title><rect x="1092.3" y="261" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1095.31" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,146,657 samples, 0.02%)</title><rect x="927.4" y="229" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="930.38" y="239.5" ></text>
</g>
<g >
<title>malloc (23,419,600 samples, 0.10%)</title><rect x="1123.4" y="309" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1126.43" y="319.5" ></text>
</g>
<g >
<title>__common_interrupt (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="421" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1109.38" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (59,320,880 samples, 0.25%)</title><rect x="967.4" y="213" width="2.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="970.36" y="223.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,252,551 samples, 0.03%)</title><rect x="1035.2" y="341" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1038.16" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,650,774 samples, 0.03%)</title><rect x="1175.1" y="213" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1178.10" y="223.5" ></text>
</g>
<g >
<title>Call::Call (2,818,167 samples, 0.01%)</title><rect x="1092.3" y="229" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1095.31" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (3,922,016 samples, 0.02%)</title><rect x="245.9" y="501" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="248.91" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,474,251 samples, 0.03%)</title><rect x="1139.6" y="165" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1142.61" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (2,330,940 samples, 0.01%)</title><rect x="630.5" y="485" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="633.53" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (11,425,289 samples, 0.05%)</title><rect x="1128.5" y="325" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1131.52" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (20,609,820 samples, 0.09%)</title><rect x="745.8" y="389" width="1.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="748.81" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,022,782 samples, 0.01%)</title><rect x="887.3" y="501" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="890.28" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (106,081,013 samples, 0.44%)</title><rect x="1092.0" y="341" width="5.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1095.02" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (17,280,272 samples, 0.07%)</title><rect x="623.1" y="453" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="626.12" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (739,859,828 samples, 3.10%)</title><rect x="1054.9" y="341" width="36.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1057.88" y="351.5" >std..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (4,187,890 samples, 0.02%)</title><rect x="1111.0" y="405" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1113.96" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (14,084,529 samples, 0.06%)</title><rect x="1150.4" y="149" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1153.41" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (3,677,141 samples, 0.02%)</title><rect x="1031.8" y="261" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1034.80" y="271.5" ></text>
</g>
<g >
<title>nvme_irq (4,813,124 samples, 0.02%)</title><rect x="1109.7" y="213" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1112.65" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (45,313,914 samples, 0.19%)</title><rect x="747.5" y="501" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="750.46" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (9,344,189 samples, 0.04%)</title><rect x="736.4" y="501" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="739.36" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (53,400,879 samples, 0.22%)</title><rect x="1101.7" y="389" width="2.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1104.66" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,239,921 samples, 0.01%)</title><rect x="510.3" y="485" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="513.30" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (25,697,927 samples, 0.11%)</title><rect x="1157.8" y="341" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1160.79" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,964,974 samples, 0.06%)</title><rect x="716.1" y="389" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="719.09" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (10,864,579 samples, 0.05%)</title><rect x="158.2" y="501" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="161.20" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (4,362,335 samples, 0.02%)</title><rect x="627.7" y="485" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="630.68" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (2,971,749 samples, 0.01%)</title><rect x="1059.0" y="245" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1062.00" y="255.5" ></text>
</g>
<g >
<title>malloc (2,772,740 samples, 0.01%)</title><rect x="1145.4" y="261" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1148.41" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (5,349,129 samples, 0.02%)</title><rect x="980.2" y="421" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="983.20" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,021,347 samples, 0.04%)</title><rect x="1094.1" y="149" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1097.08" y="159.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,816,885 samples, 0.01%)</title><rect x="1085.7" y="101" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1088.74" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (170,576,449 samples, 0.72%)</title><rect x="878.8" y="485" width="8.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="881.84" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (4,813,124 samples, 0.02%)</title><rect x="1109.7" y="229" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1112.65" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,951,337 samples, 0.02%)</title><rect x="1154.6" y="357" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1157.65" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (25,429,570 samples, 0.11%)</title><rect x="1154.5" y="421" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1157.48" y="431.5" ></text>
</g>
<g >
<title>operator new (2,069,767 samples, 0.01%)</title><rect x="1129.1" y="277" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1132.09" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (10,177,310 samples, 0.04%)</title><rect x="1056.4" y="213" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1059.40" y="223.5" ></text>
</g>
<g >
<title>get_inbetween_points (4,010,960 samples, 0.02%)</title><rect x="983.7" y="421" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="986.69" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,890,996 samples, 0.02%)</title><rect x="901.1" y="389" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="904.05" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (111,891,889 samples, 0.47%)</title><rect x="1044.5" y="357" width="5.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1047.50" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_allocate_node (9,102,924 samples, 0.04%)</title><rect x="1091.6" y="421" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1094.57" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,099,702 samples, 0.02%)</title><rect x="1035.5" y="357" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1038.51" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_deallocate_node (2,379,100 samples, 0.01%)</title><rect x="352.9" y="469" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="355.91" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (30,661,006 samples, 0.13%)</title><rect x="327.7" y="469" width="1.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="330.69" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (6,577,540 samples, 0.03%)</title><rect x="137.8" y="501" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="140.77" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (24,992,121 samples, 0.10%)</title><rect x="1102.5" y="325" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1105.45" y="335.5" ></text>
</g>
<g >
<title>Call::Call (5,719,440 samples, 0.02%)</title><rect x="1179.7" y="533" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1182.71" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,433,790 samples, 0.01%)</title><rect x="1101.4" y="229" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1104.35" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (4,332,282 samples, 0.02%)</title><rect x="1058.7" y="245" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1061.72" y="255.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (5,605,806 samples, 0.02%)</title><rect x="747.8" y="469" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="750.85" y="479.5" ></text>
</g>
<g >
<title>Call::Call (5,952,558 samples, 0.02%)</title><rect x="241.9" y="437" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="244.92" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,325,214 samples, 0.02%)</title><rect x="1049.8" y="277" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1052.78" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,293,846 samples, 0.01%)</title><rect x="137.3" y="485" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="140.32" y="495.5" ></text>
</g>
<g >
<title>operator delete (2,549,655 samples, 0.01%)</title><rect x="1048.9" y="309" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1051.94" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (14,084,529 samples, 0.06%)</title><rect x="1150.4" y="165" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1153.41" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,206,585 samples, 0.01%)</title><rect x="1176.0" y="133" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1178.99" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (10,301,554 samples, 0.04%)</title><rect x="1074.8" y="101" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1077.76" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,503,288 samples, 0.01%)</title><rect x="977.6" y="229" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="980.63" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::back (3,946,478 samples, 0.02%)</title><rect x="359.8" y="501" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="362.84" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (13,135,637 samples, 0.06%)</title><rect x="344.1" y="469" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="347.08" y="479.5" ></text>
</g>
<g >
<title>cfree (22,556,817 samples, 0.09%)</title><rect x="1050.2" y="293" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1053.20" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (25,429,570 samples, 0.11%)</title><rect x="1154.5" y="405" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1157.48" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,326,159 samples, 0.01%)</title><rect x="1052.3" y="261" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1055.28" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (11,097,000 samples, 0.05%)</title><rect x="137.0" y="501" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="139.98" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,101,798 samples, 0.01%)</title><rect x="1035.8" y="373" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1038.79" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,594,345 samples, 0.02%)</title><rect x="1153.7" y="293" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1156.72" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (107,003,860 samples, 0.45%)</title><rect x="933.8" y="261" width="5.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="936.82" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (6,474,251 samples, 0.03%)</title><rect x="1139.6" y="181" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1142.61" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (32,922,621 samples, 0.14%)</title><rect x="641.9" y="501" width="1.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="644.86" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (8,038,626 samples, 0.03%)</title><rect x="1177.0" y="325" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1180.02" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (517,163,322 samples, 2.17%)</title><rect x="1027.9" y="453" width="25.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1030.91" y="463.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (22,594,192 samples, 0.09%)</title><rect x="303.5" y="469" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="306.51" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,021,125 samples, 0.01%)</title><rect x="888.9" y="373" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="891.93" y="383.5" ></text>
</g>
<g >
<title>malloc (17,767,368 samples, 0.07%)</title><rect x="1093.8" y="165" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1096.80" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,301,823 samples, 0.01%)</title><rect x="967.4" y="133" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="970.36" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (17,280,272 samples, 0.07%)</title><rect x="623.1" y="437" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="626.12" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (5,073,811 samples, 0.02%)</title><rect x="1061.6" y="277" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1064.64" y="287.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (44,356,339 samples, 0.19%)</title><rect x="624.3" y="485" width="2.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="627.25" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,591,817 samples, 0.02%)</title><rect x="891.7" y="501" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="894.66" y="511.5" ></text>
</g>
<g >
<title>cfree (12,098,534 samples, 0.05%)</title><rect x="981.5" y="421" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="984.53" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,166,340 samples, 0.03%)</title><rect x="1091.0" y="229" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1094.02" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (73,077,848 samples, 0.31%)</title><rect x="929.1" y="261" width="3.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="932.12" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,913,255 samples, 0.02%)</title><rect x="1186.0" y="533" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1188.98" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,080,946 samples, 0.01%)</title><rect x="329.2" y="469" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="332.20" y="479.5" ></text>
</g>
<g >
<title>handle_edge_irq (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="405" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1109.38" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (26,023,666 samples, 0.11%)</title><rect x="846.7" y="501" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="849.71" y="511.5" ></text>
</g>
<g >
<title>operator new (2,313,307 samples, 0.01%)</title><rect x="1103.8" y="325" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.80" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (168,313,552 samples, 0.71%)</title><rect x="1044.3" y="405" width="8.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1047.33" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (7,733,279 samples, 0.03%)</title><rect x="1060.3" y="325" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1063.34" y="335.5" ></text>
</g>
<g >
<title>malloc (41,155,660 samples, 0.17%)</title><rect x="1146.6" y="245" width="2.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1149.58" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (73,670,195 samples, 0.31%)</title><rect x="999.5" y="261" width="3.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1002.55" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (56,090,133 samples, 0.24%)</title><rect x="898.7" y="405" width="2.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="901.68" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (2,507,573 samples, 0.01%)</title><rect x="1066.8" y="133" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1069.85" y="143.5" ></text>
</g>
<g >
<title>cfree (252,142,448 samples, 1.06%)</title><rect x="984.8" y="341" width="12.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="987.81" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (83,138,537 samples, 0.35%)</title><rect x="852.6" y="533" width="4.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="855.56" y="543.5" ></text>
</g>
<g >
<title>choose_next_point (43,931,666 samples, 0.18%)</title><rect x="241.2" y="517" width="2.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="244.19" y="527.5" ></text>
</g>
<g >
<title>get_inbetween_points (155,523,761 samples, 0.65%)</title><rect x="729.2" y="533" width="7.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="732.19" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (2,582,155 samples, 0.01%)</title><rect x="1060.2" y="325" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1063.21" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (3,217,312 samples, 0.01%)</title><rect x="896.8" y="357" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="899.83" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,559,564 samples, 0.01%)</title><rect x="888.7" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="891.69" y="431.5" ></text>
</g>
<g >
<title>choose_next_point (4,616,676 samples, 0.02%)</title><rect x="896.8" y="405" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="899.80" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (6,749,842 samples, 0.03%)</title><rect x="136.6" y="485" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="139.65" y="495.5" ></text>
</g>
<g >
<title>operator delete (7,488,018 samples, 0.03%)</title><rect x="918.2" y="277" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="921.22" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,110,780 samples, 0.02%)</title><rect x="847.3" y="453" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="850.33" y="463.5" ></text>
</g>
<g >
<title>operator new (5,323,183 samples, 0.02%)</title><rect x="999.1" y="341" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1002.09" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (7,193,797 samples, 0.03%)</title><rect x="72.7" y="469" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="75.68" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (289,486,670 samples, 1.21%)</title><rect x="1063.3" y="261" width="14.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1066.28" y="271.5" ></text>
</g>
<g >
<title>operator delete (2,144,615 samples, 0.01%)</title><rect x="1173.9" y="261" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1176.87" y="271.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,323,288 samples, 0.01%)</title><rect x="1150.2" y="181" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1153.17" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (27,321,179 samples, 0.11%)</title><rect x="69.0" y="485" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="71.97" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,371,234 samples, 0.02%)</title><rect x="747.9" y="389" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="750.86" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (564,440,135 samples, 2.37%)</title><rect x="1126.3" y="453" width="28.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1129.34" y="463.5" >s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,727,516 samples, 0.02%)</title><rect x="1015.6" y="277" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1018.58" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,455,347 samples, 0.01%)</title><rect x="1047.7" y="213" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1050.67" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,102,796 samples, 0.01%)</title><rect x="510.3" y="421" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="513.30" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,055,255 samples, 0.01%)</title><rect x="546.7" y="405" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="549.68" y="415.5" ></text>
</g>
<g >
<title>malloc (24,628,678 samples, 0.10%)</title><rect x="1172.6" y="261" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.65" y="271.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (13,420,822 samples, 0.06%)</title><rect x="1057.5" y="245" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1060.46" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (4,631,492 samples, 0.02%)</title><rect x="1179.2" y="517" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1182.15" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (4,332,282 samples, 0.02%)</title><rect x="1058.7" y="229" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1061.72" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,509,853 samples, 0.01%)</title><rect x="83.1" y="389" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="86.12" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (11,425,289 samples, 0.05%)</title><rect x="1128.5" y="309" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1131.52" y="319.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,482,955 samples, 0.01%)</title><rect x="966.6" y="181" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="969.59" y="191.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (2,091,248 samples, 0.01%)</title><rect x="682.1" y="469" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="685.06" y="479.5" ></text>
</g>
<g >
<title>operator new (2,111,821 samples, 0.01%)</title><rect x="1148.7" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1151.73" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,166,340 samples, 0.03%)</title><rect x="1091.0" y="261" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1094.02" y="271.5" ></text>
</g>
<g >
<title>operator delete (3,009,042 samples, 0.01%)</title><rect x="974.6" y="245" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="977.56" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,297,881 samples, 0.01%)</title><rect x="963.1" y="197" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="966.09" y="207.5" ></text>
</g>
<g >
<title>operator new (5,998,850 samples, 0.03%)</title><rect x="1091.1" y="149" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1094.07" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,595,266 samples, 0.02%)</title><rect x="1095.1" y="149" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1098.06" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (5,996,329 samples, 0.03%)</title><rect x="1026.1" y="405" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1029.12" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::deallocate (2,379,100 samples, 0.01%)</title><rect x="352.9" y="453" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="355.91" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,964,253 samples, 0.01%)</title><rect x="83.1" y="421" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.10" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (30,105,206 samples, 0.13%)</title><rect x="1140.4" y="229" width="1.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1143.42" y="239.5" ></text>
</g>
<g >
<title>std::operator- (48,220,383 samples, 0.20%)</title><rect x="357.5" y="485" width="2.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="360.45" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,740,400 samples, 0.01%)</title><rect x="1176.9" y="149" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1179.87" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,993,647 samples, 0.01%)</title><rect x="1094.8" y="133" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1097.85" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,297,881 samples, 0.01%)</title><rect x="963.1" y="165" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="966.09" y="175.5" ></text>
</g>
<g >
<title>malloc (11,064,859 samples, 0.05%)</title><rect x="941.0" y="373" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="944.01" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (22,508,857 samples, 0.09%)</title><rect x="1156.7" y="325" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1159.67" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,303,732 samples, 0.01%)</title><rect x="1003.1" y="245" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1006.08" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (6,042,512 samples, 0.03%)</title><rect x="1035.5" y="389" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1038.47" y="399.5" ></text>
</g>
<g >
<title>decltype  (2,078,074 samples, 0.01%)</title><rect x="1127.4" y="341" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1130.43" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (7,172,288 samples, 0.03%)</title><rect x="1053.1" y="293" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1056.08" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (85,215,669 samples, 0.36%)</title><rect x="1121.9" y="405" width="4.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1124.89" y="415.5" ></text>
</g>
<g >
<title>is_close_int (4,339,051 samples, 0.02%)</title><rect x="505.4" y="501" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="508.41" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,192,297 samples, 0.02%)</title><rect x="1096.6" y="117" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1099.55" y="127.5" ></text>
</g>
<g >
<title>Call::~Call (378,668,805 samples, 1.59%)</title><rect x="1159.1" y="421" width="18.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1162.10" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (13,125,966 samples, 0.06%)</title><rect x="965.9" y="165" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="968.94" y="175.5" ></text>
</g>
<g >
<title>void std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_push_back_aux&lt;Call&amp;&gt; (12,269,985 samples, 0.05%)</title><rect x="1052.9" y="421" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1055.90" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (37,639,027 samples, 0.16%)</title><rect x="1132.4" y="277" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.36" y="287.5" ></text>
</g>
<g >
<title>Call::~Call (10,164,087 samples, 0.04%)</title><rect x="681.5" y="501" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="684.52" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,538,330 samples, 0.01%)</title><rect x="1156.1" y="357" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1159.12" y="367.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (3,482,955 samples, 0.01%)</title><rect x="966.6" y="165" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="969.59" y="175.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (72,449,203 samples, 0.30%)</title><rect x="353.9" y="485" width="3.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="356.87" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (61,039,897 samples, 0.26%)</title><rect x="315.2" y="501" width="3.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="318.25" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,773,201 samples, 0.01%)</title><rect x="1059.2" y="309" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1062.16" y="319.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,759,767 samples, 0.01%)</title><rect x="1139.9" y="181" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1142.93" y="191.5" ></text>
</g>
<g >
<title>malloc (23,857,773 samples, 0.10%)</title><rect x="1180.3" y="549" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1183.32" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,209,298 samples, 0.03%)</title><rect x="1172.3" y="197" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1175.29" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (17,576,310 samples, 0.07%)</title><rect x="892.7" y="533" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="895.72" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (107,003,860 samples, 0.45%)</title><rect x="933.8" y="213" width="5.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="936.82" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (621,558,928 samples, 2.61%)</title><rect x="856.7" y="533" width="30.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="859.67" y="543.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,253,191 samples, 0.01%)</title><rect x="336.7" y="453" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="339.72" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (29,643,631 samples, 0.12%)</title><rect x="1140.4" y="197" width="1.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1143.42" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,798,230 samples, 0.07%)</title><rect x="356.3" y="341" width="0.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="359.28" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (27,288,180 samples, 0.11%)</title><rect x="1086.1" y="117" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1089.15" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (32,449,982 samples, 0.14%)</title><rect x="81.3" y="469" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="84.32" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (636,619,226 samples, 2.67%)</title><rect x="907.6" y="309" width="31.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="910.65" y="319.5" >st..</text>
</g>
<g >
<title>void std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_push_back_aux&lt;Call&amp;&gt; (18,867,448 samples, 0.08%)</title><rect x="626.4" y="533" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="629.45" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (154,944,562 samples, 0.65%)</title><rect x="717.2" y="517" width="7.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="720.23" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (24,175,025 samples, 0.10%)</title><rect x="725.2" y="469" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="728.24" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (403,408,237 samples, 1.69%)</title><rect x="984.4" y="357" width="19.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="987.36" y="367.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::size (3,230,331 samples, 0.01%)</title><rect x="1177.8" y="485" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1180.84" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (152,499,369 samples, 0.64%)</title><rect x="339.0" y="485" width="7.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="342.03" y="495.5" ></text>
</g>
<g >
<title>operator new (2,575,447 samples, 0.01%)</title><rect x="1096.6" y="37" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1099.62" y="47.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (25,326,863 samples, 0.11%)</title><rect x="641.9" y="469" width="1.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="644.86" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (152,985,124 samples, 0.64%)</title><rect x="321.7" y="517" width="7.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="324.74" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,076,730 samples, 0.01%)</title><rect x="736.0" y="453" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="739.04" y="463.5" ></text>
</g>
<g >
<title>malloc (2,072,349 samples, 0.01%)</title><rect x="1142.4" y="373" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1145.39" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,549,571 samples, 0.02%)</title><rect x="1153.3" y="213" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1156.34" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (636,619,226 samples, 2.67%)</title><rect x="907.6" y="325" width="31.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="910.65" y="335.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (390,918,304 samples, 1.64%)</title><rect x="832.3" y="533" width="19.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="835.30" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (30,726,228 samples, 0.13%)</title><rect x="1175.5" y="261" width="1.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1178.50" y="271.5" ></text>
</g>
<g >
<title>is_close_int (16,280,830 samples, 0.07%)</title><rect x="76.7" y="517" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="79.69" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (45,377,496 samples, 0.19%)</title><rect x="1166.6" y="229" width="2.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1169.58" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,133,718 samples, 0.02%)</title><rect x="885.3" y="261" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="888.31" y="271.5" ></text>
</g>
<g >
<title>operator delete (2,522,808 samples, 0.01%)</title><rect x="1024.1" y="309" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1027.08" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (637,996,499 samples, 2.68%)</title><rect x="907.6" y="357" width="31.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="910.65" y="367.5" >st..</text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (2,095,596 samples, 0.01%)</title><rect x="627.9" y="501" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="630.90" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (6,042,512 samples, 0.03%)</title><rect x="1035.5" y="405" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1038.47" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (2,548,914 samples, 0.01%)</title><rect x="980.5" y="437" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="983.46" y="447.5" ></text>
</g>
<g >
<title>operator new (2,790,592 samples, 0.01%)</title><rect x="1047.7" y="165" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1050.70" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (13,219,173 samples, 0.06%)</title><rect x="1024.8" y="309" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1027.85" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (45,299,151 samples, 0.19%)</title><rect x="155.2" y="517" width="2.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="158.24" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (2,751,204 samples, 0.01%)</title><rect x="1130.1" y="389" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1133.07" y="399.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="453" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1109.38" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,333,443 samples, 0.01%)</title><rect x="901.3" y="389" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="904.34" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (4,779,016 samples, 0.02%)</title><rect x="1119.9" y="421" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1122.94" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (163,830,619 samples, 0.69%)</title><rect x="970.9" y="277" width="8.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="973.93" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,558,470 samples, 0.02%)</title><rect x="1158.7" y="277" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1161.65" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,442,110 samples, 0.02%)</title><rect x="1129.8" y="405" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1132.80" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (5,952,558 samples, 0.02%)</title><rect x="241.9" y="469" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="244.92" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,588,928 samples, 0.02%)</title><rect x="1177.1" y="149" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1180.09" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,749,842 samples, 0.03%)</title><rect x="136.6" y="437" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="139.65" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (42,792,653 samples, 0.18%)</title><rect x="315.4" y="469" width="2.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="318.43" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (115,452,983 samples, 0.48%)</title><rect x="556.5" y="533" width="5.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="559.53" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,209,298 samples, 0.03%)</title><rect x="1172.3" y="181" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1175.29" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,253,191 samples, 0.01%)</title><rect x="336.7" y="437" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="339.72" y="447.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (23,281,179 samples, 0.10%)</title><rect x="82.9" y="517" width="1.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="85.93" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (8,112,382 samples, 0.03%)</title><rect x="616.3" y="501" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="619.29" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,110,780 samples, 0.02%)</title><rect x="847.3" y="485" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="850.33" y="495.5" ></text>
</g>
<g >
<title>malloc (2,099,035 samples, 0.01%)</title><rect x="1119.2" y="453" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1122.16" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,762,675 samples, 0.01%)</title><rect x="847.9" y="485" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="850.87" y="495.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,695,639 samples, 0.03%)</title><rect x="1189.5" y="485" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1192.47" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (5,821,433 samples, 0.02%)</title><rect x="1032.0" y="261" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1034.99" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (170,576,449 samples, 0.72%)</title><rect x="878.8" y="501" width="8.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="881.84" y="511.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3,515,870 samples, 0.01%)</title><rect x="1015.6" y="261" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1018.59" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,449,786 samples, 0.01%)</title><rect x="1025.7" y="389" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1028.74" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (5,247,093 samples, 0.02%)</title><rect x="242.0" y="421" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="244.96" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (36,908,684 samples, 0.15%)</title><rect x="899.2" y="373" width="1.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="902.23" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,279,960 samples, 0.01%)</title><rect x="1024.6" y="277" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1027.63" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,558,470 samples, 0.02%)</title><rect x="1158.7" y="245" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1161.65" y="255.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (10,864,579 samples, 0.05%)</title><rect x="158.2" y="469" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="161.20" y="479.5" ></text>
</g>
<g >
<title>cfree (67,815,821 samples, 0.28%)</title><rect x="1020.3" y="309" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1023.32" y="319.5" ></text>
</g>
<g >
<title>cfree (12,919,482 samples, 0.05%)</title><rect x="917.4" y="277" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="920.40" y="287.5" ></text>
</g>
<g >
<title>malloc (90,942,562 samples, 0.38%)</title><rect x="923.1" y="261" width="4.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="926.15" y="271.5" ></text>
</g>
<g >
<title>cfree (17,911,842 samples, 0.08%)</title><rect x="1144.5" y="261" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1147.51" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,761,949 samples, 0.02%)</title><rect x="1095.0" y="181" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1098.01" y="191.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,315,722 samples, 0.01%)</title><rect x="1058.1" y="261" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1061.13" y="271.5" ></text>
</g>
<g >
<title>operator new (22,206,414 samples, 0.09%)</title><rect x="1086.3" y="53" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1089.33" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (17,484,503 samples, 0.07%)</title><rect x="845.8" y="485" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="848.85" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,632,203 samples, 0.03%)</title><rect x="157.8" y="485" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="160.82" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,221,999 samples, 0.01%)</title><rect x="996.7" y="309" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="999.72" y="319.5" ></text>
</g>
<g >
<title>decltype  (2,302,913 samples, 0.01%)</title><rect x="728.3" y="469" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="731.31" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,326,438 samples, 0.01%)</title><rect x="970.1" y="133" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="973.10" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,706,671 samples, 0.02%)</title><rect x="1051.1" y="261" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1054.11" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,632,203 samples, 0.03%)</title><rect x="157.8" y="501" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="160.82" y="511.5" ></text>
</g>
<g >
<title>choose_next_point (31,554,361 samples, 0.13%)</title><rect x="982.1" y="421" width="1.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="985.13" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,971,630 samples, 0.02%)</title><rect x="927.4" y="181" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="930.38" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (8,620,370 samples, 0.04%)</title><rect x="79.9" y="437" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="82.92" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (290,172,757 samples, 1.22%)</title><rect x="1063.3" y="277" width="14.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1066.28" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (17,822,352 samples, 0.07%)</title><rect x="318.7" y="517" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="321.67" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,535,505 samples, 0.07%)</title><rect x="135.2" y="469" width="0.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="138.19" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,749,957 samples, 0.01%)</title><rect x="1138.1" y="165" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1141.08" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (111,891,889 samples, 0.47%)</title><rect x="1044.5" y="341" width="5.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1047.50" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (84,982,268 samples, 0.36%)</title><rect x="1121.9" y="357" width="4.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1124.89" y="367.5" ></text>
</g>
<g >
<title>Call::~Call (16,229,934 samples, 0.07%)</title><rect x="353.1" y="437" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="356.06" y="447.5" ></text>
</g>
<g >
<title>Call::Call (1,753,931,572 samples, 7.36%)</title><rect x="893.7" y="485" width="86.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="896.66" y="495.5" >Call::Call</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (26,558,413 samples, 0.11%)</title><rect x="350.5" y="389" width="1.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="353.53" y="399.5" ></text>
</g>
<g >
<title>operator new (46,789,043 samples, 0.20%)</title><rect x="1099.2" y="341" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1102.24" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,389,472 samples, 0.02%)</title><rect x="749.2" y="373" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="752.24" y="383.5" ></text>
</g>
<g >
<title>clone_endio (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="325" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1109.38" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (11,526,242 samples, 0.05%)</title><rect x="317.7" y="469" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="320.70" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (9,912,704 samples, 0.04%)</title><rect x="1149.8" y="213" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1152.80" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,343,006 samples, 0.01%)</title><rect x="891.5" y="437" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="894.49" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (11,879,793 samples, 0.05%)</title><rect x="325.7" y="421" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="328.71" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,096,510 samples, 0.01%)</title><rect x="1148.3" y="229" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1151.34" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (25,550,135 samples, 0.11%)</title><rect x="873.9" y="517" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="876.93" y="527.5" ></text>
</g>
<g >
<title>malloc (3,279,876 samples, 0.01%)</title><rect x="1091.7" y="341" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1094.68" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,645,558 samples, 0.02%)</title><rect x="983.2" y="357" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="986.23" y="367.5" ></text>
</g>
<g >
<title>decltype  (2,818,167 samples, 0.01%)</title><rect x="1092.3" y="245" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1095.31" y="255.5" ></text>
</g>
<g >
<title>malloc (11,746,326 samples, 0.05%)</title><rect x="1129.2" y="405" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1132.20" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,949,953 samples, 0.02%)</title><rect x="242.5" y="453" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="245.50" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,775,055 samples, 0.03%)</title><rect x="1044.0" y="277" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1046.99" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,992,101 samples, 0.01%)</title><rect x="1090.8" y="53" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1093.83" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (36,997,213 samples, 0.16%)</title><rect x="1140.1" y="277" width="1.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1143.11" y="287.5" ></text>
</g>
<g >
<title>Call::~Call (2,320,067 samples, 0.01%)</title><rect x="1030.8" y="405" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1033.83" y="415.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::size (48,220,383 samples, 0.20%)</title><rect x="357.5" y="517" width="2.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="360.45" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::size (3,728,260 samples, 0.02%)</title><rect x="626.9" y="517" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="629.87" y="527.5" ></text>
</g>
<g >
<title>decltype  (50,127,490 samples, 0.21%)</title><rect x="607.7" y="437" width="2.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="610.72" y="447.5" ></text>
</g>
<g >
<title>operator new (514,594,260 samples, 2.16%)</title><rect x="105.1" y="533" width="25.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="108.07" y="543.5" >o..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,433,790 samples, 0.01%)</title><rect x="1101.4" y="245" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1104.35" y="255.5" ></text>
</g>
<g >
<title>malloc (2,516,367 samples, 0.01%)</title><rect x="1079.8" y="181" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1082.83" y="191.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (57,123,294 samples, 0.24%)</title><rect x="607.4" y="469" width="2.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="610.38" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (134,899,162 samples, 0.57%)</title><rect x="878.8" y="469" width="6.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="881.84" y="479.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (11,093,986 samples, 0.05%)</title><rect x="1117.7" y="421" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1120.66" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (18,223,520 samples, 0.08%)</title><rect x="325.4" y="469" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="328.40" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (2,083,444 samples, 0.01%)</title><rect x="1118.6" y="389" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1121.57" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,093,914 samples, 0.01%)</title><rect x="353.6" y="325" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="356.59" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,418,909 samples, 0.03%)</title><rect x="1052.2" y="309" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1055.21" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (12,269,985 samples, 0.05%)</title><rect x="1052.9" y="341" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1055.90" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (44,985,624 samples, 0.19%)</title><rect x="294.7" y="389" width="2.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="297.73" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,046,032 samples, 0.01%)</title><rect x="1186.0" y="485" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1189.00" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (5,814,446 samples, 0.02%)</title><rect x="901.5" y="405" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="904.46" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (34,296,405 samples, 0.14%)</title><rect x="68.8" y="517" width="1.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="71.79" y="527.5" ></text>
</g>
<g >
<title>decltype  (30,147,771 samples, 0.13%)</title><rect x="885.8" y="437" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="888.79" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (18,428,706 samples, 0.08%)</title><rect x="851.6" y="533" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="854.64" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (39,192,429 samples, 0.16%)</title><rect x="1073.5" y="181" width="1.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1076.46" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,069,767 samples, 0.01%)</title><rect x="1129.1" y="293" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1132.09" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,775,405 samples, 0.01%)</title><rect x="1033.6" y="357" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1036.61" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (30,804,392 samples, 0.13%)</title><rect x="1075.9" y="149" width="1.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1078.92" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;Call&gt;::deallocate (2,379,100 samples, 0.01%)</title><rect x="352.9" y="421" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="355.91" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (51,584,022 samples, 0.22%)</title><rect x="10.0" y="533" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (170,846,124 samples, 0.72%)</title><rect x="304.6" y="453" width="8.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="307.63" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,634,697 samples, 0.01%)</title><rect x="1005.7" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1008.70" y="335.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (871,364,686 samples, 3.65%)</title><rect x="1054.2" y="453" width="43.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1057.15" y="463.5" >Call..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,495,547 samples, 0.01%)</title><rect x="885.4" y="245" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="888.39" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (49,440,202 samples, 0.21%)</title><rect x="1069.6" y="165" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1072.57" y="175.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (3,035,752 samples, 0.01%)</title><rect x="1188.0" y="533" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1190.99" y="543.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (54,213,790 samples, 0.23%)</title><rect x="1156.4" y="421" width="2.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1159.42" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::size (3,490,290 samples, 0.01%)</title><rect x="889.1" y="469" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="892.08" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (936,815,423 samples, 3.93%)</title><rect x="980.5" y="453" width="46.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="983.46" y="463.5" >std:..</text>
</g>
<g >
<title>[libc.so.6] (4,413,460 samples, 0.02%)</title><rect x="933.8" y="149" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="936.83" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,032,181 samples, 0.01%)</title><rect x="1153.4" y="165" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1156.39" y="175.5" ></text>
</g>
<g >
<title>operator new (2,520,060 samples, 0.01%)</title><rect x="1176.4" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.45" y="255.5" ></text>
</g>
<g >
<title>decltype (871,364,686 samples, 3.65%)</title><rect x="1054.2" y="469" width="43.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1057.15" y="479.5" >decl..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,662,540 samples, 0.02%)</title><rect x="1168.6" y="181" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1171.58" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,680,824 samples, 0.03%)</title><rect x="643.7" y="517" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="646.67" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::deallocate (8,789,060 samples, 0.04%)</title><rect x="1156.0" y="421" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1158.99" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (196,976,327 samples, 0.83%)</title><rect x="1132.2" y="309" width="9.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1135.22" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,925,610 samples, 0.06%)</title><rect x="1149.5" y="229" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1152.55" y="239.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (6,687,604 samples, 0.03%)</title><rect x="561.3" y="517" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="564.34" y="527.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (2,075,068 samples, 0.01%)</title><rect x="644.7" y="501" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="647.67" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (8,550,039 samples, 0.04%)</title><rect x="727.2" y="517" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="730.15" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,156,348 samples, 0.02%)</title><rect x="1090.5" y="37" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1093.48" y="47.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_deallocate_node (2,081,995 samples, 0.01%)</title><rect x="747.7" y="469" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="750.69" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,625,253 samples, 0.02%)</title><rect x="510.2" y="501" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="513.24" y="511.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3,215,871 samples, 0.01%)</title><rect x="1138.1" y="197" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1141.08" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,989,309 samples, 0.01%)</title><rect x="996.7" y="229" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="999.72" y="239.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (72,117,900 samples, 0.30%)</title><rect x="1114.1" y="405" width="3.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1117.10" y="415.5" ></text>
</g>
<g >
<title>operator delete (29,919,254 samples, 0.13%)</title><rect x="1181.5" y="549" width="1.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1184.50" y="559.5" ></text>
</g>
<g >
<title>operator new (10,601,162 samples, 0.04%)</title><rect x="1150.5" y="133" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.53" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,975,112 samples, 0.03%)</title><rect x="1175.6" y="229" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1178.61" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,744,431,512 samples, 7.32%)</title><rect x="893.8" y="421" width="86.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="896.83" y="431.5" >std::_Rb_t..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,984,945 samples, 0.02%)</title><rect x="847.6" y="485" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="850.58" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (173,139,996 samples, 0.73%)</title><rect x="1142.6" y="357" width="8.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1145.63" y="367.5" ></text>
</g>
<g >
<title>operator delete (2,307,326 samples, 0.01%)</title><rect x="1072.9" y="181" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1075.93" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,535,505 samples, 0.07%)</title><rect x="135.2" y="453" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="138.19" y="463.5" ></text>
</g>
<g >
<title>Call::~Call (5,605,806 samples, 0.02%)</title><rect x="747.8" y="437" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="750.85" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (142,476,840 samples, 0.60%)</title><rect x="1097.3" y="437" width="7.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1100.27" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,104,551 samples, 0.01%)</title><rect x="1026.7" y="309" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1029.69" y="319.5" ></text>
</g>
<g >
<title>operator new (17,567,973 samples, 0.07%)</title><rect x="1095.6" y="165" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1098.61" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,642,184 samples, 0.02%)</title><rect x="681.3" y="437" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="684.25" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,957,698 samples, 0.02%)</title><rect x="70.5" y="469" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="73.54" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (42,778,604 samples, 0.18%)</title><rect x="1108.3" y="405" width="2.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1111.32" y="415.5" ></text>
</g>
<g >
<title>cfree (5,148,628 samples, 0.02%)</title><rect x="1152.2" y="229" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1155.23" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (9,526,427 samples, 0.04%)</title><rect x="317.8" y="453" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="320.80" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (30,726,228 samples, 0.13%)</title><rect x="1175.5" y="325" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1178.50" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (87,422,704 samples, 0.37%)</title><rect x="534.3" y="501" width="4.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="537.32" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,069,036 samples, 0.06%)</title><rect x="1090.0" y="149" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1093.02" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (11,425,289 samples, 0.05%)</title><rect x="1128.5" y="341" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1131.52" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (110,704,267 samples, 0.46%)</title><rect x="149.2" y="517" width="5.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="152.24" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,575,642 samples, 0.02%)</title><rect x="1130.7" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1133.66" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (13,219,173 samples, 0.06%)</title><rect x="1024.8" y="341" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1027.85" y="351.5" ></text>
</g>
<g >
<title>operator new (36,757,755 samples, 0.15%)</title><rect x="1001.0" y="245" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1004.02" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,730,624 samples, 0.01%)</title><rect x="736.2" y="437" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="739.18" y="447.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (13,420,822 samples, 0.06%)</title><rect x="1057.5" y="229" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1060.46" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,315,722 samples, 0.01%)</title><rect x="1058.1" y="277" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1061.13" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,106,736 samples, 0.05%)</title><rect x="1085.3" y="117" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1088.28" y="127.5" ></text>
</g>
<g >
<title>main (442,561,417 samples, 1.86%)</title><rect x="338.1" y="533" width="21.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="341.13" y="543.5" >m..</text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,695,639 samples, 0.03%)</title><rect x="1189.5" y="501" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.47" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (2,548,914 samples, 0.01%)</title><rect x="980.5" y="421" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="983.46" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (9,289,851 samples, 0.04%)</title><rect x="1085.3" y="53" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1088.28" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,650,867,241 samples, 6.92%)</title><rect x="159.1" y="533" width="81.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="162.05" y="543.5" >[libc.so.6]</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,246,420 samples, 0.01%)</title><rect x="893.4" y="517" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="896.43" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (27,288,180 samples, 0.11%)</title><rect x="1086.1" y="69" width="1.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1089.15" y="79.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (8,811,950 samples, 0.04%)</title><rect x="244.4" y="469" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="247.38" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,389,472 samples, 0.02%)</title><rect x="749.2" y="325" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="752.24" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (2,307,194 samples, 0.01%)</title><rect x="1053.3" y="261" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1056.32" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (14,084,529 samples, 0.06%)</title><rect x="1150.4" y="197" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1153.41" y="207.5" ></text>
</g>
<g >
<title>get_inbetween_points (2,588,146 samples, 0.01%)</title><rect x="1093.7" y="165" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1096.67" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3,221,999 samples, 0.01%)</title><rect x="996.7" y="277" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="999.72" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (30,661,006 samples, 0.13%)</title><rect x="327.7" y="453" width="1.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="330.69" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (135,040,195 samples, 0.57%)</title><rect x="1037.6" y="357" width="6.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1040.65" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (18,734,760 samples, 0.08%)</title><rect x="740.6" y="437" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="743.63" y="447.5" ></text>
</g>
<g >
<title>operator new (81,078,184 samples, 0.34%)</title><rect x="974.7" y="245" width="4.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="977.71" y="255.5" ></text>
</g>
<g >
<title>gen_all_points (6,949,516 samples, 0.03%)</title><rect x="1118.4" y="453" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1121.39" y="463.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (28,466,499 samples, 0.12%)</title><rect x="1033.7" y="325" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1036.75" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,069,767 samples, 0.01%)</title><rect x="1129.1" y="325" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1132.09" y="335.5" ></text>
</g>
<g >
<title>malloc (1,010,486,199 samples, 4.24%)</title><rect x="360.0" y="533" width="50.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="363.03" y="543.5" >malloc</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,594,345 samples, 0.02%)</title><rect x="1153.7" y="325" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1156.72" y="335.5" ></text>
</g>
<g >
<title>malloc (120,145,553 samples, 0.50%)</title><rect x="1067.0" y="181" width="5.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1069.98" y="191.5" ></text>
</g>
<g >
<title>cfree (614,196,396 samples, 2.58%)</title><rect x="682.2" y="533" width="30.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="685.23" y="543.5" >cf..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,993,647 samples, 0.01%)</title><rect x="1094.8" y="117" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1097.85" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,753,348 samples, 0.01%)</title><rect x="726.9" y="501" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="729.91" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,978,730 samples, 0.01%)</title><rect x="1176.9" y="197" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1179.87" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (72,767,200 samples, 0.31%)</title><rect x="151.1" y="485" width="3.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="154.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (30,726,228 samples, 0.13%)</title><rect x="1175.5" y="309" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1178.50" y="319.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (2,095,596 samples, 0.01%)</title><rect x="627.9" y="517" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="630.90" y="527.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (3,498,772 samples, 0.01%)</title><rect x="1092.3" y="277" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1095.28" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,298,883 samples, 0.01%)</title><rect x="1061.9" y="293" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1064.89" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (8,567,983 samples, 0.04%)</title><rect x="1096.8" y="213" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1099.79" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (9,234,018 samples, 0.04%)</title><rect x="1139.6" y="229" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1142.61" y="239.5" ></text>
</g>
<g >
<title>operator new (2,269,966 samples, 0.01%)</title><rect x="984.2" y="421" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="987.24" y="431.5" ></text>
</g>
<g >
<title>get_inbetween_points (17,680,317 samples, 0.07%)</title><rect x="1128.3" y="405" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1131.33" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (16,142,575 samples, 0.07%)</title><rect x="503.8" y="501" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="506.81" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (969,075,464 samples, 4.06%)</title><rect x="562.2" y="533" width="48.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="565.24" y="543.5" >std:..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (61,773,430 samples, 0.26%)</title><rect x="1087.9" y="197" width="3.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1090.92" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (7,437,159 samples, 0.03%)</title><rect x="726.5" y="469" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="729.54" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,022,782 samples, 0.01%)</title><rect x="887.3" y="437" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="890.28" y="447.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (8,125,783 samples, 0.03%)</title><rect x="932.3" y="181" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="935.33" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,752,790,190 samples, 7.35%)</title><rect x="893.7" y="453" width="86.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="896.72" y="463.5" >std::_Rb_t..</text>
</g>
<g >
<title>[libc.so.6] (33,461,960 samples, 0.14%)</title><rect x="894.1" y="405" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="897.14" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (20,663,741 samples, 0.09%)</title><rect x="931.3" y="181" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="934.31" y="191.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (29,841,328 samples, 0.13%)</title><rect x="1030.9" y="389" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1033.95" y="399.5" ></text>
</g>
<g >
<title>Call::~Call (4,362,335 samples, 0.02%)</title><rect x="627.7" y="517" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="630.68" y="527.5" ></text>
</g>
<g >
<title>Call::Call (14,801,934 samples, 0.06%)</title><rect x="887.6" y="485" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="890.60" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (6,717,750 samples, 0.03%)</title><rect x="727.2" y="485" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="730.24" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (61,039,897 samples, 0.26%)</title><rect x="315.2" y="517" width="3.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="318.25" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (22,196,973 samples, 0.09%)</title><rect x="1003.2" y="341" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1006.21" y="351.5" ></text>
</g>
<g >
<title>roundf32x (18,235,278 samples, 0.08%)</title><rect x="831.4" y="533" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="834.39" y="543.5" ></text>
</g>
<g >
<title>get_inbetween_points (2,267,961 samples, 0.01%)</title><rect x="1059.3" y="325" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1062.33" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,559,564 samples, 0.01%)</title><rect x="888.7" y="389" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="891.69" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,378,246 samples, 0.01%)</title><rect x="1125.6" y="245" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1128.55" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,073,658 samples, 0.02%)</title><rect x="82.4" y="421" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="85.43" y="431.5" ></text>
</g>
<g >
<title>operator new (3,883,776 samples, 0.02%)</title><rect x="1041.6" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1044.59" y="191.5" ></text>
</g>
<g >
<title>operator new (10,272,896 samples, 0.04%)</title><rect x="1128.6" y="277" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1131.57" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (185,213,491 samples, 0.78%)</title><rect x="1160.7" y="293" width="9.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1163.69" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (22,866,484 samples, 0.10%)</title><rect x="623.1" y="501" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="626.12" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (52,609,517 samples, 0.22%)</title><rect x="151.1" y="437" width="2.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="154.12" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (6,046,751 samples, 0.03%)</title><rect x="627.1" y="453" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="630.08" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (46,549,131 samples, 0.20%)</title><rect x="1151.4" y="293" width="2.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1154.37" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,588,928 samples, 0.02%)</title><rect x="1177.1" y="101" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1180.09" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (198,345,768 samples, 0.83%)</title><rect x="1132.2" y="373" width="9.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1135.22" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (4,155,467 samples, 0.02%)</title><rect x="504.4" y="453" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="507.39" y="463.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (44,356,339 samples, 0.19%)</title><rect x="624.3" y="469" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="627.25" y="479.5" ></text>
</g>
<g >
<title>cfree (13,948,491 samples, 0.06%)</title><rect x="1099.3" y="325" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1102.30" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (57,206,636 samples, 0.24%)</title><rect x="243.6" y="517" width="2.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="246.62" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (163,830,619 samples, 0.69%)</title><rect x="970.9" y="261" width="8.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="973.93" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,055,255 samples, 0.01%)</title><rect x="546.7" y="437" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="549.68" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;Call, Call&amp;, Call*&gt;::operator-- (3,026,090 samples, 0.01%)</title><rect x="750.7" y="485" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="753.68" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,001,805 samples, 0.01%)</title><rect x="1071.9" y="133" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1074.86" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,376,419 samples, 0.02%)</title><rect x="1157.5" y="197" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1160.47" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (106,081,013 samples, 0.44%)</title><rect x="1092.0" y="325" width="5.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1095.02" y="335.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,323,288 samples, 0.01%)</title><rect x="1150.2" y="165" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1153.17" y="175.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (6,523,824 samples, 0.03%)</title><rect x="627.1" y="517" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="630.06" y="527.5" ></text>
</g>
<g >
<title>malloc (26,290,469 samples, 0.11%)</title><rect x="997.3" y="341" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1000.30" y="351.5" ></text>
</g>
<g >
<title>Call::~Call (517,163,322 samples, 2.17%)</title><rect x="1027.9" y="469" width="25.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1030.91" y="479.5" >C..</text>
</g>
<g >
<title>cfree (11,118,161 samples, 0.05%)</title><rect x="940.5" y="373" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="943.46" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (15,998,937 samples, 0.07%)</title><rect x="353.1" y="389" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="356.08" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,820,341 samples, 0.09%)</title><rect x="1168.8" y="277" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1171.82" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (46,754,372 samples, 0.20%)</title><rect x="1028.0" y="421" width="2.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1031.04" y="431.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (8,788,097 samples, 0.04%)</title><rect x="556.0" y="517" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="559.02" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,807,797 samples, 0.01%)</title><rect x="1063.0" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1066.03" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (4,362,335 samples, 0.02%)</title><rect x="627.7" y="501" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="630.68" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (73,580,361 samples, 0.31%)</title><rect x="737.9" y="469" width="3.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="740.91" y="479.5" ></text>
</g>
<g >
<title>Call::~Call (99,389,117 samples, 0.42%)</title><rect x="742.5" y="517" width="5.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="745.54" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,333,577 samples, 0.01%)</title><rect x="938.9" y="149" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="941.94" y="159.5" ></text>
</g>
<g >
<title>DW.ref.__gxx_personality_v0 (51,584,022 samples, 0.22%)</title><rect x="10.0" y="549" width="2.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,964,201 samples, 0.01%)</title><rect x="337.4" y="437" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="340.37" y="447.5" ></text>
</g>
<g >
<title>malloc (4,666,092 samples, 0.02%)</title><rect x="1064.9" y="197" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1067.85" y="207.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,486,449 samples, 0.01%)</title><rect x="1053.9" y="389" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1056.92" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,474,797 samples, 0.03%)</title><rect x="1127.8" y="341" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1130.79" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,339,404 samples, 0.01%)</title><rect x="1035.8" y="405" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1038.78" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (30,661,006 samples, 0.13%)</title><rect x="327.7" y="437" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="330.69" y="447.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (15,387,787 samples, 0.06%)</title><rect x="724.1" y="453" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="727.14" y="463.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (7,572,238 samples, 0.03%)</title><rect x="241.8" y="485" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="244.84" y="495.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (12,832,906 samples, 0.05%)</title><rect x="627.4" y="549" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="630.38" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,665,168 samples, 0.03%)</title><rect x="1090.4" y="133" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1093.38" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,812,258 samples, 0.04%)</title><rect x="979.1" y="229" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="982.14" y="239.5" ></text>
</g>
<g >
<title>gen_all_points (5,556,633 samples, 0.02%)</title><rect x="1179.1" y="549" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1182.10" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,595,266 samples, 0.02%)</title><rect x="1095.1" y="165" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1098.06" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (10,177,310 samples, 0.04%)</title><rect x="1056.4" y="229" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1059.40" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (7,900,776 samples, 0.03%)</title><rect x="357.1" y="389" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="360.06" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,895,010 samples, 0.03%)</title><rect x="1177.0" y="261" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1180.04" y="271.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (96,889,851 samples, 0.41%)</title><rect x="352.7" y="517" width="4.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="355.66" y="527.5" ></text>
</g>
<g >
<title>malloc (11,299,848 samples, 0.05%)</title><rect x="1109.3" y="325" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1112.34" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (3,021,125 samples, 0.01%)</title><rect x="888.9" y="405" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="891.93" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (59,320,880 samples, 0.25%)</title><rect x="967.4" y="149" width="2.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="970.36" y="159.5" ></text>
</g>
<g >
<title>operator new (43,007,992 samples, 0.18%)</title><rect x="968.0" y="133" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="970.97" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,326,159 samples, 0.01%)</title><rect x="1052.3" y="229" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1055.28" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (14,084,529 samples, 0.06%)</title><rect x="1150.4" y="229" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1153.41" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,589,416 samples, 0.03%)</title><rect x="1149.8" y="149" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1152.80" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (31,190,625 samples, 0.13%)</title><rect x="748.2" y="405" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="751.16" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (7,733,279 samples, 0.03%)</title><rect x="1060.3" y="309" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1063.34" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,992,101 samples, 0.01%)</title><rect x="1090.8" y="85" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1093.83" y="95.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (25,185,779 samples, 0.11%)</title><rect x="71.8" y="485" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="74.82" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,069,404 samples, 0.03%)</title><rect x="1108.4" y="341" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1111.43" y="351.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (2,999,295 samples, 0.01%)</title><rect x="682.0" y="501" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="685.02" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (5,821,433 samples, 0.02%)</title><rect x="1032.0" y="245" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1034.99" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,154,997 samples, 0.02%)</title><rect x="83.8" y="373" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="86.78" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (183,267,075 samples, 0.77%)</title><rect x="1078.6" y="197" width="9.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1081.63" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,594,345 samples, 0.02%)</title><rect x="1153.7" y="277" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1156.72" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (3,752,371 samples, 0.02%)</title><rect x="716.6" y="357" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="719.60" y="367.5" ></text>
</g>
<g >
<title>roundf32x (3,424,430 samples, 0.01%)</title><rect x="1185.5" y="549" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1188.54" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (244,228,317 samples, 1.02%)</title><rect x="875.2" y="517" width="12.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="878.20" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (184,208,152 samples, 0.77%)</title><rect x="1078.6" y="277" width="9.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1081.63" y="287.5" ></text>
</g>
<g >
<title>operator new (3,023,149 samples, 0.01%)</title><rect x="906.7" y="389" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="909.66" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,463,247 samples, 0.06%)</title><rect x="1174.8" y="245" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1177.81" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,000,078 samples, 0.02%)</title><rect x="1125.6" y="277" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1128.55" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (14,090,616 samples, 0.06%)</title><rect x="741.8" y="453" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="744.84" y="463.5" ></text>
</g>
<g >
<title>cfree (21,630,741 samples, 0.09%)</title><rect x="629.3" y="533" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="632.33" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,832,577 samples, 0.08%)</title><rect x="977.8" y="229" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="980.79" y="239.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (25,964,581 samples, 0.11%)</title><rect x="715.9" y="485" width="1.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="718.94" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (4,384,730 samples, 0.02%)</title><rect x="346.6" y="453" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="349.58" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,115,517 samples, 0.02%)</title><rect x="1179.7" y="469" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1182.74" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="389" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1109.38" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (16,142,575 samples, 0.07%)</title><rect x="503.8" y="485" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="506.81" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,753,942 samples, 0.01%)</title><rect x="1139.2" y="245" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1142.24" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (59,320,880 samples, 0.25%)</title><rect x="967.4" y="181" width="2.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="970.36" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,754,147 samples, 0.03%)</title><rect x="640.6" y="517" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="643.59" y="527.5" ></text>
</g>
<g >
<title>cfree (12,184,692 samples, 0.05%)</title><rect x="899.5" y="309" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="902.54" y="319.5" ></text>
</g>
<g >
<title>cfree (5,064,429 samples, 0.02%)</title><rect x="1177.1" y="229" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1180.07" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (107,003,860 samples, 0.45%)</title><rect x="933.8" y="197" width="5.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="936.82" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;Call&gt;::deallocate (8,789,060 samples, 0.04%)</title><rect x="1156.0" y="389" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1158.99" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (18,323,355 samples, 0.08%)</title><rect x="1024.7" y="389" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1027.74" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,374,556 samples, 0.02%)</title><rect x="242.0" y="373" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="244.96" y="383.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (10,782,191 samples, 0.05%)</title><rect x="77.6" y="485" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="80.60" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (6,749,842 samples, 0.03%)</title><rect x="136.6" y="469" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="139.65" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (570,082,451 samples, 2.39%)</title><rect x="942.1" y="309" width="28.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="945.13" y="319.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (4,374,556 samples, 0.02%)</title><rect x="242.0" y="389" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="244.96" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,737,862 samples, 0.02%)</title><rect x="1094.7" y="165" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1097.71" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (87,422,704 samples, 0.37%)</title><rect x="534.3" y="469" width="4.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="537.32" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,974,198 samples, 0.01%)</title><rect x="72.1" y="421" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="75.13" y="431.5" ></text>
</g>
<g >
<title>malloc (3,482,495 samples, 0.01%)</title><rect x="1099.0" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1102.05" y="351.5" ></text>
</g>
<g >
<title>operator new (9,887,306 samples, 0.04%)</title><rect x="885.0" y="277" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="888.03" y="287.5" ></text>
</g>
<g >
<title>cfree (3,296,430 samples, 0.01%)</title><rect x="1108.8" y="341" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1111.84" y="351.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (3,932,796 samples, 0.02%)</title><rect x="733.7" y="517" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="736.72" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (41,189,098 samples, 0.17%)</title><rect x="1050.1" y="373" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1053.12" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (10,955,565 samples, 0.05%)</title><rect x="888.3" y="437" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="891.35" y="447.5" ></text>
</g>
<g >
<title>cfree (18,507,293 samples, 0.08%)</title><rect x="1135.1" y="261" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1138.11" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (645,198,201 samples, 2.71%)</title><rect x="907.3" y="389" width="31.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="910.29" y="399.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (61,773,430 samples, 0.26%)</title><rect x="1087.9" y="213" width="3.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1090.92" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (164,174,915 samples, 0.69%)</title><rect x="1118.2" y="469" width="8.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1121.21" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (15,798,230 samples, 0.07%)</title><rect x="356.3" y="389" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="359.28" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,102,796 samples, 0.01%)</title><rect x="510.3" y="453" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="513.30" y="463.5" ></text>
</g>
<g >
<title>cfree (11,823,378 samples, 0.05%)</title><rect x="1157.9" y="245" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1160.88" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (7,397,172 samples, 0.03%)</title><rect x="1053.8" y="453" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1056.75" y="463.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (74,050,767 samples, 0.31%)</title><rect x="720.5" y="437" width="3.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="723.47" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,041,222 samples, 0.02%)</title><rect x="1041.5" y="197" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1044.55" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (27,744,375 samples, 0.12%)</title><rect x="1154.4" y="469" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1157.37" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,730,624 samples, 0.01%)</title><rect x="736.2" y="453" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="739.18" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (29,643,631 samples, 0.12%)</title><rect x="1140.4" y="213" width="1.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1143.42" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,595,266 samples, 0.02%)</title><rect x="1095.1" y="133" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1098.06" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (3,062,080 samples, 0.01%)</title><rect x="728.8" y="469" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="731.81" y="479.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (22,582,978 samples, 0.09%)</title><rect x="156.4" y="485" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="159.36" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,050,478 samples, 0.04%)</title><rect x="1176.6" y="245" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1179.57" y="255.5" ></text>
</g>
<g >
<title>DW.ref.__gxx_personality_v0 (11,608,997 samples, 0.05%)</title><rect x="643.5" y="533" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="646.52" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (27,060,878 samples, 0.11%)</title><rect x="1095.4" y="229" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1098.42" y="239.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,005,147 samples, 0.01%)</title><rect x="1126.1" y="405" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1129.14" y="415.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,081,893 samples, 0.03%)</title><rect x="242.7" y="437" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="245.70" y="447.5" ></text>
</g>
<g >
<title>operator delete (7,010,428 samples, 0.03%)</title><rect x="1017.7" y="325" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1020.70" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (2,122,035 samples, 0.01%)</title><rect x="1092.5" y="293" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1095.45" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,536,388 samples, 0.01%)</title><rect x="627.6" y="501" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="630.56" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (15,948,525 samples, 0.07%)</title><rect x="1157.8" y="293" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1160.84" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (9,344,189 samples, 0.04%)</title><rect x="736.4" y="517" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="739.36" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,102,796 samples, 0.01%)</title><rect x="510.3" y="437" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="513.30" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (46,199,854 samples, 0.19%)</title><rect x="542.3" y="453" width="2.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="545.31" y="463.5" ></text>
</g>
<g >
<title>cfree (6,065,794 samples, 0.03%)</title><rect x="1166.8" y="181" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1169.83" y="191.5" ></text>
</g>
<g >
<title>operator delete (2,075,076 samples, 0.01%)</title><rect x="1107.8" y="453" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1110.78" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (7,658,042 samples, 0.03%)</title><rect x="725.6" y="437" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="728.58" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (2,106,798 samples, 0.01%)</title><rect x="726.4" y="485" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="729.44" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,589,416 samples, 0.03%)</title><rect x="1149.8" y="133" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1152.80" y="143.5" ></text>
</g>
<g >
<title>choose_next_point (3,687,562 samples, 0.02%)</title><rect x="681.0" y="517" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="684.00" y="527.5" ></text>
</g>
<g >
<title>Call::Call (50,255,139 samples, 0.21%)</title><rect x="78.7" y="517" width="2.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="81.72" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,746,730,793 samples, 24.10%)</title><rect x="893.6" y="517" width="284.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="896.59" y="527.5" >[libc.so.6]</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (5,553,549 samples, 0.02%)</title><rect x="735.9" y="469" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="738.90" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,430,476 samples, 0.02%)</title><rect x="1044.0" y="245" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1046.99" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (88,597,034 samples, 0.37%)</title><rect x="1097.3" y="357" width="4.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1100.27" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (11,425,289 samples, 0.05%)</title><rect x="1128.5" y="293" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1131.52" y="303.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,327,739 samples, 0.01%)</title><rect x="1175.4" y="181" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1178.36" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (20,192,864 samples, 0.08%)</title><rect x="979.1" y="309" width="1.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="982.14" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (17,484,503 samples, 0.07%)</title><rect x="845.8" y="453" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="848.85" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (50,378,091 samples, 0.21%)</title><rect x="544.6" y="501" width="2.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="547.59" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (30,578,370 samples, 0.13%)</title><rect x="1075.9" y="85" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1078.92" y="95.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,295,596 samples, 0.01%)</title><rect x="1015.6" y="229" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1018.59" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,022,782 samples, 0.01%)</title><rect x="887.3" y="517" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="890.28" y="527.5" ></text>
</g>
<g >
<title>main (21,283,068 samples, 0.09%)</title><rect x="681.2" y="517" width="1.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="684.18" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,061,657 samples, 0.01%)</title><rect x="681.9" y="373" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="684.88" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,022,782 samples, 0.01%)</title><rect x="887.3" y="405" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="890.28" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (31,871,445 samples, 0.13%)</title><rect x="748.1" y="485" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="751.12" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,430,476 samples, 0.02%)</title><rect x="1044.0" y="229" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1046.99" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,345,129 samples, 0.04%)</title><rect x="1025.0" y="277" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1027.98" y="287.5" ></text>
</g>
<g >
<title>get_inbetween_points (17,188,734 samples, 0.07%)</title><rect x="1066.1" y="181" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1069.13" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (134,899,162 samples, 0.57%)</title><rect x="878.8" y="421" width="6.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="881.84" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::size (4,882,221 samples, 0.02%)</title><rect x="892.1" y="517" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="895.13" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (13,219,173 samples, 0.06%)</title><rect x="1024.8" y="373" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1027.85" y="383.5" ></text>
</g>
<g >
<title>cfree (13,610,925 samples, 0.06%)</title><rect x="1178.2" y="549" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1181.17" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (14,401,187 samples, 0.06%)</title><rect x="1072.2" y="165" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1075.19" y="175.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (4,155,467 samples, 0.02%)</title><rect x="504.4" y="421" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="507.39" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (39,800,149 samples, 0.17%)</title><rect x="1095.3" y="293" width="2.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1098.29" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (8,839,452 samples, 0.04%)</title><rect x="80.3" y="421" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="83.34" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (38,839,812 samples, 0.16%)</title><rect x="1075.5" y="197" width="2.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1078.55" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,810,053 samples, 0.02%)</title><rect x="138.1" y="517" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="141.10" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (313,266,241 samples, 1.31%)</title><rect x="628.0" y="549" width="15.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="631.02" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (5,553,467 samples, 0.02%)</title><rect x="80.9" y="437" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="83.93" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,206,585 samples, 0.01%)</title><rect x="1176.0" y="213" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1178.99" y="223.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (99,777,021 samples, 0.42%)</title><rect x="292.8" y="501" width="4.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="295.80" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (26,122,172 samples, 0.11%)</title><rect x="1149.0" y="245" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1151.99" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (11,526,242 samples, 0.05%)</title><rect x="317.7" y="485" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="320.70" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (28,353,492 samples, 0.12%)</title><rect x="843.2" y="469" width="1.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="846.16" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,156,348 samples, 0.02%)</title><rect x="1090.5" y="53" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1093.48" y="63.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,084,988 samples, 0.01%)</title><rect x="1041.0" y="245" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1043.99" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (5,247,093 samples, 0.02%)</title><rect x="242.0" y="405" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="244.96" y="415.5" ></text>
</g>
<g >
<title>operator new (4,414,356 samples, 0.02%)</title><rect x="1073.0" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1076.04" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (42,547,313 samples, 0.18%)</title><rect x="1108.3" y="389" width="2.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1111.34" y="399.5" ></text>
</g>
<g >
<title>operator new (86,125,341 samples, 0.36%)</title><rect x="934.7" y="149" width="4.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="937.68" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,706,671 samples, 0.02%)</title><rect x="1051.1" y="165" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1054.11" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,019,095 samples, 0.01%)</title><rect x="69.3" y="469" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="72.30" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (2,323,948 samples, 0.01%)</title><rect x="1032.3" y="261" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1035.31" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (8,567,983 samples, 0.04%)</title><rect x="1096.8" y="197" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1099.79" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (8,567,983 samples, 0.04%)</title><rect x="1096.8" y="181" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1099.79" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,343,006 samples, 0.01%)</title><rect x="891.5" y="421" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="894.49" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (25,418,420 samples, 0.11%)</title><rect x="157.5" y="517" width="1.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="160.48" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (4,152,403 samples, 0.02%)</title><rect x="1061.7" y="261" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1064.66" y="271.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (35,677,287 samples, 0.15%)</title><rect x="885.5" y="469" width="1.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="888.52" y="479.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,162,910 samples, 0.01%)</title><rect x="627.4" y="501" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="630.38" y="511.5" ></text>
</g>
<g >
<title>Call::Call (5,296,686 samples, 0.02%)</title><rect x="644.1" y="501" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="647.14" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (289,486,670 samples, 1.21%)</title><rect x="1063.3" y="245" width="14.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1066.28" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,560,366 samples, 0.01%)</title><rect x="1026.7" y="373" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1029.69" y="383.5" ></text>
</g>
<g >
<title>cfree (13,646,754 samples, 0.06%)</title><rect x="1156.7" y="261" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.71" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,009,471 samples, 0.01%)</title><rect x="1177.7" y="341" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1180.69" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,650,728 samples, 0.04%)</title><rect x="1050.3" y="277" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1053.34" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,003,597 samples, 0.03%)</title><rect x="1088.0" y="165" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1090.96" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,798,130 samples, 0.04%)</title><rect x="1096.8" y="261" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1099.79" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,192,297 samples, 0.02%)</title><rect x="1096.6" y="101" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1099.55" y="111.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;Call, Call&amp;, Call*&gt;::operator-- (2,567,614 samples, 0.01%)</title><rect x="359.8" y="485" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="362.84" y="495.5" ></text>
</g>
<g >
<title>cfree (4,855,846 samples, 0.02%)</title><rect x="1156.0" y="373" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.01" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,595,266 samples, 0.02%)</title><rect x="1095.1" y="117" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1098.06" y="127.5" ></text>
</g>
<g >
<title>operator new (207,475,822 samples, 0.87%)</title><rect x="1065.1" y="197" width="10.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1068.14" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,268,417 samples, 0.03%)</title><rect x="1003.9" y="245" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1006.93" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (46,544,130 samples, 0.20%)</title><rect x="1166.5" y="277" width="2.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1169.52" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,253,191 samples, 0.01%)</title><rect x="336.7" y="421" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="339.72" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (11,496,304 samples, 0.05%)</title><rect x="1185.7" y="549" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1188.71" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (4,602,803 samples, 0.02%)</title><rect x="644.2" y="453" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="647.16" y="463.5" ></text>
</g>
<g >
<title>gen_all_points (19,373,437 samples, 0.08%)</title><rect x="503.6" y="517" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="506.65" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,303,068 samples, 0.01%)</title><rect x="1156.1" y="261" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1159.13" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (3,437,251 samples, 0.01%)</title><rect x="888.2" y="437" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="891.16" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (557,461,528 samples, 2.34%)</title><rect x="1126.5" y="437" width="27.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1129.47" y="447.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,651,280 samples, 0.02%)</title><rect x="978.8" y="133" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="981.79" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (13,112,776 samples, 0.05%)</title><rect x="884.9" y="357" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="887.87" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (741,683,053 samples, 3.11%)</title><rect x="1054.9" y="373" width="36.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1057.87" y="383.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (6,775,055 samples, 0.03%)</title><rect x="1044.0" y="293" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1046.99" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (4,826,226 samples, 0.02%)</title><rect x="644.2" y="469" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="647.16" y="479.5" ></text>
</g>
<g >
<title>decltype  (16,729,080 samples, 0.07%)</title><rect x="153.9" y="437" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="156.89" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (12,269,985 samples, 0.05%)</title><rect x="1052.9" y="325" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1055.90" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (11,785,846 samples, 0.05%)</title><rect x="546.2" y="485" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="549.24" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (2,330,940 samples, 0.01%)</title><rect x="630.5" y="501" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="633.53" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (122,688,644 samples, 0.51%)</title><rect x="1019.8" y="405" width="6.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1022.84" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (172,668,216 samples, 0.72%)</title><rect x="1142.6" y="309" width="8.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1145.63" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (2,546,417 samples, 0.01%)</title><rect x="643.5" y="517" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="646.53" y="527.5" ></text>
</g>
<g >
<title>decltype (2,612,273 samples, 0.01%)</title><rect x="982.8" y="405" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="985.75" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,409,869 samples, 0.08%)</title><rect x="1043.4" y="325" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1046.41" y="335.5" ></text>
</g>
<g >
<title>operator new (3,093,085 samples, 0.01%)</title><rect x="1043.2" y="325" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1046.17" y="335.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::pop (3,953,110 samples, 0.02%)</title><rect x="888.9" y="485" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="891.89" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (2,775,994 samples, 0.01%)</title><rect x="504.3" y="453" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="507.25" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (2,075,068 samples, 0.01%)</title><rect x="644.7" y="485" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="647.67" y="495.5" ></text>
</g>
<g >
<title>Call::~Call (2,091,248 samples, 0.01%)</title><rect x="682.1" y="437" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="685.06" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;Call&gt;::deallocate (8,789,060 samples, 0.04%)</title><rect x="1156.0" y="405" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1158.99" y="415.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (37,524,601 samples, 0.16%)</title><rect x="887.4" y="517" width="1.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="890.43" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,209,298 samples, 0.03%)</title><rect x="1172.3" y="213" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1175.29" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (27,060,878 samples, 0.11%)</title><rect x="1095.4" y="181" width="1.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1098.42" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (5,508,652 samples, 0.02%)</title><rect x="644.4" y="469" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="647.40" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,344,579 samples, 0.01%)</title><rect x="1044.2" y="245" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1047.20" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (198,345,768 samples, 0.83%)</title><rect x="1132.2" y="357" width="9.8" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1135.22" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (2,096,990 samples, 0.01%)</title><rect x="1058.6" y="229" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1061.61" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (42,547,313 samples, 0.18%)</title><rect x="1108.3" y="357" width="2.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1111.34" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (59,683,077 samples, 0.25%)</title><rect x="1108.0" y="453" width="3.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1111.00" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (73,670,195 samples, 0.31%)</title><rect x="999.5" y="325" width="3.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1002.55" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,888,471 samples, 0.02%)</title><rect x="1177.6" y="357" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1180.60" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,538,698 samples, 0.01%)</title><rect x="1188.8" y="533" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1191.82" y="543.5" ></text>
</g>
<g >
<title>malloc (44,231,407 samples, 0.19%)</title><rect x="1136.0" y="261" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1139.05" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (403,408,237 samples, 1.69%)</title><rect x="984.4" y="405" width="19.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="987.36" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (10,462,757 samples, 0.04%)</title><rect x="1019.3" y="293" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1022.32" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (6,267,531 samples, 0.03%)</title><rect x="78.1" y="501" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="81.14" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (24,175,025 samples, 0.10%)</title><rect x="725.2" y="485" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="728.24" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,378,246 samples, 0.01%)</title><rect x="1125.6" y="229" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1128.55" y="239.5" ></text>
</g>
<g >
<title>cfree (5,318,593 samples, 0.02%)</title><rect x="1127.0" y="405" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1130.02" y="415.5" ></text>
</g>
<g >
<title>Call::Call (10,177,310 samples, 0.04%)</title><rect x="1056.4" y="245" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1059.40" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,490,636 samples, 0.03%)</title><rect x="978.3" y="133" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="981.34" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (32,211,648 samples, 0.14%)</title><rect x="1186.6" y="549" width="1.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1189.58" y="559.5" ></text>
</g>
<g >
<title>[anon] (9,463,263,971 samples, 39.69%)</title><rect x="159.0" y="549" width="468.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="162.04" y="559.5" >[anon]</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (8,550,039 samples, 0.04%)</title><rect x="727.2" y="501" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="730.15" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,330,557 samples, 0.01%)</title><rect x="77.8" y="453" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="80.78" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,785,250 samples, 0.02%)</title><rect x="1169.5" y="165" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1172.49" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,827,943 samples, 0.02%)</title><rect x="1153.7" y="357" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1156.70" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (11,177,663 samples, 0.05%)</title><rect x="324.8" y="421" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="327.85" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,767,472 samples, 0.01%)</title><rect x="337.2" y="453" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="340.20" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,715,056 samples, 0.06%)</title><rect x="1122.0" y="325" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1124.96" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (289,486,670 samples, 1.21%)</title><rect x="1063.3" y="213" width="14.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1066.28" y="223.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,816,885 samples, 0.01%)</title><rect x="1085.7" y="85" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1088.74" y="95.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,209,298 samples, 0.03%)</title><rect x="1172.3" y="165" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1175.29" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (4,187,890 samples, 0.02%)</title><rect x="1111.0" y="453" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1113.96" y="463.5" ></text>
</g>
<g >
<title>malloc (26,997,452 samples, 0.11%)</title><rect x="1016.4" y="325" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1019.37" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (63,672,936 samples, 0.27%)</title><rect x="294.6" y="421" width="3.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="297.59" y="431.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (7,595,758 samples, 0.03%)</title><rect x="643.1" y="453" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="646.11" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,323,035 samples, 0.02%)</title><rect x="1175.1" y="165" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1178.10" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (294,438,683 samples, 1.23%)</title><rect x="1005.3" y="389" width="14.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1008.27" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,246,046 samples, 0.01%)</title><rect x="245.1" y="469" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="248.13" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (159,302,761 samples, 0.67%)</title><rect x="599.5" y="453" width="7.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="602.49" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (2,528,473 samples, 0.01%)</title><rect x="353.9" y="405" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="356.87" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (59,683,077 samples, 0.25%)</title><rect x="1108.0" y="437" width="3.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1111.00" y="447.5" ></text>
</g>
<g >
<title>gen_all_points (43,109,052 samples, 0.18%)</title><rect x="70.9" y="533" width="2.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="73.93" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (36,908,684 samples, 0.15%)</title><rect x="899.2" y="341" width="1.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="902.23" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,104,551 samples, 0.01%)</title><rect x="1026.7" y="341" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1029.69" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,570,519 samples, 0.01%)</title><rect x="1128.2" y="373" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1131.18" y="383.5" ></text>
</g>
<g >
<title>nvme_irq (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="357" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1109.38" y="367.5" ></text>
</g>
<g >
<title>choose_next_point (301,931,438 samples, 1.27%)</title><rect x="712.6" y="533" width="15.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="715.63" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,095,079 samples, 0.01%)</title><rect x="893.0" y="453" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="895.97" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,206,585 samples, 0.01%)</title><rect x="1176.0" y="149" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1178.99" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (10,416,573 samples, 0.04%)</title><rect x="1127.6" y="357" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1130.59" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (6,696,811 samples, 0.03%)</title><rect x="157.8" y="469" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="160.82" y="479.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,312,770 samples, 0.02%)</title><rect x="505.7" y="469" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="508.68" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,303,068 samples, 0.01%)</title><rect x="1156.1" y="277" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1159.13" y="287.5" ></text>
</g>
<g >
<title>malloc (3,737,951 samples, 0.02%)</title><rect x="979.8" y="213" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="982.77" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,573,077 samples, 0.01%)</title><rect x="1091.9" y="341" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1094.87" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,409,155 samples, 0.02%)</title><rect x="1093.3" y="181" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1096.26" y="191.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,005,147 samples, 0.01%)</title><rect x="1126.1" y="421" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1129.14" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (41,613,551 samples, 0.17%)</title><rect x="1093.2" y="229" width="2.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1096.23" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (6,913,764 samples, 0.03%)</title><rect x="742.5" y="453" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="745.54" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (378,668,805 samples, 1.59%)</title><rect x="1159.1" y="373" width="18.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1162.10" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,095,079 samples, 0.01%)</title><rect x="893.0" y="485" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="895.97" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (13,219,173 samples, 0.06%)</title><rect x="1024.8" y="357" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1027.85" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (6,713,015 samples, 0.03%)</title><rect x="80.9" y="469" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="83.87" y="479.5" ></text>
</g>
<g >
<title>Call::~Call (5,508,652 samples, 0.02%)</title><rect x="644.4" y="501" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="647.40" y="511.5" ></text>
</g>
<g >
<title>malloc (2,318,689 samples, 0.01%)</title><rect x="1037.2" y="421" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1040.19" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (134,899,162 samples, 0.57%)</title><rect x="878.8" y="453" width="6.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="881.84" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (53,400,879 samples, 0.22%)</title><rect x="1101.7" y="373" width="2.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1104.66" y="383.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,495,052 samples, 0.02%)</title><rect x="1036.9" y="373" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1039.89" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,192,297 samples, 0.02%)</title><rect x="1096.6" y="69" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1099.55" y="79.5" ></text>
</g>
<g >
<title>malloc (10,358,395 samples, 0.04%)</title><rect x="1152.5" y="229" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1155.50" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (13,970,570 samples, 0.06%)</title><rect x="324.7" y="469" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="327.71" y="479.5" ></text>
</g>
<g >
<title>decltype  (5,586,212 samples, 0.02%)</title><rect x="624.0" y="437" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="626.98" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,154,997 samples, 0.02%)</title><rect x="83.8" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="86.78" y="399.5" ></text>
</g>
<g >
<title>Call::~Call (54,213,790 samples, 0.23%)</title><rect x="1156.4" y="405" width="2.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1159.42" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (65,343,901 samples, 0.27%)</title><rect x="971.0" y="245" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="974.02" y="255.5" ></text>
</g>
<g >
<title>operator delete (54,230,515 samples, 0.23%)</title><rect x="102.4" y="533" width="2.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="105.38" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,408,915 samples, 0.03%)</title><rect x="1169.5" y="245" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1172.49" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,192,297 samples, 0.02%)</title><rect x="1096.6" y="53" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1099.55" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (739,859,828 samples, 3.10%)</title><rect x="1054.9" y="357" width="36.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1057.88" y="367.5" >std..</text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (4,155,467 samples, 0.02%)</title><rect x="504.4" y="437" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="507.39" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,753,348 samples, 0.01%)</title><rect x="726.9" y="517" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="729.91" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (3,033,231 samples, 0.01%)</title><rect x="1032.3" y="277" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1035.27" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (91,084,858 samples, 0.38%)</title><rect x="339.6" y="453" width="4.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="342.57" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (2,999,295 samples, 0.01%)</title><rect x="682.0" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="685.02" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,073,114 samples, 0.01%)</title><rect x="1037.8" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1040.82" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (2,582,155 samples, 0.01%)</title><rect x="1060.2" y="309" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1063.21" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,628,083 samples, 0.07%)</title><rect x="1188.2" y="549" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1191.18" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (73,165,523 samples, 0.31%)</title><rect x="1087.7" y="293" width="3.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1090.75" y="303.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,591,817 samples, 0.02%)</title><rect x="891.7" y="469" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="894.66" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,221,999 samples, 0.01%)</title><rect x="996.7" y="293" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="999.72" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (74,050,767 samples, 0.31%)</title><rect x="720.5" y="469" width="3.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="723.47" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,112,776 samples, 0.05%)</title><rect x="884.9" y="293" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="887.87" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,041,222 samples, 0.02%)</title><rect x="1041.5" y="277" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1044.55" y="287.5" ></text>
</g>
<g >
<title>Call::~Call (7,384,403 samples, 0.03%)</title><rect x="292.4" y="517" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="295.43" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,323,035 samples, 0.02%)</title><rect x="1175.1" y="181" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1178.10" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (6,474,251 samples, 0.03%)</title><rect x="1139.6" y="197" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1142.61" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (3,244,946 samples, 0.01%)</title><rect x="724.9" y="517" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="727.90" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,595,266 samples, 0.02%)</title><rect x="1095.1" y="85" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1098.06" y="95.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,327,739 samples, 0.01%)</title><rect x="1175.4" y="197" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1178.36" y="207.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (2,091,248 samples, 0.01%)</title><rect x="682.1" y="453" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="685.06" y="463.5" ></text>
</g>
<g >
<title>Call::Call (7,240,358 samples, 0.03%)</title><rect x="68.4" y="453" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="71.43" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (73,670,195 samples, 0.31%)</title><rect x="999.5" y="293" width="3.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1002.55" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (96,889,851 samples, 0.41%)</title><rect x="352.7" y="501" width="4.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="355.66" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (177,376,638 samples, 0.74%)</title><rect x="612.2" y="517" width="8.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="615.17" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (12,991,819 samples, 0.05%)</title><rect x="890.7" y="501" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="893.67" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (7,829,789 samples, 0.03%)</title><rect x="716.8" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="719.84" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (852,126,825 samples, 3.57%)</title><rect x="12.6" y="533" width="42.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.55" y="543.5" >[li..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,343,006 samples, 0.01%)</title><rect x="891.5" y="469" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="894.49" y="479.5" ></text>
</g>
<g >
<title>malloc (6,004,451 samples, 0.03%)</title><rect x="1160.3" y="357" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1163.29" y="367.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (16,824,901 samples, 0.07%)</title><rect x="83.2" y="469" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="86.25" y="479.5" ></text>
</g>
<g >
<title>operator new (3,210,055 samples, 0.01%)</title><rect x="1177.1" y="85" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1180.12" y="95.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,744,472 samples, 0.01%)</title><rect x="627.4" y="533" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="630.38" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (185,213,491 samples, 0.78%)</title><rect x="1160.7" y="309" width="9.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1163.69" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,389,472 samples, 0.02%)</title><rect x="749.2" y="341" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="752.24" y="351.5" ></text>
</g>
<g >
<title>operator new (285,824,640 samples, 1.20%)</title><rect x="918.6" y="277" width="14.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="921.59" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (8,813,457 samples, 0.04%)</title><rect x="328.8" y="405" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="331.77" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (6,495,175 samples, 0.03%)</title><rect x="70.5" y="501" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="73.50" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (11,246,373 samples, 0.05%)</title><rect x="77.6" y="501" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="80.58" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (41,189,098 samples, 0.17%)</title><rect x="1050.1" y="325" width="2.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1053.12" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (88,597,034 samples, 0.37%)</title><rect x="1097.3" y="405" width="4.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1100.27" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,303,068 samples, 0.01%)</title><rect x="1156.1" y="293" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1159.13" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,706,671 samples, 0.02%)</title><rect x="1051.1" y="213" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1054.11" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (12,270,958 samples, 0.05%)</title><rect x="982.9" y="405" width="0.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="985.88" y="415.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,309,796 samples, 0.01%)</title><rect x="1061.8" y="213" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1064.75" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,166,340 samples, 0.03%)</title><rect x="1091.0" y="197" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1094.02" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (84,982,268 samples, 0.36%)</title><rect x="1121.9" y="341" width="4.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1124.89" y="351.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (4,638,355 samples, 0.02%)</title><rect x="1118.5" y="405" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1121.50" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (8,559,477 samples, 0.04%)</title><rect x="1113.7" y="421" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1116.67" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (41,189,098 samples, 0.17%)</title><rect x="1050.1" y="309" width="2.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1053.12" y="319.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (142,476,840 samples, 0.60%)</title><rect x="1097.3" y="421" width="7.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1100.27" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (31,871,445 samples, 0.13%)</title><rect x="748.1" y="421" width="1.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="751.12" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (69,920,730 samples, 0.29%)</title><rect x="354.0" y="405" width="3.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="356.99" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,526,624 samples, 0.01%)</title><rect x="728.6" y="453" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="731.57" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (93,664,378 samples, 0.39%)</title><rect x="1020.1" y="325" width="4.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1023.11" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (2,779,468 samples, 0.01%)</title><rect x="1035.6" y="325" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1038.63" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (6,490,636 samples, 0.03%)</title><rect x="978.3" y="149" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="981.34" y="159.5" ></text>
</g>
<g >
<title>void std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_push_back_aux&lt;Call&amp;&gt; (2,553,438 samples, 0.01%)</title><rect x="1077.5" y="197" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1080.48" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (403,408,237 samples, 1.69%)</title><rect x="984.4" y="373" width="19.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="987.36" y="383.5" ></text>
</g>
<g >
<title>operator new (46,522,152 samples, 0.20%)</title><rect x="1088.5" y="165" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1091.46" y="175.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,036,401 samples, 0.03%)</title><rect x="1118.4" y="421" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1121.43" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (3,028,118 samples, 0.01%)</title><rect x="317.5" y="485" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="320.55" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (3,498,565 samples, 0.01%)</title><rect x="353.7" y="373" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="356.69" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (3,677,141 samples, 0.02%)</title><rect x="1031.8" y="245" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1034.80" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,588,928 samples, 0.02%)</title><rect x="1177.1" y="197" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1180.09" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (14,792,879 samples, 0.06%)</title><rect x="1031.5" y="293" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1034.54" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (12,600,227 samples, 0.05%)</title><rect x="746.8" y="453" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="749.83" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,642,838 samples, 0.03%)</title><rect x="1061.0" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1064.04" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (173,139,996 samples, 0.73%)</title><rect x="1142.6" y="341" width="8.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1145.63" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,209,298 samples, 0.03%)</title><rect x="1172.3" y="149" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1175.29" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,975,620 samples, 0.02%)</title><rect x="919.3" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="922.34" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (111,891,889 samples, 0.47%)</title><rect x="1044.5" y="389" width="5.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1047.50" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (13,112,776 samples, 0.05%)</title><rect x="884.9" y="373" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="887.87" y="383.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (2,496,740 samples, 0.01%)</title><rect x="76.6" y="517" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="79.57" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,155,586 samples, 0.02%)</title><rect x="1049.8" y="245" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1052.78" y="255.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,586,212 samples, 0.02%)</title><rect x="624.0" y="469" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="626.98" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (29,643,631 samples, 0.12%)</title><rect x="1140.4" y="165" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1143.42" y="175.5" ></text>
</g>
<g >
<title>decltype  (22,908,554 samples, 0.10%)</title><rect x="1031.3" y="357" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1034.29" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (93,664,378 samples, 0.39%)</title><rect x="1020.1" y="373" width="4.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1023.11" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,156,348 samples, 0.02%)</title><rect x="1090.5" y="69" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1093.48" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (30,578,370 samples, 0.13%)</title><rect x="1075.9" y="101" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1078.92" y="111.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (47,227,172 samples, 0.20%)</title><rect x="78.9" y="501" width="2.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="81.87" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,206,585 samples, 0.01%)</title><rect x="1176.0" y="117" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1178.99" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (42,073,321 samples, 0.18%)</title><rect x="1093.2" y="293" width="2.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1096.21" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,974,197 samples, 0.23%)</title><rect x="1020.8" y="293" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1023.84" y="303.5" ></text>
</g>
<g >
<title>malloc (30,624,624 samples, 0.13%)</title><rect x="897.1" y="405" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="900.05" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,423,780 samples, 0.03%)</title><rect x="1051.8" y="293" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1054.79" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (3,217,312 samples, 0.01%)</title><rect x="896.8" y="389" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="899.83" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (47,657,855 samples, 0.20%)</title><rect x="1151.3" y="357" width="2.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1154.34" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (2,324,592 samples, 0.01%)</title><rect x="77.9" y="469" width="0.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="80.90" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (183,267,075 samples, 0.77%)</title><rect x="1078.6" y="213" width="9.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1081.63" y="223.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (745,604,308 samples, 3.13%)</title><rect x="1054.7" y="437" width="36.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1057.67" y="447.5" >voi..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (28,789,524 samples, 0.12%)</title><rect x="931.3" y="213" width="1.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="934.31" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (16,588,082 samples, 0.07%)</title><rect x="316.7" y="437" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="319.73" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (13,653,491 samples, 0.06%)</title><rect x="849.4" y="517" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="852.36" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,602,803 samples, 0.02%)</title><rect x="644.2" y="437" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="647.16" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (26,233,107 samples, 0.11%)</title><rect x="1174.2" y="261" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1177.18" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (87,422,704 samples, 0.37%)</title><rect x="534.3" y="517" width="4.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="537.32" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (93,664,378 samples, 0.39%)</title><rect x="1020.1" y="341" width="4.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1023.11" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (15,387,787 samples, 0.06%)</title><rect x="724.1" y="485" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="727.14" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,061,274 samples, 0.01%)</title><rect x="1110.5" y="357" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1113.49" y="367.5" ></text>
</g>
<g >
<title>Call::Call (25,964,581 samples, 0.11%)</title><rect x="715.9" y="453" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="718.94" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (6,194,920 samples, 0.03%)</title><rect x="716.9" y="373" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="719.92" y="383.5" ></text>
</g>
<g >
<title>blk_mq_end_request_batch (4,813,124 samples, 0.02%)</title><rect x="1109.7" y="197" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1112.65" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,320,067 samples, 0.01%)</title><rect x="1030.8" y="373" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1033.83" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,154,997 samples, 0.02%)</title><rect x="83.8" y="341" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="86.78" y="351.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (2,964,253 samples, 0.01%)</title><rect x="83.1" y="469" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="86.10" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (20,797,705 samples, 0.09%)</title><rect x="341.6" y="421" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="344.64" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (32,094,637 samples, 0.13%)</title><rect x="1170.6" y="245" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1173.58" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,797,745 samples, 0.02%)</title><rect x="1090.5" y="117" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1093.48" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (72,449,203 samples, 0.30%)</title><rect x="353.9" y="421" width="3.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="356.87" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,046,032 samples, 0.01%)</title><rect x="1186.0" y="501" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1189.00" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,622,725 samples, 0.02%)</title><rect x="1153.4" y="197" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1156.39" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,408,915 samples, 0.03%)</title><rect x="1169.5" y="229" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1172.49" y="239.5" ></text>
</g>
<g >
<title>operator delete (2,549,511 samples, 0.01%)</title><rect x="1124.6" y="309" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1127.59" y="319.5" ></text>
</g>
<g >
<title>operator new (549,776,308 samples, 2.31%)</title><rect x="804.0" y="533" width="27.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="807.04" y="543.5" >o..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (57,123,294 samples, 0.24%)</title><rect x="607.4" y="453" width="2.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="610.38" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (10,164,087 samples, 0.04%)</title><rect x="681.5" y="469" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="684.52" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (22,024,330 samples, 0.09%)</title><rect x="244.8" y="501" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="247.82" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (2,964,201 samples, 0.01%)</title><rect x="337.4" y="469" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="340.37" y="479.5" ></text>
</g>
<g >
<title>cfree (6,277,968 samples, 0.03%)</title><rect x="934.1" y="149" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="937.05" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (28,401,684 samples, 0.12%)</title><rect x="336.2" y="517" width="1.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="339.16" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (8,112,166 samples, 0.03%)</title><rect x="297.3" y="373" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="300.34" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,073,658 samples, 0.02%)</title><rect x="82.4" y="453" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="85.43" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (31,871,445 samples, 0.13%)</title><rect x="748.1" y="437" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="751.12" y="447.5" ></text>
</g>
<g >
<title>operator new (15,264,571 samples, 0.06%)</title><rect x="900.2" y="309" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="903.18" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,740,400 samples, 0.01%)</title><rect x="1176.9" y="165" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1179.87" y="175.5" ></text>
</g>
<g >
<title>malloc (5,918,461 samples, 0.02%)</title><rect x="1051.3" y="293" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1054.34" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (4,187,890 samples, 0.02%)</title><rect x="1111.0" y="437" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1113.96" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,651,140 samples, 0.03%)</title><rect x="978.3" y="181" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="981.34" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (20,609,820 samples, 0.09%)</title><rect x="745.8" y="421" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="748.81" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,974,198 samples, 0.01%)</title><rect x="72.1" y="453" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="75.13" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,307,559 samples, 0.01%)</title><rect x="983.1" y="357" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="986.11" y="367.5" ></text>
</g>
<g >
<title>get_inbetween_points (5,304,265 samples, 0.02%)</title><rect x="243.4" y="517" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="246.36" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,558,470 samples, 0.02%)</title><rect x="1158.7" y="261" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1161.65" y="271.5" ></text>
</g>
<g >
<title>cfree (2,083,237 samples, 0.01%)</title><rect x="1015.9" y="309" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1018.91" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (10,374,210 samples, 0.04%)</title><rect x="337.6" y="517" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="340.56" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (240,977,940 samples, 1.01%)</title><rect x="1142.0" y="389" width="12.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1145.04" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (11,093,986 samples, 0.05%)</title><rect x="1117.7" y="437" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1120.66" y="447.5" ></text>
</g>
<g >
<title>operator new (3,027,849 samples, 0.01%)</title><rect x="1051.1" y="149" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1054.14" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,964,253 samples, 0.01%)</title><rect x="83.1" y="405" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="86.10" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (403,408,237 samples, 1.69%)</title><rect x="984.4" y="389" width="19.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="987.36" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (135,265,699 samples, 0.57%)</title><rect x="1111.5" y="469" width="6.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1114.52" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (88,597,034 samples, 0.37%)</title><rect x="1097.3" y="389" width="4.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1100.27" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,069,767 samples, 0.01%)</title><rect x="1129.1" y="309" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1132.09" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,533,381 samples, 0.01%)</title><rect x="1104.2" y="341" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1107.18" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (22,582,978 samples, 0.09%)</title><rect x="156.4" y="501" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="159.36" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (14,090,616 samples, 0.06%)</title><rect x="741.8" y="469" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="744.84" y="479.5" ></text>
</g>
<g >
<title>choose_next_point (2,545,259 samples, 0.01%)</title><rect x="892.5" y="533" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="895.52" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,096,510 samples, 0.01%)</title><rect x="1148.3" y="213" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1151.34" y="223.5" ></text>
</g>
<g >
<title>operator new (6,859,385 samples, 0.03%)</title><rect x="1121.1" y="421" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1124.14" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (6,267,531 samples, 0.03%)</title><rect x="78.1" y="485" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="81.14" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (13,964,974 samples, 0.06%)</title><rect x="716.1" y="405" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="719.09" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,116,793 samples, 0.06%)</title><rect x="1139.4" y="245" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1142.37" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (6,713,015 samples, 0.03%)</title><rect x="80.9" y="453" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="83.87" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (72,767,200 samples, 0.31%)</title><rect x="151.1" y="501" width="3.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="154.12" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (13,422,188 samples, 0.06%)</title><rect x="887.7" y="469" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="890.67" y="479.5" ></text>
</g>
<g >
<title>folio_end_writeback (3,893,411 samples, 0.02%)</title><rect x="1109.7" y="133" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1112.69" y="143.5" ></text>
</g>
<g >
<title>operator new (4,368,499 samples, 0.02%)</title><rect x="1140.2" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1143.20" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,526,624 samples, 0.01%)</title><rect x="728.6" y="437" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="731.57" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,651,280 samples, 0.02%)</title><rect x="978.8" y="197" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="981.79" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (163,830,619 samples, 0.69%)</title><rect x="970.9" y="293" width="8.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="973.93" y="303.5" ></text>
</g>
<g >
<title>operator new (3,485,212 samples, 0.01%)</title><rect x="963.8" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="966.81" y="255.5" ></text>
</g>
<g >
<title>operator delete (17,299,689 samples, 0.07%)</title><rect x="927.6" y="261" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="930.65" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (88,340,064 samples, 0.37%)</title><rect x="1092.9" y="309" width="4.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1095.90" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3,215,871 samples, 0.01%)</title><rect x="1138.1" y="213" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1141.08" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,506,282 samples, 0.04%)</title><rect x="1153.1" y="229" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1156.15" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (122,867,326 samples, 0.52%)</title><rect x="346.6" y="501" width="6.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="349.58" y="511.5" ></text>
</g>
<g >
<title>malloc (18,150,807 samples, 0.08%)</title><rect x="1062.1" y="309" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1065.06" y="319.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (15,387,787 samples, 0.06%)</title><rect x="724.1" y="469" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="727.14" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (52,609,517 samples, 0.22%)</title><rect x="151.1" y="453" width="2.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="154.12" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,188,460 samples, 0.04%)</title><rect x="1096.8" y="277" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1099.76" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (4,183,121 samples, 0.02%)</title><rect x="1130.2" y="389" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1133.20" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,206,585 samples, 0.01%)</title><rect x="1176.0" y="197" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1178.99" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,032,181 samples, 0.01%)</title><rect x="1153.4" y="133" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1156.39" y="143.5" ></text>
</g>
<g >
<title>cfree (2,329,424 samples, 0.01%)</title><rect x="1088.7" y="149" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1091.75" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (26,558,413 samples, 0.11%)</title><rect x="350.5" y="453" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="353.53" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (40,382,013 samples, 0.17%)</title><rect x="1175.5" y="341" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1178.48" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (18,192,715 samples, 0.08%)</title><rect x="242.2" y="501" width="0.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="245.22" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (107,003,860 samples, 0.45%)</title><rect x="933.8" y="229" width="5.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="936.82" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,559,564 samples, 0.01%)</title><rect x="888.7" y="373" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="891.69" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,757,766 samples, 0.01%)</title><rect x="546.8" y="485" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="549.83" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,837,121 samples, 0.03%)</title><rect x="906.8" y="389" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="909.81" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,069,767 samples, 0.01%)</title><rect x="1129.1" y="341" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1132.09" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,989,309 samples, 0.01%)</title><rect x="996.7" y="245" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="999.72" y="255.5" ></text>
</g>
<g >
<title>operator new (2,302,845 samples, 0.01%)</title><rect x="1088.3" y="149" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1091.27" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,056,716 samples, 0.01%)</title><rect x="243.1" y="485" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="246.13" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,650,774 samples, 0.03%)</title><rect x="1175.1" y="229" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1178.10" y="239.5" ></text>
</g>
<g >
<title>decltype  (3,482,955 samples, 0.01%)</title><rect x="966.6" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="969.59" y="159.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (22,908,554 samples, 0.10%)</title><rect x="1031.3" y="373" width="1.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1034.29" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,317,180 samples, 0.01%)</title><rect x="1125.9" y="309" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1128.95" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (36,777,821 samples, 0.15%)</title><rect x="591.9" y="517" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="594.92" y="527.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (378,668,805 samples, 1.59%)</title><rect x="1159.1" y="437" width="18.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1162.10" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (88,597,034 samples, 0.37%)</title><rect x="1097.3" y="373" width="4.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1100.27" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,246,046 samples, 0.01%)</title><rect x="245.1" y="453" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="248.13" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (7,632,738 samples, 0.03%)</title><rect x="327.2" y="453" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="330.20" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,279,960 samples, 0.01%)</title><rect x="1024.6" y="261" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1027.63" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (170,846,124 samples, 0.72%)</title><rect x="304.6" y="437" width="8.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="307.63" y="447.5" ></text>
</g>
<g >
<title>decltype  (6,523,824 samples, 0.03%)</title><rect x="627.1" y="501" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="630.06" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (167,374,965 samples, 0.70%)</title><rect x="1007.5" y="309" width="8.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1010.49" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,989,220 samples, 0.01%)</title><rect x="1095.4" y="165" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1098.43" y="175.5" ></text>
</g>
<g >
<title>cfree (2,074,658 samples, 0.01%)</title><rect x="1055.8" y="325" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1058.76" y="335.5" ></text>
</g>
<g >
<title>get_inbetween_points (8,608,414 samples, 0.04%)</title><rect x="1118.7" y="453" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1121.73" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (9,223,715 samples, 0.04%)</title><rect x="1120.2" y="405" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1123.17" y="415.5" ></text>
</g>
<g >
<title>gen_all_points (142,476,840 samples, 0.60%)</title><rect x="1097.3" y="469" width="7.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1100.27" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;Call, Call&amp;, Call*&gt;::_M_set_node (2,091,445 samples, 0.01%)</title><rect x="750.7" y="469" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="753.72" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (3,021,125 samples, 0.01%)</title><rect x="888.9" y="389" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="891.93" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (9,477,164 samples, 0.04%)</title><rect x="982.9" y="373" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="985.94" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,651,280 samples, 0.02%)</title><rect x="978.8" y="181" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="981.79" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (347,914,960 samples, 1.46%)</title><rect x="297.7" y="517" width="17.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="300.74" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,306,612 samples, 0.01%)</title><rect x="627.6" y="453" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="630.57" y="463.5" ></text>
</g>
<g >
<title>Call::Call (105,302,918 samples, 0.44%)</title><rect x="737.3" y="517" width="5.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="740.33" y="527.5" ></text>
</g>
<g >
<title>operator new (32,092,772 samples, 0.13%)</title><rect x="952.9" y="245" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="955.95" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_pop_back_aux (21,381,687 samples, 0.09%)</title><rect x="352.8" y="485" width="1.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="355.81" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,000,078 samples, 0.02%)</title><rect x="1125.6" y="261" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1128.55" y="271.5" ></text>
</g>
<g >
<title>malloc (3,681,676 samples, 0.02%)</title><rect x="918.0" y="277" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="921.04" y="287.5" ></text>
</g>
<g >
<title>Call::~Call (2,964,253 samples, 0.01%)</title><rect x="83.1" y="437" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="86.10" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,313,800 samples, 0.01%)</title><rect x="1071.9" y="85" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1074.87" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,273,879 samples, 0.01%)</title><rect x="1096.3" y="149" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1099.32" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (934,266,509 samples, 3.92%)</title><rect x="980.6" y="437" width="46.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="983.59" y="447.5" >std:..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (6,749,842 samples, 0.03%)</title><rect x="136.6" y="501" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="139.65" y="511.5" ></text>
</g>
<g >
<title>operator new (3,266,004 samples, 0.01%)</title><rect x="1049.1" y="309" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1052.07" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,110,780 samples, 0.02%)</title><rect x="847.3" y="437" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="850.33" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (27,989,244 samples, 0.12%)</title><rect x="1086.1" y="165" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1089.11" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (6,268,417 samples, 0.03%)</title><rect x="1003.9" y="261" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1006.93" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,412,012 samples, 0.04%)</title><rect x="1156.9" y="245" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.85" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (3,675,836 samples, 0.02%)</title><rect x="1180.0" y="501" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1183.00" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,055,255 samples, 0.01%)</title><rect x="546.7" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="549.68" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,785,250 samples, 0.02%)</title><rect x="1169.5" y="213" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1172.49" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (9,344,189 samples, 0.04%)</title><rect x="736.4" y="469" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="739.36" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,486,449 samples, 0.01%)</title><rect x="1053.9" y="373" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1056.92" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (3,037,925 samples, 0.01%)</title><rect x="1058.2" y="309" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1061.24" y="319.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (4,152,772 samples, 0.02%)</title><rect x="856.4" y="517" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="859.43" y="527.5" ></text>
</g>
<g >
<title>void std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_push_back_aux&lt;Call&amp;&gt; (10,916,469 samples, 0.05%)</title><rect x="891.9" y="533" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="894.94" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (17,586,410 samples, 0.07%)</title><rect x="69.5" y="453" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="72.45" y="463.5" ></text>
</g>
<g >
<title>void std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_push_back_aux&lt;Call&amp;&gt; (2,165,793 samples, 0.01%)</title><rect x="1041.8" y="309" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1044.80" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (8,811,950 samples, 0.04%)</title><rect x="244.4" y="453" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="247.38" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (51,844,480 samples, 0.22%)</title><rect x="640.9" y="517" width="2.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="643.92" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (5,260,384 samples, 0.02%)</title><rect x="1179.7" y="517" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1182.74" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (188,344,351 samples, 0.79%)</title><rect x="1078.4" y="293" width="9.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1081.43" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (5,814,446 samples, 0.02%)</title><rect x="901.5" y="389" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="904.46" y="399.5" ></text>
</g>
<g >
<title>malloc (8,116,098 samples, 0.03%)</title><rect x="1023.7" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1026.68" y="319.5" ></text>
</g>
<g >
<title>decltype  (2,767,169 samples, 0.01%)</title><rect x="1019.7" y="229" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1022.70" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (34,752,655 samples, 0.15%)</title><rect x="81.2" y="501" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="84.21" y="511.5" ></text>
</g>
<g >
<title>__btrfs_bio_end_io (4,577,220 samples, 0.02%)</title><rect x="1109.7" y="165" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1112.65" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (189,884,518 samples, 0.80%)</title><rect x="908.0" y="277" width="9.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="910.98" y="287.5" ></text>
</g>
<g >
<title>operator new (50,978,943 samples, 0.21%)</title><rect x="1183.0" y="549" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1185.98" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (135,040,195 samples, 0.57%)</title><rect x="1037.6" y="405" width="6.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1040.65" y="415.5" ></text>
</g>
<g >
<title>main (5,746,730,793 samples, 24.10%)</title><rect x="893.6" y="501" width="284.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="896.59" y="511.5" >main</text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (7,193,797 samples, 0.03%)</title><rect x="72.7" y="453" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="75.68" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,330,557 samples, 0.01%)</title><rect x="77.8" y="421" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="80.78" y="431.5" ></text>
</g>
<g >
<title>cfree (12,179,590 samples, 0.05%)</title><rect x="1175.5" y="245" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1178.55" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (378,668,805 samples, 1.59%)</title><rect x="1159.1" y="389" width="18.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1162.10" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,441,331 samples, 0.01%)</title><rect x="1180.0" y="485" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1183.01" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (28,401,684 samples, 0.12%)</title><rect x="336.2" y="501" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="339.16" y="511.5" ></text>
</g>
<g >
<title>decltype  (6,687,323 samples, 0.03%)</title><rect x="643.2" y="437" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="646.16" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (755,526,450 samples, 3.17%)</title><rect x="644.8" y="533" width="37.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="647.84" y="543.5" >[li..</text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,645,558 samples, 0.02%)</title><rect x="983.2" y="341" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="986.23" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (37,369,711 samples, 0.16%)</title><rect x="344.7" y="453" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="347.73" y="463.5" ></text>
</g>
<g >
<title>[[stack]] (2,959,774,869 samples, 12.41%)</title><rect x="12.6" y="549" width="146.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="15.55" y="559.5" >[[stack]]</text>
</g>
<g >
<title>std::_Rb_tree_decrement (6,204,515 samples, 0.03%)</title><rect x="1186.3" y="549" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1189.28" y="559.5" ></text>
</g>
<g >
<title>operator new (2,567,036 samples, 0.01%)</title><rect x="1157.5" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.54" y="175.5" ></text>
</g>
<g >
<title>Call::Call (2,773,888 samples, 0.01%)</title><rect x="627.5" y="517" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="630.55" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (5,987,330 samples, 0.03%)</title><rect x="1111.8" y="437" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1114.85" y="447.5" ></text>
</g>
<g >
<title>malloc (359,222,868 samples, 1.51%)</title><rect x="84.6" y="533" width="17.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="87.61" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (25,734,600 samples, 0.11%)</title><rect x="735.1" y="517" width="1.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="738.09" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (574,930,415 samples, 2.41%)</title><rect x="942.0" y="373" width="28.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="944.95" y="383.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,061,657 samples, 0.01%)</title><rect x="681.9" y="405" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="684.88" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,566,770 samples, 0.01%)</title><rect x="509.6" y="517" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="512.60" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,039,213 samples, 0.01%)</title><rect x="1110.3" y="341" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1113.33" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (2,507,573 samples, 0.01%)</title><rect x="1066.8" y="117" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1069.85" y="127.5" ></text>
</g>
<g >
<title>operator new (6,708,450 samples, 0.03%)</title><rect x="1096.9" y="149" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1099.86" y="159.5" ></text>
</g>
<g >
<title>operator new (13,848,835 samples, 0.06%)</title><rect x="637.5" y="533" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="640.54" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (6,525,937 samples, 0.03%)</title><rect x="68.5" y="437" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="71.46" y="447.5" ></text>
</g>
<g >
<title>cfree (7,179,809 samples, 0.03%)</title><rect x="1098.7" y="341" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1101.68" y="351.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (2,319,039 samples, 0.01%)</title><rect x="892.4" y="517" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="895.37" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,802,814 samples, 0.06%)</title><rect x="884.8" y="405" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="887.83" y="415.5" ></text>
</g>
<g >
<title>choose_next_point (9,826,607 samples, 0.04%)</title><rect x="1092.3" y="309" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1095.25" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (403,408,237 samples, 1.69%)</title><rect x="984.4" y="421" width="19.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="987.36" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (6,657,179 samples, 0.03%)</title><rect x="1121.6" y="421" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1124.56" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (8,567,983 samples, 0.04%)</title><rect x="1096.8" y="165" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1099.79" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,749,761 samples, 0.06%)</title><rect x="1125.1" y="309" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1128.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (15,244,057 samples, 0.06%)</title><rect x="1058.4" y="293" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1061.39" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,022,782 samples, 0.01%)</title><rect x="887.3" y="485" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="890.28" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (46,549,131 samples, 0.20%)</title><rect x="1151.4" y="309" width="2.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1154.37" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,323,035 samples, 0.02%)</title><rect x="1175.1" y="197" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1178.10" y="207.5" ></text>
</g>
<g >
<title>cfree (20,285,028 samples, 0.09%)</title><rect x="999.9" y="245" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1002.85" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (34,752,655 samples, 0.15%)</title><rect x="81.2" y="485" width="1.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="84.21" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (20,797,705 samples, 0.09%)</title><rect x="341.6" y="437" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="344.64" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (185,213,491 samples, 0.78%)</title><rect x="1160.7" y="357" width="9.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1163.69" y="367.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,709,712 samples, 0.02%)</title><rect x="1019.7" y="261" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1022.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,073,658 samples, 0.02%)</title><rect x="82.4" y="405" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="85.43" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (8,620,370 samples, 0.04%)</title><rect x="79.9" y="421" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="82.92" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (13,219,173 samples, 0.06%)</title><rect x="1024.8" y="325" width="0.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1027.85" y="335.5" ></text>
</g>
<g >
<title>std::operator- (4,882,221 samples, 0.02%)</title><rect x="892.1" y="501" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="895.13" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (7,240,358 samples, 0.03%)</title><rect x="68.4" y="485" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="71.43" y="495.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (26,538,458 samples, 0.11%)</title><rect x="336.2" y="485" width="1.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="339.25" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (17,280,272 samples, 0.07%)</title><rect x="623.1" y="421" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="626.12" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,622,725 samples, 0.02%)</title><rect x="1153.4" y="181" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1156.39" y="191.5" ></text>
</g>
<g >
<title>decltype  (2,107,672 samples, 0.01%)</title><rect x="1085.8" y="69" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1088.78" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,328,361 samples, 0.01%)</title><rect x="728.7" y="469" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="731.70" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (10,374,210 samples, 0.04%)</title><rect x="337.6" y="469" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="340.56" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (81,148,908 samples, 0.34%)</title><rect x="154.7" y="533" width="4.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="157.72" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (20,663,741 samples, 0.09%)</title><rect x="931.3" y="165" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="934.31" y="175.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,005,147 samples, 0.01%)</title><rect x="1126.1" y="389" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1129.14" y="399.5" ></text>
</g>
<g >
<title>operator new (51,586,961 samples, 0.22%)</title><rect x="507.0" y="517" width="2.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="510.05" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (6,418,909 samples, 0.03%)</title><rect x="1052.2" y="341" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1055.21" y="351.5" ></text>
</g>
<g >
<title>cfree (4,622,060 samples, 0.02%)</title><rect x="974.3" y="245" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="977.26" y="255.5" ></text>
</g>
<g >
<title>is_close_int (22,313,368 samples, 0.09%)</title><rect x="733.9" y="517" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="736.91" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (159,302,761 samples, 0.67%)</title><rect x="599.5" y="437" width="7.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="602.49" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,895,010 samples, 0.03%)</title><rect x="1177.0" y="245" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1180.04" y="255.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (16,229,934 samples, 0.07%)</title><rect x="353.1" y="453" width="0.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="356.06" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (571,257,797 samples, 2.40%)</title><rect x="942.1" y="341" width="28.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="945.13" y="351.5" >s..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (11,093,986 samples, 0.05%)</title><rect x="1117.7" y="405" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1120.66" y="415.5" ></text>
</g>
<g >
<title>operator delete (4,744,003 samples, 0.02%)</title><rect x="1100.6" y="325" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1103.64" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,455,347 samples, 0.01%)</title><rect x="1047.7" y="229" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1050.67" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (4,344,723 samples, 0.02%)</title><rect x="627.1" y="437" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="630.08" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (18,137,069 samples, 0.08%)</title><rect x="1078.8" y="181" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1081.79" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (570,082,451 samples, 2.39%)</title><rect x="942.1" y="325" width="28.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="945.13" y="335.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (2,507,573 samples, 0.01%)</title><rect x="1066.8" y="149" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1069.85" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (30,804,392 samples, 0.13%)</title><rect x="1075.9" y="165" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1078.92" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,022,782 samples, 0.01%)</title><rect x="887.3" y="453" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="890.28" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,577,568,495 samples, 6.62%)</title><rect x="902.1" y="405" width="78.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="905.07" y="415.5" >std::_Rb_..</text>
</g>
<g >
<title>malloc (2,317,635 samples, 0.01%)</title><rect x="1000.9" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1003.90" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (3,953,110 samples, 0.02%)</title><rect x="888.9" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="891.89" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (6,495,175 samples, 0.03%)</title><rect x="70.5" y="517" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="73.50" y="527.5" ></text>
</g>
<g >
<title>cfree (2,850,703 samples, 0.01%)</title><rect x="1061.4" y="309" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1064.42" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (216,426,055 samples, 0.91%)</title><rect x="599.5" y="485" width="10.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="602.49" y="495.5" ></text>
</g>
<g >
<title>main (123,527,896 samples, 0.52%)</title><rect x="78.5" y="533" width="6.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="81.49" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (2,751,204 samples, 0.01%)</title><rect x="1130.1" y="405" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1133.07" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,155,586 samples, 0.02%)</title><rect x="1049.8" y="229" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1052.78" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (134,899,162 samples, 0.57%)</title><rect x="878.8" y="437" width="6.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="881.84" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (3,032,746 samples, 0.01%)</title><rect x="715.1" y="485" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="718.08" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (16,192,059 samples, 0.07%)</title><rect x="848.6" y="501" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="851.56" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (72,449,203 samples, 0.30%)</title><rect x="353.9" y="437" width="3.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="356.87" y="447.5" ></text>
</g>
<g >
<title>cfree (24,605,171 samples, 0.10%)</title><rect x="975.0" y="229" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="978.01" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (13,101,722 samples, 0.05%)</title><rect x="138.4" y="517" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="141.38" y="527.5" ></text>
</g>
<g >
<title>operator new (2,116,268 samples, 0.01%)</title><rect x="941.7" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="944.65" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,430,476 samples, 0.02%)</title><rect x="1044.0" y="213" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1046.99" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (13,560,453 samples, 0.06%)</title><rect x="1189.1" y="533" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.13" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (2,507,573 samples, 0.01%)</title><rect x="1066.8" y="165" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1069.85" y="175.5" ></text>
</g>
<g >
<title>operator new (9,989,411 samples, 0.04%)</title><rect x="979.6" y="229" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="982.60" y="239.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,595,758 samples, 0.03%)</title><rect x="643.1" y="469" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="646.11" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,084,529 samples, 0.06%)</title><rect x="1150.4" y="245" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1153.41" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,823,528 samples, 0.01%)</title><rect x="965.4" y="229" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="968.36" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (25,734,600 samples, 0.11%)</title><rect x="735.1" y="501" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="738.09" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (10,301,554 samples, 0.04%)</title><rect x="1074.8" y="85" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1077.76" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,239,921 samples, 0.01%)</title><rect x="510.3" y="469" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="513.30" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,480,277 samples, 0.01%)</title><rect x="1018.3" y="325" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1021.34" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,706,671 samples, 0.02%)</title><rect x="1051.1" y="197" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1054.11" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,081,582 samples, 0.01%)</title><rect x="927.5" y="149" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="930.47" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,071,609 samples, 0.01%)</title><rect x="1110.2" y="229" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1113.21" y="239.5" ></text>
</g>
<g >
<title>Call::Call (2,078,074 samples, 0.01%)</title><rect x="1127.4" y="325" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1130.43" y="335.5" ></text>
</g>
<g >
<title>decltype  (745,604,308 samples, 3.13%)</title><rect x="1054.7" y="421" width="36.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1057.67" y="431.5" >dec..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,302,913 samples, 0.01%)</title><rect x="728.3" y="485" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="731.31" y="495.5" ></text>
</g>
<g >
<title>decltype  (5,952,558 samples, 0.02%)</title><rect x="241.9" y="453" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="244.92" y="463.5" ></text>
</g>
<g >
<title>cfree (14,595,395 samples, 0.06%)</title><rect x="952.1" y="245" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="955.09" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,695,639 samples, 0.03%)</title><rect x="1189.5" y="517" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1192.47" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,125,966 samples, 0.06%)</title><rect x="965.9" y="133" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="968.94" y="143.5" ></text>
</g>
<g >
<title>cfree (248,081,143 samples, 1.04%)</title><rect x="55.1" y="533" width="12.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="58.07" y="543.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (378,668,805 samples, 1.59%)</title><rect x="1159.1" y="453" width="18.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1162.10" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (23,649,601 samples, 0.10%)</title><rect x="716.1" y="437" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="719.06" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (21,789,976 samples, 0.09%)</title><rect x="979.1" y="357" width="1.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="982.06" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5,146,657 samples, 0.02%)</title><rect x="927.4" y="213" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="930.38" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (32,150,334 samples, 0.13%)</title><rect x="71.5" y="501" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="74.48" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (36,908,684 samples, 0.15%)</title><rect x="899.2" y="389" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="902.23" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,093,914 samples, 0.01%)</title><rect x="353.6" y="357" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="356.59" y="367.5" ></text>
</g>
<g >
<title>operator new (119,389,354 samples, 0.50%)</title><rect x="1080.0" y="181" width="5.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1082.99" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (442,821,656 samples, 1.86%)</title><rect x="1155.9" y="469" width="21.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1158.93" y="479.5" >s..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,056,716 samples, 0.01%)</title><rect x="243.1" y="501" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="246.13" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,093,135 samples, 0.01%)</title><rect x="893.2" y="501" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="896.22" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (77,620,089 samples, 0.33%)</title><rect x="999.4" y="341" width="3.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1002.35" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (347,914,960 samples, 1.46%)</title><rect x="297.7" y="501" width="17.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="300.74" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::back (3,971,372 samples, 0.02%)</title><rect x="750.7" y="501" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="753.68" y="511.5" ></text>
</g>
<g >
<title>get_inbetween_points (6,759,218 samples, 0.03%)</title><rect x="1179.4" y="549" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1182.38" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (59,320,880 samples, 0.25%)</title><rect x="967.4" y="197" width="2.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="970.36" y="207.5" ></text>
</g>
<g >
<title>roundf32x (18,385,936 samples, 0.08%)</title><rect x="510.9" y="533" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="513.91" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (87,422,704 samples, 0.37%)</title><rect x="534.3" y="485" width="4.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="537.32" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (20,474,721 samples, 0.09%)</title><rect x="728.2" y="517" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="731.18" y="527.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (35,677,287 samples, 0.15%)</title><rect x="885.5" y="453" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="888.52" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (6,046,751 samples, 0.03%)</title><rect x="627.1" y="469" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="630.08" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (165,946,692 samples, 0.70%)</title><rect x="970.8" y="357" width="8.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="973.85" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,544,683 samples, 0.01%)</title><rect x="1110.2" y="309" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1113.20" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,259,971 samples, 0.01%)</title><rect x="70.3" y="485" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="73.32" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (174,771,791 samples, 0.73%)</title><rect x="1142.5" y="373" width="8.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1145.55" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (111,176,694 samples, 0.47%)</title><rect x="620.9" y="517" width="5.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="623.95" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;Call&gt;::allocate (9,102,924 samples, 0.04%)</title><rect x="1091.6" y="389" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1094.57" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (42,545,139 samples, 0.18%)</title><rect x="1045.0" y="293" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1048.01" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,173,873 samples, 0.01%)</title><rect x="510.5" y="469" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="513.53" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (20,192,864 samples, 0.08%)</title><rect x="979.1" y="293" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="982.14" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (16,229,934 samples, 0.07%)</title><rect x="353.1" y="421" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="356.06" y="431.5" ></text>
</g>
<g >
<title>operator new (16,714,281 samples, 0.07%)</title><rect x="884.0" y="405" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="887.01" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (13,847,729 samples, 0.06%)</title><rect x="242.4" y="469" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="245.37" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,558,470 samples, 0.02%)</title><rect x="1158.7" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.65" y="319.5" ></text>
</g>
<g >
<title>handle_edge_irq (4,813,124 samples, 0.02%)</title><rect x="1109.7" y="261" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1112.65" y="271.5" ></text>
</g>
<g >
<title>cfree (22,615,648 samples, 0.09%)</title><rect x="904.1" y="389" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="907.11" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (14,084,529 samples, 0.06%)</title><rect x="1150.4" y="213" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1153.41" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,095,837 samples, 0.01%)</title><rect x="1101.6" y="341" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1104.56" y="351.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (16,824,901 samples, 0.07%)</title><rect x="83.2" y="485" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="86.25" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (19,932,964 samples, 0.08%)</title><rect x="296.0" y="373" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="298.97" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (3,923,207 samples, 0.02%)</title><rect x="1059.0" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1061.95" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (27,875,280 samples, 0.12%)</title><rect x="345.2" y="437" width="1.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="348.20" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,192,297 samples, 0.02%)</title><rect x="1096.6" y="149" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1099.55" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (139,822,477 samples, 0.59%)</title><rect x="1119.4" y="453" width="6.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1122.42" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (199,606,541 samples, 0.84%)</title><rect x="1132.2" y="389" width="9.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1135.16" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (55,510,695 samples, 0.23%)</title><rect x="1151.2" y="373" width="2.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1154.20" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (20,192,864 samples, 0.08%)</title><rect x="979.1" y="245" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="982.14" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,798,230 samples, 0.07%)</title><rect x="356.3" y="325" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="359.28" y="335.5" ></text>
</g>
<g >
<title>operator new (6,211,550 samples, 0.03%)</title><rect x="928.5" y="261" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="931.50" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (7,397,172 samples, 0.03%)</title><rect x="1053.8" y="437" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1056.75" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (15,798,230 samples, 0.07%)</title><rect x="356.3" y="373" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="359.28" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (216,426,055 samples, 0.91%)</title><rect x="599.5" y="501" width="10.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="602.49" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (106,081,013 samples, 0.44%)</title><rect x="1092.0" y="357" width="5.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1095.02" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (6,022,847 samples, 0.03%)</title><rect x="726.6" y="453" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="729.61" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,095,079 samples, 0.01%)</title><rect x="893.0" y="517" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="895.97" y="527.5" ></text>
</g>
<g >
<title>Call::~Call (3,021,125 samples, 0.01%)</title><rect x="888.9" y="421" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="891.93" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (93,664,378 samples, 0.39%)</title><rect x="1020.1" y="357" width="4.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1023.11" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_deallocate_node (8,789,060 samples, 0.04%)</title><rect x="1156.0" y="437" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1158.99" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,497,751 samples, 0.01%)</title><rect x="891.5" y="485" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="894.49" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,121,704 samples, 0.02%)</title><rect x="1024.5" y="293" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1027.54" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,594,345 samples, 0.02%)</title><rect x="1153.7" y="309" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1156.72" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (27,858,431 samples, 0.12%)</title><rect x="1018.5" y="325" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1021.46" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,071,609 samples, 0.01%)</title><rect x="1110.2" y="245" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1113.21" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,706,671 samples, 0.02%)</title><rect x="1051.1" y="277" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1054.11" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (4,826,226 samples, 0.02%)</title><rect x="644.2" y="485" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="647.16" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (3,920,360 samples, 0.02%)</title><rect x="1056.7" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1059.71" y="191.5" ></text>
</g>
<g >
<title>Call::Call (106,081,013 samples, 0.44%)</title><rect x="1092.0" y="389" width="5.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1095.02" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (184,208,152 samples, 0.77%)</title><rect x="1078.6" y="261" width="9.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1081.63" y="271.5" ></text>
</g>
<g >
<title>get_inbetween_points (178,304,772 samples, 0.75%)</title><rect x="329.3" y="533" width="8.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="332.31" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (72,117,900 samples, 0.30%)</title><rect x="1114.1" y="389" width="3.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1117.10" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (2,115,507 samples, 0.01%)</title><rect x="681.4" y="405" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="684.38" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,742,543 samples, 0.05%)</title><rect x="978.2" y="213" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="981.19" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,144,653 samples, 0.06%)</title><rect x="1150.4" y="261" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1153.35" y="271.5" ></text>
</g>
<g >
<title>cfree (72,845,207 samples, 0.31%)</title><rect x="955.9" y="245" width="3.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="958.93" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,992,101 samples, 0.01%)</title><rect x="1090.8" y="69" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1093.83" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (27,744,375 samples, 0.12%)</title><rect x="1154.4" y="453" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1157.37" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (135,040,195 samples, 0.57%)</title><rect x="1037.6" y="373" width="6.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1040.65" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,992,101 samples, 0.01%)</title><rect x="1090.8" y="133" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1093.83" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (35,833,275 samples, 0.15%)</title><rect x="79.0" y="453" width="1.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="82.01" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (107,003,860 samples, 0.45%)</title><rect x="933.8" y="245" width="5.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="936.82" y="255.5" ></text>
</g>
<g >
<title>get_inbetween_points (109,617,453 samples, 0.46%)</title><rect x="73.1" y="533" width="5.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="76.07" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (59,320,880 samples, 0.25%)</title><rect x="967.4" y="229" width="2.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="970.36" y="239.5" ></text>
</g>
<g >
<title>operator delete (723,156,416 samples, 3.03%)</title><rect x="410.0" y="533" width="35.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="413.04" y="543.5" >ope..</text>
</g>
<g >
<title>hrtimer_interrupt (3,221,999 samples, 0.01%)</title><rect x="996.7" y="261" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="999.72" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,363,578 samples, 0.03%)</title><rect x="1052.2" y="373" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1055.16" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,430,476 samples, 0.02%)</title><rect x="1044.0" y="261" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1046.99" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,192,297 samples, 0.02%)</title><rect x="1096.6" y="85" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1099.55" y="95.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,173,873 samples, 0.01%)</title><rect x="510.5" y="485" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="513.53" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,323,035 samples, 0.02%)</title><rect x="1175.1" y="149" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1178.10" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,740,400 samples, 0.01%)</title><rect x="1176.9" y="181" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1179.87" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (13,880,937 samples, 0.06%)</title><rect x="297.1" y="389" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="300.05" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (6,481,461 samples, 0.03%)</title><rect x="901.7" y="389" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="904.74" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (87,422,704 samples, 0.37%)</title><rect x="534.3" y="453" width="4.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="537.32" y="463.5" ></text>
</g>
<g >
<title>operator new (4,370,551 samples, 0.02%)</title><rect x="1047.3" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1050.26" y="287.5" ></text>
</g>
<g >
<title>operator new (233,635,768 samples, 0.98%)</title><rect x="955.2" y="261" width="11.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="958.21" y="271.5" ></text>
</g>
<g >
<title>malloc (6,070,809 samples, 0.03%)</title><rect x="934.4" y="149" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="937.38" y="159.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (12,991,819 samples, 0.05%)</title><rect x="890.7" y="485" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="893.67" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,558,470 samples, 0.02%)</title><rect x="1158.7" y="293" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1161.65" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,334,223 samples, 0.02%)</title><rect x="1096.5" y="165" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1099.50" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (32,922,621 samples, 0.14%)</title><rect x="641.9" y="485" width="1.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="644.86" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,776,845 samples, 0.01%)</title><rect x="1092.6" y="277" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1095.59" y="287.5" ></text>
</g>
<g >
<title>malloc (641,511,597 samples, 2.69%)</title><rect x="750.9" y="533" width="31.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="753.87" y="543.5" >ma..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (2,330,557 samples, 0.01%)</title><rect x="77.8" y="469" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="80.78" y="479.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (31,871,445 samples, 0.13%)</title><rect x="748.1" y="469" width="1.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="751.12" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (621,085,335 samples, 2.60%)</title><rect x="1060.7" y="325" width="30.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1063.72" y="335.5" >st..</text>
</g>
<g >
<title>is_close_int (19,522,041 samples, 0.08%)</title><rect x="335.1" y="517" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="338.11" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (38,999,695 samples, 0.16%)</title><rect x="930.8" y="245" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="933.81" y="255.5" ></text>
</g>
<g >
<title>operator delete (2,272,056 samples, 0.01%)</title><rect x="1148.6" y="245" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1151.61" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (6,481,461 samples, 0.03%)</title><rect x="901.7" y="405" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="904.74" y="415.5" ></text>
</g>
<g >
<title>malloc (5,575,273 samples, 0.02%)</title><rect x="983.9" y="421" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="986.89" y="431.5" ></text>
</g>
<g >
<title>get_inbetween_points (27,288,009 samples, 0.11%)</title><rect x="504.6" y="517" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="507.61" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (328,213,908 samples, 1.38%)</title><rect x="610.2" y="533" width="16.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="613.20" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (106,081,013 samples, 0.44%)</title><rect x="1092.0" y="373" width="5.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1095.02" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (20,474,721 samples, 0.09%)</title><rect x="728.2" y="501" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="731.18" y="511.5" ></text>
</g>
<g >
<title>operator new (5,785,460 samples, 0.02%)</title><rect x="1018.0" y="325" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1021.05" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (25,429,570 samples, 0.11%)</title><rect x="1154.5" y="389" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1157.48" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,041,222 samples, 0.02%)</title><rect x="1041.5" y="245" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1044.55" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (5,904,227 samples, 0.02%)</title><rect x="315.0" y="517" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="317.96" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,034,031 samples, 0.01%)</title><rect x="1148.5" y="229" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1151.45" y="239.5" ></text>
</g>
<g >
<title>choose_next_point (111,265,159 samples, 0.47%)</title><rect x="1030.4" y="421" width="5.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1033.39" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,992,424 samples, 0.09%)</title><rect x="1074.4" y="165" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1077.36" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (110,145,763 samples, 0.46%)</title><rect x="1170.0" y="309" width="5.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1173.03" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (28,141,251 samples, 0.12%)</title><rect x="889.9" y="517" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="892.92" y="527.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,744,472 samples, 0.01%)</title><rect x="627.4" y="517" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="630.38" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,872,606 samples, 0.02%)</title><rect x="137.5" y="501" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="140.53" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (28,789,524 samples, 0.12%)</title><rect x="931.3" y="229" width="1.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="934.31" y="239.5" ></text>
</g>
<g >
<title>decltype  (2,534,824 samples, 0.01%)</title><rect x="1139.9" y="165" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1142.94" y="175.5" ></text>
</g>
<g >
<title>cfree (3,448,253 samples, 0.01%)</title><rect x="1134.2" y="277" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1137.22" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (517,163,322 samples, 2.17%)</title><rect x="1027.9" y="437" width="25.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1030.91" y="447.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (6,895,010 samples, 0.03%)</title><rect x="1177.0" y="293" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1180.04" y="303.5" ></text>
</g>
<g >
<title>Call::Call (22,908,554 samples, 0.10%)</title><rect x="1031.3" y="341" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1034.29" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (4,426,585 samples, 0.02%)</title><rect x="980.2" y="405" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="983.25" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (16,608,921 samples, 0.07%)</title><rect x="965.9" y="213" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="968.94" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,952,610 samples, 0.02%)</title><rect x="1092.0" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1095.02" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (11,177,663 samples, 0.05%)</title><rect x="324.8" y="453" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="327.85" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (11,196,906 samples, 0.05%)</title><rect x="848.0" y="501" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="851.00" y="511.5" ></text>
</g>
<g >
<title>choose_next_point (5,363,655 samples, 0.02%)</title><rect x="630.4" y="533" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="633.40" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (230,029,240 samples, 0.96%)</title><rect x="538.7" y="517" width="11.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="541.65" y="527.5" ></text>
</g>
<g >
<title>choose_next_point (3,983,766 samples, 0.02%)</title><rect x="54.8" y="517" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="57.78" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (277,158,511 samples, 1.16%)</title><rect x="299.4" y="485" width="13.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="302.37" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (15,948,525 samples, 0.07%)</title><rect x="1157.8" y="309" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1160.84" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,104,551 samples, 0.01%)</title><rect x="1026.7" y="325" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1029.69" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (52,418,595 samples, 0.22%)</title><rect x="964.2" y="245" width="2.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="967.16" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (84,982,268 samples, 0.36%)</title><rect x="1121.9" y="373" width="4.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1124.89" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,591,817 samples, 0.02%)</title><rect x="891.7" y="485" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="894.66" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (21,927,363 samples, 0.09%)</title><rect x="1057.0" y="277" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1060.04" y="287.5" ></text>
</g>
<g >
<title>decltype (2,766,602 samples, 0.01%)</title><rect x="1127.4" y="389" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1130.39" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,079,797 samples, 0.02%)</title><rect x="1166.6" y="181" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.58" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,164,973 samples, 0.02%)</title><rect x="890.4" y="501" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="893.39" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (52,609,517 samples, 0.22%)</title><rect x="151.1" y="421" width="2.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="154.12" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (2,115,507 samples, 0.01%)</title><rect x="681.4" y="421" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="684.38" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (36,908,684 samples, 0.15%)</title><rect x="899.2" y="325" width="1.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="902.23" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (3,925,090 samples, 0.02%)</title><rect x="749.5" y="389" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="752.51" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,651,280 samples, 0.02%)</title><rect x="978.8" y="229" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="981.79" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (27,049,539 samples, 0.11%)</title><rect x="1056.9" y="293" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1059.90" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::allocate (9,102,924 samples, 0.04%)</title><rect x="1091.6" y="405" width="0.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1094.57" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,570,519 samples, 0.01%)</title><rect x="1128.2" y="389" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1131.18" y="399.5" ></text>
</g>
<g >
<title>malloc (4,128,405 samples, 0.02%)</title><rect x="885.1" y="261" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="888.11" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (164,300,633 samples, 0.69%)</title><rect x="970.9" y="325" width="8.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="973.93" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,526,624 samples, 0.01%)</title><rect x="728.6" y="421" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="731.57" y="431.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (13,654,461 samples, 0.06%)</title><rect x="1056.2" y="293" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1059.23" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (2,801,218 samples, 0.01%)</title><rect x="1036.7" y="389" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1039.68" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,061,274 samples, 0.01%)</title><rect x="1110.5" y="373" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1113.49" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (17,484,503 samples, 0.07%)</title><rect x="845.8" y="501" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="848.85" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (13,034,335 samples, 0.05%)</title><rect x="1127.5" y="389" width="0.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1130.53" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,081,893 samples, 0.03%)</title><rect x="242.7" y="453" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="245.70" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (11,177,663 samples, 0.05%)</title><rect x="324.8" y="437" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="327.85" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (185,213,491 samples, 0.78%)</title><rect x="1160.7" y="341" width="9.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1163.69" y="351.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (3,021,125 samples, 0.01%)</title><rect x="888.9" y="437" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="891.93" y="447.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (8,125,783 samples, 0.03%)</title><rect x="932.3" y="197" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="935.33" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (5,575,527 samples, 0.02%)</title><rect x="681.2" y="469" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="684.24" y="479.5" ></text>
</g>
<g >
<title>operator new (4,142,172 samples, 0.02%)</title><rect x="1075.7" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1078.72" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,041,222 samples, 0.02%)</title><rect x="1041.5" y="229" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1044.55" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,633,831 samples, 0.03%)</title><rect x="1003.9" y="293" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1006.93" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,055,255 samples, 0.01%)</title><rect x="546.7" y="453" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="549.68" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,305,878 samples, 0.01%)</title><rect x="1110.2" y="277" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1113.21" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (16,824,901 samples, 0.07%)</title><rect x="83.2" y="437" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.25" y="447.5" ></text>
</g>
<g >
<title>void std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_push_back_aux&lt;Call&amp;&gt; (5,994,185 samples, 0.03%)</title><rect x="158.7" y="533" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="161.74" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,192,864 samples, 0.08%)</title><rect x="979.1" y="341" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="982.14" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (20,192,864 samples, 0.08%)</title><rect x="979.1" y="277" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="982.14" y="287.5" ></text>
</g>
<g >
<title>cfree (65,382,295 samples, 0.27%)</title><rect x="1044.7" y="309" width="3.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1047.66" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,268,417 samples, 0.03%)</title><rect x="1003.9" y="229" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1006.93" y="239.5" ></text>
</g>
<g >
<title>cfree (34,764,972 samples, 0.15%)</title><rect x="1102.2" y="341" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1105.21" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,749,842 samples, 0.03%)</title><rect x="136.6" y="453" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="139.65" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (43,222,314 samples, 0.18%)</title><rect x="136.0" y="517" width="2.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="138.96" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,061,657 samples, 0.01%)</title><rect x="681.9" y="421" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="684.88" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (17,280,272 samples, 0.07%)</title><rect x="623.1" y="469" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="626.12" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,815,159 samples, 0.01%)</title><rect x="1160.8" y="277" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.75" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,110,780 samples, 0.02%)</title><rect x="847.3" y="421" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="850.33" y="431.5" ></text>
</g>
<g >
<title>cfree (4,442,135 samples, 0.02%)</title><rect x="1109.1" y="325" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1112.12" y="335.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (8,798,799 samples, 0.04%)</title><rect x="561.7" y="517" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="564.67" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (3,752,371 samples, 0.02%)</title><rect x="716.6" y="373" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="719.60" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (53,400,879 samples, 0.22%)</title><rect x="1101.7" y="405" width="2.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1104.66" y="415.5" ></text>
</g>
<g >
<title>attempt7_iter_c (23,842,709,357 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >attempt7_iter_c</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,061,657 samples, 0.01%)</title><rect x="681.9" y="437" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="684.88" y="447.5" ></text>
</g>
<g >
<title>void std::destroy_at&lt;Call&gt; (72,449,203 samples, 0.30%)</title><rect x="353.9" y="469" width="3.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="356.87" y="479.5" ></text>
</g>
<g >
<title>cfree (2,774,803 samples, 0.01%)</title><rect x="1088.3" y="165" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1091.26" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (32,150,334 samples, 0.13%)</title><rect x="71.5" y="517" width="1.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="74.48" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,339,404 samples, 0.01%)</title><rect x="1035.8" y="389" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1038.78" y="399.5" ></text>
</g>
<g >
<title>operator new (110,557,170 samples, 0.46%)</title><rect x="1134.6" y="277" width="5.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1137.60" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,140,220 samples, 0.02%)</title><rect x="1176.8" y="229" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1179.82" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (9,223,715 samples, 0.04%)</title><rect x="1120.2" y="421" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1123.17" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,845,454 samples, 0.06%)</title><rect x="939.7" y="373" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="942.68" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (25,369,648 samples, 0.11%)</title><rect x="965.5" y="229" width="1.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="968.50" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (30,105,206 samples, 0.13%)</title><rect x="1140.4" y="245" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1143.42" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (8,021,646 samples, 0.03%)</title><rect x="337.0" y="469" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="339.97" y="479.5" ></text>
</g>
<g >
<title>operator delete (4,124,806 samples, 0.02%)</title><rect x="1120.9" y="421" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1123.94" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (52,299,227 samples, 0.22%)</title><rect x="1038.5" y="309" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1041.51" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,071,609 samples, 0.01%)</title><rect x="1110.2" y="213" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1113.21" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,785,250 samples, 0.02%)</title><rect x="1169.5" y="181" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1172.49" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,537,331 samples, 0.01%)</title><rect x="963.1" y="213" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="966.08" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (303,478,756 samples, 1.27%)</title><rect x="139.7" y="533" width="15.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="142.70" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (2,031,693 samples, 0.01%)</title><rect x="292.7" y="453" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="295.70" y="463.5" ></text>
</g>
<g >
<title>cfree (20,025,657 samples, 0.08%)</title><rect x="895.8" y="405" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="898.81" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (10,462,757 samples, 0.04%)</title><rect x="1019.3" y="277" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1022.32" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (2,078,074 samples, 0.01%)</title><rect x="1127.4" y="357" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1130.43" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,560,366 samples, 0.01%)</title><rect x="1026.7" y="389" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1029.69" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (115,341,007 samples, 0.48%)</title><rect x="1120.6" y="437" width="5.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1123.63" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,389,472 samples, 0.02%)</title><rect x="749.2" y="357" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="752.24" y="367.5" ></text>
</g>
<g >
<title>main (2,283,836 samples, 0.01%)</title><rect x="630.7" y="533" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="633.73" y="543.5" ></text>
</g>
<g >
<title>malloc (10,397,921 samples, 0.04%)</title><rect x="1095.7" y="149" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1098.71" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,840,671 samples, 0.02%)</title><rect x="1101.3" y="309" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1104.32" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (13,112,776 samples, 0.05%)</title><rect x="884.9" y="341" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="887.87" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_pop_back_aux (63,002,850 samples, 0.26%)</title><rect x="1156.0" y="453" width="3.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1158.99" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (10,301,554 samples, 0.04%)</title><rect x="1074.8" y="117" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1077.76" y="127.5" ></text>
</g>
<g >
<title>decltype  (74,225,950 samples, 0.31%)</title><rect x="294.1" y="469" width="3.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="297.06" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (17,484,503 samples, 0.07%)</title><rect x="845.8" y="437" width="0.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="848.85" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,110,780 samples, 0.02%)</title><rect x="847.3" y="469" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="850.33" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (5,550,928 samples, 0.02%)</title><rect x="505.7" y="501" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="508.67" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,433,790 samples, 0.01%)</title><rect x="1101.4" y="213" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1104.35" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (8,811,950 samples, 0.04%)</title><rect x="244.4" y="437" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="247.38" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (107,003,860 samples, 0.45%)</title><rect x="933.8" y="181" width="5.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="936.82" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,978,730 samples, 0.01%)</title><rect x="1176.9" y="213" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1179.87" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (636,619,226 samples, 2.67%)</title><rect x="907.6" y="341" width="31.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="910.65" y="351.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (196,976,327 samples, 0.83%)</title><rect x="1132.2" y="341" width="9.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1135.22" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (20,663,741 samples, 0.09%)</title><rect x="931.3" y="149" width="1.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="934.31" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (557,461,528 samples, 2.34%)</title><rect x="1126.5" y="421" width="27.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1129.47" y="431.5" >s..</text>
</g>
<g >
<title>Call::~Call (11,185,912 samples, 0.05%)</title><rect x="888.3" y="485" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="891.33" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (196,725,156 samples, 0.83%)</title><rect x="970.4" y="373" width="9.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="973.41" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (27,075,180 samples, 0.11%)</title><rect x="1063.4" y="197" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1066.43" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::size (48,220,383 samples, 0.20%)</title><rect x="357.5" y="501" width="2.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="360.45" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (60,021,079 samples, 0.25%)</title><rect x="967.3" y="245" width="3.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="970.33" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,146,657 samples, 0.02%)</title><rect x="927.4" y="245" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="930.38" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,058,132 samples, 0.03%)</title><rect x="1026.5" y="421" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1029.52" y="431.5" ></text>
</g>
<g >
<title>cfree (8,381,675 samples, 0.04%)</title><rect x="1154.5" y="373" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1157.55" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,100,902 samples, 0.02%)</title><rect x="245.3" y="485" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="248.29" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (3,971,630 samples, 0.02%)</title><rect x="927.4" y="165" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="930.38" y="175.5" ></text>
</g>
<g >
<title>malloc (4,386,153 samples, 0.02%)</title><rect x="1078.2" y="293" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1081.17" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_pop_back_aux (3,657,887 samples, 0.02%)</title><rect x="83.1" y="485" width="0.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="86.06" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,222,524 samples, 0.01%)</title><rect x="1090.8" y="149" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1093.82" y="159.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (13,420,822 samples, 0.06%)</title><rect x="1057.5" y="261" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1060.46" y="271.5" ></text>
</g>
<g >
<title>main (12,187,129 samples, 0.05%)</title><rect x="1179.7" y="549" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1182.71" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (294,438,683 samples, 1.23%)</title><rect x="1005.3" y="357" width="14.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1008.27" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (16,229,934 samples, 0.07%)</title><rect x="353.1" y="405" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="356.06" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,376,419 samples, 0.02%)</title><rect x="1157.5" y="245" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1160.47" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (118,482,596 samples, 0.50%)</title><rect x="346.8" y="469" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="349.79" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (6,895,010 samples, 0.03%)</title><rect x="1177.0" y="309" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1180.04" y="319.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (9,223,715 samples, 0.04%)</title><rect x="1120.2" y="389" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1123.17" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (62,011,320 samples, 0.26%)</title><rect x="1087.9" y="245" width="3.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1090.92" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,058,646 samples, 0.04%)</title><rect x="1043.9" y="309" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1046.87" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (99,389,117 samples, 0.42%)</title><rect x="742.5" y="501" width="5.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="745.54" y="511.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,309,796 samples, 0.01%)</title><rect x="1061.8" y="229" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1064.75" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (26,558,413 samples, 0.11%)</title><rect x="350.5" y="405" width="1.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="353.53" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (5,263,321 samples, 0.02%)</title><rect x="735.6" y="469" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="738.55" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,209,298 samples, 0.03%)</title><rect x="1172.3" y="133" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1175.29" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (159,302,761 samples, 0.67%)</title><rect x="599.5" y="469" width="7.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="602.49" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,056,013 samples, 0.02%)</title><rect x="318.3" y="501" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="321.27" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (5,550,928 samples, 0.02%)</title><rect x="505.7" y="485" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="508.67" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,771,994 samples, 0.01%)</title><rect x="1054.4" y="437" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1057.44" y="447.5" ></text>
</g>
<g >
<title>operator new (2,078,468 samples, 0.01%)</title><rect x="1155.3" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1158.26" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (135,040,195 samples, 0.57%)</title><rect x="1037.6" y="389" width="6.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1040.65" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (571,257,797 samples, 2.40%)</title><rect x="942.1" y="357" width="28.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="945.13" y="367.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (28,353,492 samples, 0.12%)</title><rect x="843.2" y="453" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="846.16" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,206,585 samples, 0.01%)</title><rect x="1176.0" y="229" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1178.99" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (111,891,889 samples, 0.47%)</title><rect x="1044.5" y="373" width="5.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1047.50" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (30,804,392 samples, 0.13%)</title><rect x="1075.9" y="181" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1078.92" y="191.5" ></text>
</g>
<g >
<title>end_bio_extent_writepage (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="293" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1109.38" y="303.5" ></text>
</g>
<g >
<title>decltype (8,401,199 samples, 0.04%)</title><rect x="68.4" y="517" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="71.37" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,433,790 samples, 0.01%)</title><rect x="1101.4" y="261" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1104.35" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (15,798,230 samples, 0.07%)</title><rect x="356.3" y="357" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="359.28" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (5,967,433 samples, 0.03%)</title><rect x="1036.9" y="405" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1039.86" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,744,431,512 samples, 7.32%)</title><rect x="893.8" y="437" width="86.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="896.83" y="447.5" >std::_Rb_t..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (45,377,496 samples, 0.19%)</title><rect x="1166.6" y="197" width="2.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1169.58" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,091,248 samples, 0.01%)</title><rect x="682.1" y="421" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="685.06" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,691,833 samples, 0.02%)</title><rect x="1138.1" y="229" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1141.05" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (294,438,683 samples, 1.23%)</title><rect x="1005.3" y="405" width="14.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1008.27" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,559,564 samples, 0.01%)</title><rect x="888.7" y="405" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="891.69" y="415.5" ></text>
</g>
<g >
<title>malloc (73,997,813 samples, 0.31%)</title><rect x="959.5" y="245" width="3.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="962.54" y="255.5" ></text>
</g>
<g >
<title>operator new (25,903,957 samples, 0.11%)</title><rect x="1076.1" y="69" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1079.11" y="79.5" ></text>
</g>
<g >
<title>__common_interrupt (4,813,124 samples, 0.02%)</title><rect x="1109.7" y="277" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1112.65" y="287.5" ></text>
</g>
<g >
<title>decltype  (2,084,080 samples, 0.01%)</title><rect x="1150.2" y="149" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1153.18" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (7,857,502 samples, 0.03%)</title><rect x="316.3" y="437" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="319.34" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (41,189,098 samples, 0.17%)</title><rect x="1050.1" y="341" width="2.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1053.12" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,964,201 samples, 0.01%)</title><rect x="337.4" y="453" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="340.37" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (10,374,210 samples, 0.04%)</title><rect x="337.6" y="501" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="340.56" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,773,201 samples, 0.01%)</title><rect x="1059.2" y="293" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1062.16" y="303.5" ></text>
</g>
<g >
<title>decltype (13,654,461 samples, 0.06%)</title><rect x="1056.2" y="309" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1059.23" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,775,745 samples, 0.01%)</title><rect x="1071.9" y="117" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1074.87" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,166,340 samples, 0.03%)</title><rect x="1091.0" y="181" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1094.02" y="191.5" ></text>
</g>
<g >
<title>operator new (2,766,963 samples, 0.01%)</title><rect x="1166.4" y="277" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1169.38" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,159,601 samples, 0.02%)</title><rect x="1125.9" y="325" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1128.86" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (4,183,121 samples, 0.02%)</title><rect x="1130.2" y="405" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1133.20" y="415.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (37,524,601 samples, 0.16%)</title><rect x="887.4" y="533" width="1.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="890.43" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (9,289,851 samples, 0.04%)</title><rect x="1085.3" y="85" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1088.28" y="95.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,252,551 samples, 0.03%)</title><rect x="1035.2" y="373" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1038.16" y="383.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::destroy&lt;Call&gt; (3,021,125 samples, 0.01%)</title><rect x="888.9" y="453" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="891.93" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (6,913,764 samples, 0.03%)</title><rect x="742.5" y="469" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="745.54" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,974,198 samples, 0.01%)</title><rect x="72.1" y="437" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="75.13" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,993,647 samples, 0.01%)</title><rect x="1094.8" y="149" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1097.85" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (22,866,484 samples, 0.10%)</title><rect x="623.1" y="485" width="1.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="626.12" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,559,564 samples, 0.01%)</title><rect x="888.7" y="357" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="891.69" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (3,723,635 samples, 0.02%)</title><rect x="729.0" y="469" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="731.96" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (110,145,763 samples, 0.46%)</title><rect x="1170.0" y="277" width="5.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1173.03" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (22,508,857 samples, 0.09%)</title><rect x="1156.7" y="293" width="1.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1159.67" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (41,613,551 samples, 0.17%)</title><rect x="1093.2" y="245" width="2.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1096.23" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (111,891,889 samples, 0.47%)</title><rect x="1044.5" y="325" width="5.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1047.50" y="335.5" ></text>
</g>
<g >
<title>get_inbetween_points (138,397,271 samples, 0.58%)</title><rect x="1104.3" y="469" width="6.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1107.33" y="479.5" ></text>
</g>
<g >
<title>round@plt (2,934,507 samples, 0.01%)</title><rect x="831.2" y="533" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="834.25" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,252,551 samples, 0.03%)</title><rect x="1035.2" y="357" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1038.16" y="367.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (2,524,778 samples, 0.01%)</title><rect x="852.3" y="501" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="855.27" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,331,272 samples, 0.06%)</title><rect x="1055.1" y="325" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1058.05" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,653,236 samples, 0.03%)</title><rect x="1158.6" y="325" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1161.63" y="335.5" ></text>
</g>
<g >
<title>cfree (6,926,721 samples, 0.03%)</title><rect x="1041.1" y="309" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1044.13" y="319.5" ></text>
</g>
<g >
<title>folio_end_writeback (2,055,611 samples, 0.01%)</title><rect x="1106.4" y="277" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1109.40" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (178,324,648 samples, 0.75%)</title><rect x="942.5" y="261" width="8.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="945.50" y="271.5" ></text>
</g>
<g >
<title>malloc (12,626,482 samples, 0.05%)</title><rect x="1100.0" y="325" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1103.01" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,104,551 samples, 0.01%)</title><rect x="1026.7" y="357" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1029.69" y="367.5" ></text>
</g>
<g >
<title>malloc (20,924,404 samples, 0.09%)</title><rect x="1047.9" y="309" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1050.91" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;Call&gt;::deallocate (2,081,995 samples, 0.01%)</title><rect x="747.7" y="437" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="750.69" y="447.5" ></text>
</g>
<g >
<title>malloc (2,069,341 samples, 0.01%)</title><rect x="830.7" y="517" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="833.74" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (54,213,790 samples, 0.23%)</title><rect x="1156.4" y="373" width="2.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1159.42" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (37,747,021 samples, 0.16%)</title><rect x="313.1" y="469" width="1.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="316.09" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (3,033,231 samples, 0.01%)</title><rect x="1032.3" y="293" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1035.27" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,455,347 samples, 0.01%)</title><rect x="1047.7" y="181" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1050.67" y="191.5" ></text>
</g>
<g >
<title>cfree (6,429,449 samples, 0.03%)</title><rect x="1159.7" y="357" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1162.74" y="367.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::size (9,507,366 samples, 0.04%)</title><rect x="84.1" y="517" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="87.08" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,786,817 samples, 0.02%)</title><rect x="1056.4" y="181" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1059.40" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (111,558,691 samples, 0.47%)</title><rect x="1112.1" y="437" width="5.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1115.14" y="447.5" ></text>
</g>
<g >
<title>malloc (4,126,340 samples, 0.02%)</title><rect x="1122.7" y="325" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1125.65" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (292,241,426 samples, 1.23%)</title><rect x="1063.2" y="309" width="14.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1066.18" y="319.5" ></text>
</g>
<g >
<title>malloc (135,456,820 samples, 0.57%)</title><rect x="630.8" y="533" width="6.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="633.84" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (85,978,463 samples, 0.36%)</title><rect x="616.7" y="485" width="4.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="619.69" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (135,040,195 samples, 0.57%)</title><rect x="1037.6" y="341" width="6.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1040.65" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,061,274 samples, 0.01%)</title><rect x="1110.5" y="389" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1113.49" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (3,462,128 samples, 0.01%)</title><rect x="1154.1" y="437" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1157.10" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (18,063,065 samples, 0.08%)</title><rect x="1031.5" y="325" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1034.53" y="335.5" ></text>
</g>
<g >
<title>choose_next_point (69,364,018 samples, 0.29%)</title><rect x="1055.9" y="325" width="3.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1058.86" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (936,815,423 samples, 3.93%)</title><rect x="980.5" y="469" width="46.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="983.46" y="479.5" >std:..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (100,641,826 samples, 0.42%)</title><rect x="737.6" y="501" width="4.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="740.56" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (11,011,976 samples, 0.05%)</title><rect x="545.7" y="485" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="548.70" y="495.5" ></text>
</g>
<g >
<title>operator new (10,376,128 samples, 0.04%)</title><rect x="1144.8" y="245" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1147.83" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (3,462,128 samples, 0.01%)</title><rect x="1154.1" y="421" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1157.10" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (3,437,251 samples, 0.01%)</title><rect x="888.2" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="891.16" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (2,528,473 samples, 0.01%)</title><rect x="353.9" y="389" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="356.87" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,734,761 samples, 0.04%)</title><rect x="1003.8" y="325" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1006.83" y="335.5" ></text>
</g>
<g >
<title>operator new (3,445,623 samples, 0.01%)</title><rect x="1153.8" y="229" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1156.77" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (5,803,606 samples, 0.02%)</title><rect x="741.6" y="469" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="744.55" y="479.5" ></text>
</g>
<g >
<title>decltype  (8,981,312 samples, 0.04%)</title><rect x="322.7" y="469" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="325.70" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,303,068 samples, 0.01%)</title><rect x="1156.1" y="325" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1159.13" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,241,026 samples, 0.04%)</title><rect x="1058.5" y="261" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1061.47" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (2,122,035 samples, 0.01%)</title><rect x="1092.5" y="277" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1095.45" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3,515,870 samples, 0.01%)</title><rect x="1015.6" y="245" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1018.59" y="255.5" ></text>
</g>
<g >
<title>cfree (7,465,086 samples, 0.03%)</title><rect x="967.5" y="133" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="970.48" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (53,400,879 samples, 0.22%)</title><rect x="1101.7" y="357" width="2.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1104.66" y="367.5" ></text>
</g>
<g >
<title>main (282,478,443 samples, 1.18%)</title><rect x="736.9" y="533" width="14.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="739.89" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,651,140 samples, 0.03%)</title><rect x="978.3" y="197" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="981.34" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (7,194,792 samples, 0.03%)</title><rect x="717.7" y="485" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="720.67" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,588,928 samples, 0.02%)</title><rect x="1177.1" y="181" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1180.09" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,589,416 samples, 0.03%)</title><rect x="1149.8" y="165" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1152.80" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (15,535,505 samples, 0.07%)</title><rect x="135.2" y="485" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="138.19" y="495.5" ></text>
</g>
<g >
<title>malloc (2,577,505 samples, 0.01%)</title><rect x="967.8" y="133" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="970.85" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (2,306,612 samples, 0.01%)</title><rect x="627.6" y="469" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="630.57" y="479.5" ></text>
</g>
<g >
<title>operator new (29,957,830 samples, 0.13%)</title><rect x="1152.1" y="245" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1155.08" y="255.5" ></text>
</g>
<g >
<title>cfree (3,917,165 samples, 0.02%)</title><rect x="1052.2" y="277" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1055.21" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (32,529,625 samples, 0.14%)</title><rect x="850.0" y="517" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="853.03" y="527.5" ></text>
</g>
<g >
<title>cfree (68,167,456 samples, 0.29%)</title><rect x="951.4" y="261" width="3.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="954.36" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (2,730,624 samples, 0.01%)</title><rect x="736.2" y="469" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="739.18" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,091,248 samples, 0.01%)</title><rect x="682.1" y="405" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="685.06" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (5,260,384 samples, 0.02%)</title><rect x="1179.7" y="501" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1182.74" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (5,099,702 samples, 0.02%)</title><rect x="1035.5" y="373" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1038.51" y="383.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,645,558 samples, 0.02%)</title><rect x="983.2" y="325" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="986.23" y="335.5" ></text>
</g>
<g >
<title>void std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::_M_push_back_aux&lt;Call&amp;&gt; (3,454,083 samples, 0.01%)</title><rect x="1087.5" y="181" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1090.53" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (54,213,790 samples, 0.23%)</title><rect x="1156.4" y="357" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1159.42" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,308,722 samples, 0.01%)</title><rect x="1059.2" y="277" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1062.18" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (2,307,194 samples, 0.01%)</title><rect x="1053.3" y="277" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1056.32" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,451,202 samples, 0.01%)</title><rect x="510.6" y="501" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="513.64" y="511.5" ></text>
</g>
<g >
<title>operator new (3,449,797 samples, 0.01%)</title><rect x="1095.1" y="53" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1098.10" y="63.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,326,159 samples, 0.01%)</title><rect x="1052.3" y="149" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1055.28" y="159.5" ></text>
</g>
<g >
<title>handle_irq_event (4,813,124 samples, 0.02%)</title><rect x="1109.7" y="245" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1112.65" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (3,032,746 samples, 0.01%)</title><rect x="715.1" y="501" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="718.08" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (52,609,517 samples, 0.22%)</title><rect x="151.1" y="469" width="2.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="154.12" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (12,270,958 samples, 0.05%)</title><rect x="982.9" y="389" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="985.88" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (96,912,360 samples, 0.41%)</title><rect x="844.6" y="517" width="4.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="847.56" y="527.5" ></text>
</g>
<g >
<title>decltype  (12,269,985 samples, 0.05%)</title><rect x="1052.9" y="389" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1055.90" y="399.5" ></text>
</g>
<g >
<title>choose_next_point (21,158,634 samples, 0.09%)</title><rect x="1127.3" y="405" width="1.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1130.28" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (73,670,195 samples, 0.31%)</title><rect x="999.5" y="309" width="3.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1002.55" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,112,776 samples, 0.05%)</title><rect x="884.9" y="309" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="887.87" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,297,881 samples, 0.01%)</title><rect x="963.1" y="181" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="966.09" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (17,484,503 samples, 0.07%)</title><rect x="845.8" y="469" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="848.85" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,095,079 samples, 0.01%)</title><rect x="893.0" y="501" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="895.97" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (4,642,184 samples, 0.02%)</title><rect x="681.3" y="453" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="684.25" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,594,345 samples, 0.02%)</title><rect x="1153.7" y="341" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1156.72" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,154,997 samples, 0.02%)</title><rect x="83.8" y="325" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="86.78" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (100,641,826 samples, 0.42%)</title><rect x="737.6" y="485" width="4.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="740.56" y="495.5" ></text>
</g>
<g >
<title>choose_next_point (10,692,379 samples, 0.04%)</title><rect x="1053.6" y="469" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1056.62" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (2,787,470 samples, 0.01%)</title><rect x="1154.1" y="405" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1157.14" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,071,609 samples, 0.01%)</title><rect x="1110.2" y="261" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1113.21" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (5,605,806 samples, 0.02%)</title><rect x="747.8" y="421" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="750.85" y="431.5" ></text>
</g>
<g >
<title>operator new (26,416,984 samples, 0.11%)</title><rect x="1167.3" y="181" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1170.28" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,305,878 samples, 0.01%)</title><rect x="1110.2" y="293" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1113.21" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (29,643,631 samples, 0.12%)</title><rect x="1140.4" y="181" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1143.42" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (9,912,704 samples, 0.04%)</title><rect x="1149.8" y="197" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1152.80" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,706,671 samples, 0.02%)</title><rect x="1051.1" y="245" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1054.11" y="255.5" ></text>
</g>
<g >
<title>blk_mq_end_request_batch (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="341" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1109.38" y="351.5" ></text>
</g>
<g >
<title>decltype  (7,240,358 samples, 0.03%)</title><rect x="68.4" y="469" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="71.43" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (26,558,413 samples, 0.11%)</title><rect x="350.5" y="421" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="353.53" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (59,320,880 samples, 0.25%)</title><rect x="967.4" y="165" width="2.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="970.36" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (7,633,000 samples, 0.03%)</title><rect x="614.8" y="501" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="617.79" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (6,537,591 samples, 0.03%)</title><rect x="1072.4" y="149" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1075.44" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (570,082,451 samples, 2.39%)</title><rect x="942.1" y="277" width="28.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="945.13" y="287.5" >s..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (12,991,819 samples, 0.05%)</title><rect x="890.7" y="469" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="893.67" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,755,340 samples, 0.01%)</title><rect x="562.1" y="517" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="565.11" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (62,708,799 samples, 0.26%)</title><rect x="1087.9" y="277" width="3.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1090.89" y="287.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (2,766,602 samples, 0.01%)</title><rect x="1127.4" y="373" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1130.39" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,992,101 samples, 0.01%)</title><rect x="1090.8" y="101" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1093.83" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (20,192,864 samples, 0.08%)</title><rect x="979.1" y="325" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="982.14" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (61,773,430 samples, 0.26%)</title><rect x="1087.9" y="181" width="3.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1090.92" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (5,967,433 samples, 0.03%)</title><rect x="1036.9" y="389" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1039.86" y="399.5" ></text>
</g>
<g >
<title>__folio_end_writeback (2,055,611 samples, 0.01%)</title><rect x="1106.4" y="261" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1109.40" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (42,547,313 samples, 0.18%)</title><rect x="1108.3" y="373" width="2.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1111.34" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,167,832 samples, 0.02%)</title><rect x="1025.9" y="405" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1028.91" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (3,957,698 samples, 0.02%)</title><rect x="70.5" y="485" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="73.54" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,776,519 samples, 0.01%)</title><rect x="1041.0" y="293" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1043.96" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (73,670,195 samples, 0.31%)</title><rect x="999.5" y="277" width="3.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1002.55" y="287.5" ></text>
</g>
<g >
<title>btowc (6,993,723 samples, 0.03%)</title><rect x="54.7" y="533" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="57.73" y="543.5" ></text>
</g>
<g >
<title>get_inbetween_points (3,247,105 samples, 0.01%)</title><rect x="1080.8" y="165" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1083.84" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (5,575,527 samples, 0.02%)</title><rect x="681.2" y="485" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="684.24" y="495.5" ></text>
</g>
<g >
<title>operator new (2,556,894 samples, 0.01%)</title><rect x="887.3" y="389" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="890.31" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,594,345 samples, 0.02%)</title><rect x="1153.7" y="245" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1156.72" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (15,535,505 samples, 0.07%)</title><rect x="135.2" y="501" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="138.19" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (47,199,773 samples, 0.20%)</title><rect x="1151.4" y="325" width="2.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1154.37" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (27,060,878 samples, 0.11%)</title><rect x="1095.4" y="261" width="1.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1098.42" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (23,281,179 samples, 0.10%)</title><rect x="82.9" y="501" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="85.93" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (6,268,417 samples, 0.03%)</title><rect x="1003.9" y="277" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1006.93" y="287.5" ></text>
</g>
<g >
<title>cfree (2,339,258 samples, 0.01%)</title><rect x="1079.7" y="181" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1082.71" y="191.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (170,846,124 samples, 0.72%)</title><rect x="304.6" y="469" width="8.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="307.63" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (61,468,428 samples, 0.26%)</title><rect x="1032.4" y="405" width="3.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1035.42" y="415.5" ></text>
</g>
<g >
<title>gen_all_points (197,144,551 samples, 0.83%)</title><rect x="319.6" y="533" width="9.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="322.55" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,081,893 samples, 0.03%)</title><rect x="242.7" y="421" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="245.70" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (27,288,180 samples, 0.11%)</title><rect x="1086.1" y="133" width="1.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1089.15" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,644,626 samples, 0.03%)</title><rect x="1091.0" y="277" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1093.99" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (8,981,312 samples, 0.04%)</title><rect x="322.7" y="485" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="325.70" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (84,982,268 samples, 0.36%)</title><rect x="1121.9" y="389" width="4.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1124.89" y="399.5" ></text>
</g>
<g >
<title>malloc (2,583,629 samples, 0.01%)</title><rect x="1103.9" y="341" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1106.93" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (20,747,162 samples, 0.09%)</title><rect x="1189.0" y="549" width="1.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1191.96" y="559.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::size (3,490,290 samples, 0.01%)</title><rect x="889.1" y="485" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="892.08" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,127,328 samples, 0.02%)</title><rect x="1101.4" y="277" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1104.35" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,776,845 samples, 0.01%)</title><rect x="1092.6" y="293" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1095.59" y="303.5" ></text>
</g>
<g >
<title>decltype  (7,441,952 samples, 0.03%)</title><rect x="932.4" y="165" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="935.37" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,455,792 samples, 0.01%)</title><rect x="1090.8" y="165" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1093.81" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (16,387,167 samples, 0.07%)</title><rect x="351.8" y="453" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="354.85" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (74,050,767 samples, 0.31%)</title><rect x="720.5" y="453" width="3.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="723.47" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (11,066,485 samples, 0.05%)</title><rect x="742.0" y="437" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="744.99" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (12,759,233 samples, 0.05%)</title><rect x="891.3" y="517" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="894.31" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (277,655,152 samples, 1.16%)</title><rect x="1077.6" y="309" width="13.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1080.64" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (656,462,529 samples, 2.75%)</title><rect x="287.1" y="533" width="32.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="290.06" y="543.5" >ch..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,588,928 samples, 0.02%)</title><rect x="1177.1" y="133" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1180.09" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (123,381,451 samples, 0.52%)</title><rect x="718.0" y="485" width="6.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="721.03" y="495.5" ></text>
</g>
<g >
<title>Call::~Call (72,449,203 samples, 0.30%)</title><rect x="353.9" y="453" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="356.87" y="463.5" ></text>
</g>
<g >
<title>clone_endio (4,577,220 samples, 0.02%)</title><rect x="1109.7" y="181" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1112.65" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,326,159 samples, 0.01%)</title><rect x="1052.3" y="245" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1055.28" y="255.5" ></text>
</g>
<g >
<title>operator new (58,863,310 samples, 0.25%)</title><rect x="1122.9" y="325" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1125.90" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (10,301,554 samples, 0.04%)</title><rect x="1074.8" y="69" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1077.76" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (11,246,373 samples, 0.05%)</title><rect x="77.6" y="517" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="80.58" y="527.5" ></text>
</g>
<g >
<title>cfree (72,455,737 samples, 0.30%)</title><rect x="919.6" y="261" width="3.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="922.56" y="271.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (12,269,985 samples, 0.05%)</title><rect x="1052.9" y="405" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1055.90" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,206,585 samples, 0.01%)</title><rect x="1176.0" y="165" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1178.99" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (20,192,864 samples, 0.08%)</title><rect x="979.1" y="261" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="982.14" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,378,246 samples, 0.01%)</title><rect x="1125.6" y="213" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1128.55" y="223.5" ></text>
</g>
<g >
<title>Call::Call (74,225,950 samples, 0.31%)</title><rect x="294.1" y="453" width="3.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="297.06" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (5,349,129 samples, 0.02%)</title><rect x="980.2" y="437" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="983.20" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,056,777 samples, 0.01%)</title><rect x="1047.0" y="277" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1050.01" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,068,576 samples, 0.01%)</title><rect x="504.1" y="453" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="507.15" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,011,976 samples, 0.05%)</title><rect x="545.7" y="421" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="548.70" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,150,147 samples, 0.03%)</title><rect x="951.7" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="954.74" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (41,613,551 samples, 0.17%)</title><rect x="1093.2" y="197" width="2.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1096.23" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,010,970 samples, 0.01%)</title><rect x="1097.0" y="133" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1100.05" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (93,664,378 samples, 0.39%)</title><rect x="1020.1" y="389" width="4.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1023.11" y="399.5" ></text>
</g>
<g >
<title>std::operator- (3,728,260 samples, 0.02%)</title><rect x="626.9" y="501" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="629.87" y="511.5" ></text>
</g>
<g >
<title>__libc_start_main (5,746,730,793 samples, 24.10%)</title><rect x="893.6" y="533" width="284.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="896.59" y="543.5" >__libc_start_main</text>
</g>
<g >
<title>malloc (18,985,230 samples, 0.08%)</title><rect x="1088.9" y="149" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1091.91" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (197,707,679 samples, 0.83%)</title><rect x="987.1" y="325" width="9.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="990.09" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (110,145,763 samples, 0.46%)</title><rect x="1170.0" y="293" width="5.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1173.03" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (7,829,789 samples, 0.03%)</title><rect x="716.8" y="405" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="719.84" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,303,068 samples, 0.01%)</title><rect x="1156.1" y="341" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1159.13" y="351.5" ></text>
</g>
<g >
<title>cfree (12,489,677 samples, 0.05%)</title><rect x="503.0" y="517" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="506.03" y="527.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (4,864,747 samples, 0.02%)</title><rect x="856.2" y="517" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="859.19" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (13,112,776 samples, 0.05%)</title><rect x="884.9" y="325" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="887.87" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (28,466,499 samples, 0.12%)</title><rect x="1033.7" y="341" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1036.75" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,250,939 samples, 0.01%)</title><rect x="964.0" y="245" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="967.00" y="255.5" ></text>
</g>
<g >
<title>operator delete (12,190,520 samples, 0.05%)</title><rect x="963.2" y="245" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="966.20" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,303,068 samples, 0.01%)</title><rect x="1156.1" y="309" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1159.13" y="319.5" ></text>
</g>
<g >
<title>malloc (19,371,875 samples, 0.08%)</title><rect x="1165.2" y="277" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1168.20" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,346,928 samples, 0.02%)</title><rect x="68.5" y="389" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="71.49" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,818,167 samples, 0.01%)</title><rect x="1092.3" y="213" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1095.31" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,056,777 samples, 0.01%)</title><rect x="1047.0" y="229" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1050.01" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,702,308 samples, 0.02%)</title><rect x="899.4" y="309" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="902.35" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (5,508,652 samples, 0.02%)</title><rect x="644.4" y="485" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="647.40" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,056,777 samples, 0.01%)</title><rect x="1047.0" y="261" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1050.01" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (8,839,452 samples, 0.04%)</title><rect x="80.3" y="437" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="83.34" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (3,498,942 samples, 0.01%)</title><rect x="245.5" y="485" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="248.54" y="495.5" ></text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::top (3,946,478 samples, 0.02%)</title><rect x="359.8" y="517" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="362.84" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,093,914 samples, 0.01%)</title><rect x="353.6" y="309" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="356.59" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (826,812,827 samples, 3.47%)</title><rect x="939.2" y="389" width="40.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="942.22" y="399.5" >std..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,022,782 samples, 0.01%)</title><rect x="887.3" y="421" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="890.28" y="431.5" ></text>
</g>
<g >
<title>Call::~Call (31,871,445 samples, 0.13%)</title><rect x="748.1" y="453" width="1.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="751.12" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (20,157,683 samples, 0.08%)</title><rect x="153.7" y="453" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="156.72" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (169,369,907 samples, 0.71%)</title><rect x="130.7" y="533" width="8.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="133.65" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,041,222 samples, 0.02%)</title><rect x="1041.5" y="293" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1044.55" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (46,549,131 samples, 0.20%)</title><rect x="1151.4" y="277" width="2.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1154.37" y="287.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (40,306,009 samples, 0.17%)</title><rect x="715.2" y="501" width="2.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="718.23" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (11,346,251 samples, 0.05%)</title><rect x="295.4" y="373" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="298.41" y="383.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (12,445,663 samples, 0.05%)</title><rect x="504.0" y="469" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="506.99" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,389,472 samples, 0.02%)</title><rect x="749.2" y="389" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="752.24" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,246,046 samples, 0.01%)</title><rect x="245.1" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="248.13" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (11,894,866 samples, 0.05%)</title><rect x="139.1" y="533" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="142.11" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (23,322,617 samples, 0.10%)</title><rect x="1119.5" y="437" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1122.48" y="447.5" ></text>
</g>
<g >
<title>asm_common_interrupt (4,813,124 samples, 0.02%)</title><rect x="1109.7" y="309" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1112.65" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (446,357,121 samples, 1.87%)</title><rect x="1004.3" y="421" width="22.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1007.32" y="431.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (122,867,326 samples, 0.52%)</title><rect x="346.6" y="485" width="6.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="349.58" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (41,613,551 samples, 0.17%)</title><rect x="1093.2" y="213" width="2.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1096.23" y="223.5" ></text>
</g>
<g >
<title>malloc (5,584,714 samples, 0.02%)</title><rect x="1176.1" y="245" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1179.15" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (20,663,741 samples, 0.09%)</title><rect x="931.3" y="197" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="934.31" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (881,028,965 samples, 3.70%)</title><rect x="511.8" y="533" width="43.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="514.82" y="543.5" >std:..</text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (3,250,747 samples, 0.01%)</title><rect x="334.9" y="517" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="337.95" y="527.5" ></text>
</g>
<g >
<title>malloc (2,090,986 samples, 0.01%)</title><rect x="1086.2" y="53" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1089.23" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,108,397 samples, 0.03%)</title><rect x="1125.5" y="293" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1128.45" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,326,159 samples, 0.01%)</title><rect x="1052.3" y="213" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1055.28" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,345,694 samples, 0.01%)</title><rect x="941.8" y="373" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="944.76" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (6,448,342 samples, 0.03%)</title><rect x="1053.8" y="421" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1056.77" y="431.5" ></text>
</g>
<g >
<title>operator new (6,297,954 samples, 0.03%)</title><rect x="967.0" y="245" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="970.02" y="255.5" ></text>
</g>
<g >
<title>malloc (4,113,124 samples, 0.02%)</title><rect x="954.7" y="261" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="957.75" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,805,499 samples, 0.02%)</title><rect x="319.3" y="437" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="322.26" y="447.5" ></text>
</g>
<g >
<title>operator new (5,537,984 samples, 0.02%)</title><rect x="1041.2" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1044.20" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (7,082,129 samples, 0.03%)</title><rect x="246.1" y="501" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="249.10" y="511.5" ></text>
</g>
<g >
<title>all (23,842,717,404 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (5,346,928 samples, 0.02%)</title><rect x="68.5" y="405" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="71.49" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (15,244,057 samples, 0.06%)</title><rect x="1058.4" y="309" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1061.39" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,154,997 samples, 0.02%)</title><rect x="83.8" y="357" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="86.78" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,474,797 samples, 0.03%)</title><rect x="1127.8" y="325" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1130.79" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,133,856 samples, 0.02%)</title><rect x="627.7" y="469" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="630.69" y="479.5" ></text>
</g>
<g >
<title>cfree (3,055,104 samples, 0.01%)</title><rect x="1050.9" y="277" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1053.89" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,022,782 samples, 0.01%)</title><rect x="887.3" y="469" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="890.28" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,343,006 samples, 0.01%)</title><rect x="891.5" y="453" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="894.49" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (10,164,087 samples, 0.04%)</title><rect x="681.5" y="485" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="684.52" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (35,833,275 samples, 0.15%)</title><rect x="79.0" y="469" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="82.01" y="479.5" ></text>
</g>
<g >
<title>cfree (6,507,009 samples, 0.03%)</title><rect x="1080.5" y="165" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1083.51" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,319,039 samples, 0.01%)</title><rect x="892.4" y="469" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="895.37" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (9,234,018 samples, 0.04%)</title><rect x="1139.6" y="213" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1142.61" y="223.5" ></text>
</g>
<g >
<title>choose_next_point (3,669,334 samples, 0.02%)</title><rect x="1160.1" y="357" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1163.06" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (73,580,361 samples, 0.31%)</title><rect x="737.9" y="453" width="3.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="740.91" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,991,401 samples, 0.01%)</title><rect x="963.1" y="229" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="966.06" y="239.5" ></text>
</g>
<g >
<title>operator new (2,269,969 samples, 0.01%)</title><rect x="1176.0" y="101" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.04" y="111.5" ></text>
</g>
<g >
<title>operator new (2,789,990 samples, 0.01%)</title><rect x="1111.3" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1114.26" y="479.5" ></text>
</g>
<g >
<title>cfree (10,908,594 samples, 0.05%)</title><rect x="1024.9" y="293" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1027.87" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,056,013 samples, 0.02%)</title><rect x="318.3" y="517" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="321.27" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,376,419 samples, 0.02%)</title><rect x="1157.5" y="261" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1160.47" y="271.5" ></text>
</g>
<g >
<title>is_close_int (3,666,230 samples, 0.02%)</title><rect x="1036.6" y="405" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1039.65" y="415.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (124,621,948 samples, 0.52%)</title><rect x="323.1" y="485" width="6.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="326.14" y="495.5" ></text>
</g>
<g >
<title>main (9,980,481 samples, 0.04%)</title><rect x="627.5" y="533" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="630.52" y="543.5" ></text>
</g>
<g >
<title>cfree (6,183,085 samples, 0.03%)</title><rect x="1047.2" y="293" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1050.17" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (172,668,216 samples, 0.72%)</title><rect x="1142.6" y="325" width="8.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1145.63" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (10,864,579 samples, 0.05%)</title><rect x="158.2" y="485" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="161.20" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (30,578,370 samples, 0.13%)</title><rect x="1075.9" y="133" width="1.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1078.92" y="143.5" ></text>
</g>
<g >
<title>decltype  (2,080,946 samples, 0.01%)</title><rect x="329.2" y="453" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="332.20" y="463.5" ></text>
</g>
<g >
<title>decltype  (8,813,457 samples, 0.04%)</title><rect x="328.8" y="389" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="331.77" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,455,347 samples, 0.01%)</title><rect x="1047.7" y="245" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1050.67" y="255.5" ></text>
</g>
<g >
<title>__btrfs_bio_end_io (2,510,011 samples, 0.01%)</title><rect x="1106.4" y="309" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1109.38" y="319.5" ></text>
</g>
<g >
<title>cfree (2,336,571 samples, 0.01%)</title><rect x="1144.7" y="245" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1147.66" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,805,499 samples, 0.02%)</title><rect x="319.3" y="453" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="322.26" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (294,438,683 samples, 1.23%)</title><rect x="1005.3" y="373" width="14.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1008.27" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,125,966 samples, 0.06%)</title><rect x="965.9" y="149" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="968.94" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,046,032 samples, 0.01%)</title><rect x="1186.0" y="469" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1189.00" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (13,732,997 samples, 0.06%)</title><rect x="1128.5" y="373" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1131.51" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,283,442 samples, 0.01%)</title><rect x="1132.0" y="389" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1135.00" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (17,822,352 samples, 0.07%)</title><rect x="318.7" y="501" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="321.67" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (5,786,817 samples, 0.02%)</title><rect x="1056.4" y="197" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1059.40" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (183,267,075 samples, 0.77%)</title><rect x="1078.6" y="245" width="9.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1081.63" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,127,328 samples, 0.02%)</title><rect x="1101.4" y="293" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1104.35" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (196,976,327 samples, 0.83%)</title><rect x="1132.2" y="293" width="9.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1135.22" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,057,545 samples, 0.01%)</title><rect x="1074.3" y="165" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1077.26" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,057,885 samples, 0.01%)</title><rect x="1075.4" y="197" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1078.44" y="207.5" ></text>
</g>
<g >
<title>update_process_times (2,081,582 samples, 0.01%)</title><rect x="927.5" y="133" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="930.47" y="143.5" ></text>
</g>
<g >
<title>operator new (25,648,361 samples, 0.11%)</title><rect x="1109.1" y="341" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1112.06" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,501,039 samples, 0.01%)</title><rect x="1026.6" y="405" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1029.64" y="415.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (24,594,646 samples, 0.10%)</title><rect x="735.1" y="485" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="738.14" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (6,895,010 samples, 0.03%)</title><rect x="1177.0" y="277" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1180.04" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,709,345 samples, 0.01%)</title><rect x="72.3" y="469" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="75.28" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (6,753,045 samples, 0.03%)</title><rect x="1019.3" y="245" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1022.32" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,805,499 samples, 0.02%)</title><rect x="319.3" y="469" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="322.26" y="479.5" ></text>
</g>
<g >
<title>std::operator- (19,705,244 samples, 0.08%)</title><rect x="749.7" y="485" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="752.70" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (5,073,811 samples, 0.02%)</title><rect x="1061.6" y="293" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1064.64" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (27,538,664 samples, 0.12%)</title><rect x="1095.4" y="277" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1098.40" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,303,068 samples, 0.01%)</title><rect x="1156.1" y="245" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1159.13" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (3,719,407 samples, 0.02%)</title><rect x="336.7" y="469" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="339.69" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (11,011,976 samples, 0.05%)</title><rect x="545.7" y="453" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="548.70" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (17,993,511 samples, 0.08%)</title><rect x="739.7" y="437" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="742.74" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (27,049,539 samples, 0.11%)</title><rect x="1056.9" y="309" width="1.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1059.90" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,095,079 samples, 0.01%)</title><rect x="893.0" y="469" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="895.97" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (9,126,825 samples, 0.04%)</title><rect x="77.0" y="501" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="80.02" y="511.5" ></text>
</g>
<g >
<title>std::operator- (3,490,290 samples, 0.01%)</title><rect x="889.1" y="453" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="892.08" y="463.5" ></text>
</g>
<g >
<title>operator delete (3,751,391 samples, 0.02%)</title><rect x="1138.2" y="261" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1141.24" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (3,923,207 samples, 0.02%)</title><rect x="1059.0" y="277" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1061.95" y="287.5" ></text>
</g>
<g >
<title>Call::Call (5,575,527 samples, 0.02%)</title><rect x="681.2" y="501" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="684.24" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,431,209 samples, 0.03%)</title><rect x="1172.3" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1175.28" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (37,969,273 samples, 0.16%)</title><rect x="550.0" y="517" width="1.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="553.04" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,589,416 samples, 0.03%)</title><rect x="1149.8" y="181" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1152.80" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::size (3,230,331 samples, 0.01%)</title><rect x="1177.8" y="469" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1180.84" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (4,384,730 samples, 0.02%)</title><rect x="346.6" y="469" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="349.58" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,206,585 samples, 0.01%)</title><rect x="1176.0" y="181" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1178.99" y="191.5" ></text>
</g>
<g >
<title>choose_next_point (72,422,471 samples, 0.30%)</title><rect x="67.3" y="533" width="3.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="70.35" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (570,082,451 samples, 2.39%)</title><rect x="942.1" y="293" width="28.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="945.13" y="303.5" >s..</text>
</g>
<g >
<title>std::stack&lt;Call, std::deque&lt;Call, std::allocator&lt;Call&gt; &gt; &gt;::top (3,971,372 samples, 0.02%)</title><rect x="750.7" y="517" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="753.68" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (17,993,511 samples, 0.08%)</title><rect x="739.7" y="421" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="742.74" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (4,631,492 samples, 0.02%)</title><rect x="1179.2" y="533" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1182.15" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (13,598,422 samples, 0.06%)</title><rect x="298.7" y="485" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="301.70" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (12,493,672 samples, 0.05%)</title><rect x="734.3" y="501" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="737.32" y="511.5" ></text>
</g>
<g >
<title>malloc (11,108,802 samples, 0.05%)</title><rect x="1131.4" y="389" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1134.36" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,772,559 samples, 0.01%)</title><rect x="1083.7" y="149" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1086.73" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,166,340 samples, 0.03%)</title><rect x="1091.0" y="245" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1094.02" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,246,046 samples, 0.01%)</title><rect x="245.1" y="437" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="248.13" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (8,620,248 samples, 0.04%)</title><rect x="887.7" y="437" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="890.69" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,115,438 samples, 0.01%)</title><rect x="1158.7" y="213" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.68" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (45,377,496 samples, 0.19%)</title><rect x="1166.6" y="245" width="2.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1169.58" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (28,363,156 samples, 0.12%)</title><rect x="342.7" y="437" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="345.67" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (46,199,854 samples, 0.19%)</title><rect x="542.3" y="469" width="2.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="545.31" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (11,185,912 samples, 0.05%)</title><rect x="888.3" y="453" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="891.33" y="463.5" ></text>
</g>
<g >
<title>cfree (80,259,044 samples, 0.34%)</title><rect x="1037.9" y="325" width="4.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1040.93" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,567,591 samples, 0.02%)</title><rect x="893.1" y="517" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="896.08" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,089,800 samples, 0.01%)</title><rect x="1057.4" y="261" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1060.36" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (13,034,335 samples, 0.05%)</title><rect x="1127.5" y="373" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1130.53" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (45,377,496 samples, 0.19%)</title><rect x="1166.6" y="213" width="2.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1169.58" y="223.5" ></text>
</g>
<g >
<title>operator new (2,339,299 samples, 0.01%)</title><rect x="1090.9" y="37" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1093.86" y="47.5" ></text>
</g>
<g >
<title>malloc (23,081,542 samples, 0.10%)</title><rect x="1041.9" y="325" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1044.94" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (7,857,502 samples, 0.03%)</title><rect x="316.3" y="453" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="319.34" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (26,810,720 samples, 0.11%)</title><rect x="1154.4" y="437" width="1.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1157.41" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,595,266 samples, 0.02%)</title><rect x="1095.1" y="69" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1098.06" y="79.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::pop_back (2,791,853 samples, 0.01%)</title><rect x="1180.2" y="517" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1183.18" y="527.5" ></text>
</g>
<g >
<title>malloc (2,987,582 samples, 0.01%)</title><rect x="1167.1" y="181" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1170.13" y="191.5" ></text>
</g>
<g >
<title>cfree (2,110,074 samples, 0.01%)</title><rect x="1098.8" y="325" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1101.84" y="335.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (2,612,273 samples, 0.01%)</title><rect x="982.8" y="389" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="985.75" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (99,389,117 samples, 0.42%)</title><rect x="742.5" y="485" width="5.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="745.54" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,309,796 samples, 0.01%)</title><rect x="1061.8" y="245" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1064.75" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,073,658 samples, 0.02%)</title><rect x="82.4" y="389" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="85.43" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (22,508,857 samples, 0.09%)</title><rect x="1156.7" y="277" width="1.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1159.67" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (3,584,651 samples, 0.02%)</title><rect x="510.5" y="501" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="513.46" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,940,040 samples, 0.05%)</title><rect x="1101.7" y="341" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1104.66" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (5,351,625 samples, 0.02%)</title><rect x="72.4" y="469" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="75.41" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (2,316,171 samples, 0.01%)</title><rect x="1092.6" y="261" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1095.60" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (11,011,976 samples, 0.05%)</title><rect x="545.7" y="469" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="548.70" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (16,824,901 samples, 0.07%)</title><rect x="83.2" y="421" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="86.25" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,166,340 samples, 0.03%)</title><rect x="1091.0" y="165" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1094.02" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,973,685 samples, 0.04%)</title><rect x="720.0" y="469" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="722.98" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (2,985,450 samples, 0.01%)</title><rect x="728.5" y="469" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="731.55" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,689,113 samples, 0.02%)</title><rect x="1189.8" y="533" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1192.81" y="543.5" ></text>
</g>
<g >
<title>decltype  (25,964,581 samples, 0.11%)</title><rect x="715.9" y="469" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="718.94" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (13,732,997 samples, 0.06%)</title><rect x="1128.5" y="389" width="0.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1131.51" y="399.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (22,582,978 samples, 0.09%)</title><rect x="156.4" y="469" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="159.36" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (172,668,216 samples, 0.72%)</title><rect x="1142.6" y="277" width="8.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1145.63" y="287.5" ></text>
</g>
<g >
<title>Call&amp; std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::emplace_back&lt;Call&amp;&gt; (8,401,199 samples, 0.04%)</title><rect x="68.4" y="501" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="71.37" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,753,045 samples, 0.03%)</title><rect x="1019.3" y="229" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1022.32" y="239.5" ></text>
</g>
<g >
<title>decltype  (106,081,013 samples, 0.44%)</title><rect x="1092.0" y="405" width="5.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1095.02" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,300,781 samples, 0.05%)</title><rect x="1101.0" y="325" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1104.00" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (27,060,878 samples, 0.11%)</title><rect x="1095.4" y="245" width="1.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1098.42" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,696,811 samples, 0.03%)</title><rect x="157.8" y="437" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="160.82" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,298,883 samples, 0.01%)</title><rect x="1061.9" y="277" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1064.89" y="287.5" ></text>
</g>
<g >
<title>operator new (21,711,008 samples, 0.09%)</title><rect x="711.4" y="517" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="714.44" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,536,388 samples, 0.01%)</title><rect x="627.6" y="485" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="630.56" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (11,011,976 samples, 0.05%)</title><rect x="545.7" y="437" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="548.70" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,093,914 samples, 0.01%)</title><rect x="353.6" y="341" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="356.59" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,948,525 samples, 0.07%)</title><rect x="1157.8" y="261" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1160.84" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (152,499,369 samples, 0.64%)</title><rect x="339.0" y="501" width="7.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="342.03" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (30,105,206 samples, 0.13%)</title><rect x="1140.4" y="261" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1143.42" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (2,779,468 samples, 0.01%)</title><rect x="1035.6" y="341" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1038.63" y="351.5" ></text>
</g>
<g >
<title>Call::Call (159,500,721 samples, 0.67%)</title><rect x="338.7" y="517" width="7.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="341.68" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (14,084,529 samples, 0.06%)</title><rect x="1150.4" y="181" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1153.41" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (27,060,878 samples, 0.11%)</title><rect x="1095.4" y="213" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1098.42" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (44,985,624 samples, 0.19%)</title><rect x="294.7" y="405" width="2.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="297.73" y="415.5" ></text>
</g>
<g >
<title>decltype  (2,164,990 samples, 0.01%)</title><rect x="1075.3" y="85" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1078.29" y="95.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,297,881 samples, 0.01%)</title><rect x="963.1" y="149" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="966.09" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (6,418,909 samples, 0.03%)</title><rect x="1052.2" y="325" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1055.21" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,595,266 samples, 0.02%)</title><rect x="1095.1" y="101" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1098.06" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (29,286,832 samples, 0.12%)</title><rect x="902.7" y="389" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="905.65" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,455,347 samples, 0.01%)</title><rect x="1047.7" y="261" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1050.67" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (312,293,889 samples, 1.31%)</title><rect x="1037.4" y="421" width="15.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1040.35" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (15,684,511 samples, 0.07%)</title><rect x="83.3" y="405" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="86.30" y="415.5" ></text>
</g>
<g >
<title>Call::Call (6,523,824 samples, 0.03%)</title><rect x="627.1" y="485" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="630.06" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,225,470 samples, 0.01%)</title><rect x="884.9" y="277" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="887.87" y="287.5" ></text>
</g>
<g >
<title>malloc (12,036,758 samples, 0.05%)</title><rect x="1059.4" y="325" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1062.44" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (3,675,836 samples, 0.02%)</title><rect x="1180.0" y="517" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1183.00" y="527.5" ></text>
</g>
<g >
<title>operator new (6,906,909 samples, 0.03%)</title><rect x="830.8" y="517" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="833.84" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,962,169 samples, 0.02%)</title><rect x="245.7" y="485" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="248.71" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;Call&gt; &gt;::construct&lt;Call, Call&amp;&gt; (74,225,950 samples, 0.31%)</title><rect x="294.1" y="485" width="3.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="297.06" y="495.5" ></text>
</g>
<g >
<title>gen_all_points (2,582,477 samples, 0.01%)</title><rect x="830.6" y="517" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="833.61" y="527.5" ></text>
</g>
<g >
<title>choose_next_point (9,437,816 samples, 0.04%)</title><rect x="1061.6" y="309" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1064.56" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,499,347 samples, 0.01%)</title><rect x="547.0" y="485" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="549.96" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (3,709,712 samples, 0.02%)</title><rect x="1019.7" y="245" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1022.65" y="255.5" ></text>
</g>
<g >
<title>main (34,767,469 samples, 0.15%)</title><rect x="887.6" y="501" width="1.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="890.57" y="511.5" ></text>
</g>
<g >
<title>decltype  (2,319,039 samples, 0.01%)</title><rect x="892.4" y="501" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="895.37" y="511.5" ></text>
</g>
<g >
<title>Call::Call (2,319,039 samples, 0.01%)</title><rect x="892.4" y="485" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="895.37" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (53,593,957 samples, 0.22%)</title><rect x="889.3" y="533" width="2.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="892.29" y="543.5" ></text>
</g>
<g >
<title>operator new (15,517,640 samples, 0.07%)</title><rect x="933.0" y="261" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="936.04" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (13,880,937 samples, 0.06%)</title><rect x="297.1" y="405" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="300.05" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (5,028,627 samples, 0.02%)</title><rect x="735.6" y="421" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="738.56" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,490,636 samples, 0.03%)</title><rect x="978.3" y="117" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="981.34" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (92,475,353 samples, 0.39%)</title><rect x="742.9" y="469" width="4.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="745.88" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,620,248 samples, 0.04%)</title><rect x="887.7" y="421" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="890.69" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,215,445 samples, 0.03%)</title><rect x="1159.3" y="357" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.33" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (46,199,854 samples, 0.19%)</title><rect x="542.3" y="485" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="545.31" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,046,032 samples, 0.01%)</title><rect x="1186.0" y="517" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1189.00" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,192,297 samples, 0.02%)</title><rect x="1096.6" y="133" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1099.55" y="143.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (17,586,410 samples, 0.07%)</title><rect x="69.5" y="469" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="72.45" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (5,087,022 samples, 0.02%)</title><rect x="156.1" y="501" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="159.09" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,834,663 samples, 0.01%)</title><rect x="954.5" y="245" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="957.54" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (4,602,002 samples, 0.02%)</title><rect x="1110.6" y="405" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1113.64" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (7,658,042 samples, 0.03%)</title><rect x="725.6" y="453" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="728.58" y="463.5" ></text>
</g>
<g >
<title>cfree (211,724,390 samples, 0.89%)</title><rect x="1005.9" y="325" width="10.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1008.87" y="335.5" ></text>
</g>
<g >
<title>Call::~Call (16,824,901 samples, 0.07%)</title><rect x="83.2" y="453" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="86.25" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,503,357 samples, 0.01%)</title><rect x="1178.0" y="549" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1181.04" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (72,117,900 samples, 0.30%)</title><rect x="1114.1" y="421" width="3.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1117.10" y="431.5" ></text>
</g>
<g >
<title>operator delete (2,766,593 samples, 0.01%)</title><rect x="1016.1" y="309" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1019.06" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (30,726,228 samples, 0.13%)</title><rect x="1175.5" y="277" width="1.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1178.50" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (27,989,806 samples, 0.12%)</title><rect x="326.3" y="469" width="1.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="329.30" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (110,145,763 samples, 0.46%)</title><rect x="1170.0" y="325" width="5.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1173.03" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (12,269,985 samples, 0.05%)</title><rect x="1052.9" y="309" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1055.90" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,099,534 samples, 0.01%)</title><rect x="1071.9" y="69" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1074.89" y="79.5" ></text>
</g>
<g >
<title>operator new (24,963,620 samples, 0.10%)</title><rect x="1140.6" y="149" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1143.64" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,035,853 samples, 0.03%)</title><rect x="510.5" y="517" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="513.46" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,840,809 samples, 0.02%)</title><rect x="1002.8" y="245" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1005.84" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,036,401 samples, 0.03%)</title><rect x="1118.4" y="437" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1121.43" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (49,660,202 samples, 0.21%)</title><rect x="1032.7" y="373" width="2.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1035.70" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (637,996,499 samples, 2.68%)</title><rect x="907.6" y="373" width="31.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="910.65" y="383.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,455,347 samples, 0.01%)</title><rect x="1047.7" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1050.67" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (41,189,098 samples, 0.17%)</title><rect x="1050.1" y="357" width="2.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1053.12" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (70,991,769 samples, 0.30%)</title><rect x="551.9" y="517" width="3.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="554.91" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (9,780,685 samples, 0.04%)</title><rect x="726.0" y="453" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="728.95" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (154,944,562 samples, 0.65%)</title><rect x="717.2" y="501" width="7.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="720.23" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (2,302,673 samples, 0.01%)</title><rect x="81.2" y="453" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="84.21" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (6,525,937 samples, 0.03%)</title><rect x="68.5" y="421" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="71.46" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,076,084 samples, 0.01%)</title><rect x="1015.6" y="213" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1018.60" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,185,968 samples, 0.03%)</title><rect x="884.5" y="389" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="887.48" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (8,798,130 samples, 0.04%)</title><rect x="1096.8" y="229" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1099.79" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,376,419 samples, 0.02%)</title><rect x="1157.5" y="213" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1160.47" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,785,250 samples, 0.02%)</title><rect x="1169.5" y="197" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1172.49" y="207.5" ></text>
</g>
<g >
<title>choose_next_point (2,604,477,324 samples, 10.92%)</title><rect x="1026.8" y="485" width="128.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1029.84" y="495.5" >choose_next_point</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (37,747,021 samples, 0.16%)</title><rect x="313.1" y="453" width="1.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="316.09" y="463.5" ></text>
</g>
<g >
<title>choose_next_point (3,945,646 samples, 0.02%)</title><rect x="1178.8" y="549" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1181.84" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (22,267,181 samples, 0.09%)</title><rect x="555.4" y="533" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="558.43" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,155,586 samples, 0.02%)</title><rect x="1049.8" y="197" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1052.78" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,233,870 samples, 0.01%)</title><rect x="1071.9" y="149" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1074.85" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (18,734,760 samples, 0.08%)</title><rect x="740.6" y="421" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="743.63" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (11,879,793 samples, 0.05%)</title><rect x="325.7" y="437" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="328.71" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,775,745 samples, 0.01%)</title><rect x="1071.9" y="101" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1074.87" y="111.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (85,978,463 samples, 0.36%)</title><rect x="616.7" y="469" width="4.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="619.69" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (37,427,329 samples, 0.16%)</title><rect x="725.1" y="501" width="1.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="728.06" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (163,830,619 samples, 0.69%)</title><rect x="970.9" y="309" width="8.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="973.93" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (15,535,505 samples, 0.07%)</title><rect x="135.2" y="517" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="138.19" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,031,758 samples, 0.01%)</title><rect x="900.9" y="309" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="903.93" y="319.5" ></text>
</g>
<g >
<title>main (14,711,336 samples, 0.06%)</title><rect x="644.1" y="517" width="0.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="647.10" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (7,193,797 samples, 0.03%)</title><rect x="72.7" y="437" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="75.68" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (12,931,168 samples, 0.05%)</title><rect x="1074.8" y="149" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1077.76" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (110,145,763 samples, 0.46%)</title><rect x="1170.0" y="341" width="5.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1173.03" y="351.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,259,971 samples, 0.01%)</title><rect x="70.3" y="469" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="73.32" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;Call, std::allocator&lt;Call&gt; &gt;::size (9,507,366 samples, 0.04%)</title><rect x="84.1" y="501" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="87.08" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,274,412 samples, 0.01%)</title><rect x="1072.6" y="133" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1075.58" y="143.5" ></text>
</g>
</g>
</svg>
