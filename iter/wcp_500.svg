<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>operator   (8 samples, 0.18%)</title><rect x="1047.9" y="277" width="2.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1050.95" y="287.5" ></text>
</g>
<g >
<title>std::operator-   (16 samples, 0.36%)</title><rect x="1185.8" y="373" width="4.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1188.78" y="383.5" ></text>
</g>
<g >
<title>malloc   (56 samples, 1.25%)</title><rect x="851.0" y="229" width="14.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="853.97" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (682 samples, 15.26%)</title><rect x="48.6" y="293" width="180.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="51.55" y="303.5" >std::_Rb_tree&lt;std::pair..</text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;int   (1 samples, 0.02%)</title><rect x="652.4" y="309" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="655.41" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (27 samples, 0.60%)</title><rect x="1175.2" y="229" width="7.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1178.21" y="239.5" ></text>
</g>
<g >
<title>malloc   (17 samples, 0.38%)</title><rect x="1059.6" y="85" width="4.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1062.56" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (35 samples, 0.78%)</title><rect x="774.4" y="197" width="9.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="777.40" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (110 samples, 2.46%)</title><rect x="1141.2" y="229" width="29.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1144.15" y="239.5" >st..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (21 samples, 0.47%)</title><rect x="1176.8" y="197" width="5.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1179.80" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (68 samples, 1.52%)</title><rect x="847.8" y="261" width="18.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="850.80" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (124 samples, 2.77%)</title><rect x="308.1" y="293" width="32.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="311.10" y="303.5" >st..</text>
</g>
<g >
<title>Call::~Call   (366 samples, 8.19%)</title><rect x="1073.6" y="341" width="96.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1076.56" y="351.5" >Call::~Call  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (122 samples, 2.73%)</title><rect x="783.6" y="229" width="32.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="786.64" y="239.5" >st..</text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (6 samples, 0.13%)</title><rect x="880.5" y="309" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="883.54" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (209 samples, 4.68%)</title><rect x="531.2" y="293" width="55.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="534.22" y="303.5" >std::..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (145 samples, 3.24%)</title><rect x="548.1" y="261" width="38.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="551.12" y="271.5" >std..</text>
</g>
<g >
<title>??   (3 samples, 0.07%)</title><rect x="1176.0" y="101" width="0.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1179.01" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (42 samples, 0.94%)</title><rect x="710.8" y="309" width="11.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="713.77" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (629 samples, 14.07%)</title><rect x="62.5" y="261" width="166.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="65.54" y="271.5" >std::_Rb_tree&lt;std::pa..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (840 samples, 18.80%)</title><rect x="16.1" y="325" width="221.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="19.07" y="335.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt;   (55 samples, 1.23%)</title><rect x="1050.1" y="341" width="14.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1053.06" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (244 samples, 5.46%)</title><rect x="976.9" y="149" width="64.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="979.92" y="159.5" >std::al..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (479 samples, 10.72%)</title><rect x="501.6" y="357" width="126.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="504.64" y="367.5" >std::_Rb_tree&lt;s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (25 samples, 0.56%)</title><rect x="1052.2" y="149" width="6.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1055.17" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (42 samples, 0.94%)</title><rect x="710.8" y="293" width="11.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="713.77" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="773.6" y="181" width="0.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="776.61" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (56 samples, 1.25%)</title><rect x="533.3" y="245" width="14.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="536.33" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance(bool   (1 samples, 0.02%)</title><rect x="880.0" y="341" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="883.02" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.13%)</title><rect x="531.7" y="245" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="534.75" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset   (1 samples, 0.02%)</title><rect x="1047.2" y="245" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1050.15" y="255.5" ></text>
</g>
<g >
<title>roundf64   (8 samples, 0.18%)</title><rect x="706.3" y="373" width="2.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="709.28" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (122 samples, 2.73%)</title><rect x="783.6" y="213" width="32.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="786.64" y="223.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (5 samples, 0.11%)</title><rect x="1052.7" y="117" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1055.70" y="127.5" ></text>
</g>
<g >
<title>malloc   (29 samples, 0.65%)</title><rect x="941.8" y="69" width="7.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="944.80" y="79.5" ></text>
</g>
<g >
<title>??   (7 samples, 0.16%)</title><rect x="308.6" y="165" width="1.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="311.63" y="175.5" ></text>
</g>
<g >
<title>operator   (7 samples, 0.16%)</title><rect x="1100.2" y="149" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1103.23" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt;   (477 samples, 10.67%)</title><rect x="921.5" y="357" width="125.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="924.47" y="367.5" >std::allocator_..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.04%)</title><rect x="1052.2" y="85" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1055.17" y="95.5" ></text>
</g>
<g >
<title>??   (9 samples, 0.20%)</title><rect x="1061.7" y="69" width="2.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1064.68" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (10 samples, 0.22%)</title><rect x="63.1" y="181" width="2.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="66.07" y="191.5" ></text>
</g>
<g >
<title>operator   (158 samples, 3.54%)</title><rect x="586.4" y="245" width="41.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="589.40" y="255.5" >ope..</text>
</g>
<g >
<title>std::stack&lt;Call   (441 samples, 9.87%)</title><rect x="1073.6" y="405" width="116.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1076.56" y="415.5" >std::stack&lt;Cal..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (94 samples, 2.10%)</title><rect x="628.9" y="373" width="24.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="631.91" y="383.5" >s..</text>
</g>
<g >
<title>std::allocator&lt;Call&gt;::deallocate   (5 samples, 0.11%)</title><rect x="1170.2" y="325" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1173.20" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (366 samples, 8.19%)</title><rect x="1073.6" y="309" width="96.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1076.56" y="319.5" >std::_Rb_tr..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (282 samples, 6.31%)</title><rect x="154.2" y="229" width="74.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="157.17" y="239.5" >std::all..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (381 samples, 8.53%)</title><rect x="306.5" y="309" width="100.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="309.52" y="319.5" >std::_Rb_tre..</text>
</g>
<g >
<title>std::destroy_at&lt;Call&gt;   (54 samples, 1.21%)</title><rect x="1171.5" y="341" width="14.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1174.52" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (52 samples, 1.16%)</title><rect x="1172.0" y="261" width="13.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1175.05" y="271.5" ></text>
</g>
<g >
<title>Call::~Call   (479 samples, 10.72%)</title><rect x="501.6" y="389" width="126.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="504.64" y="399.5" >Call::~Call  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (9 samples, 0.20%)</title><rect x="308.1" y="261" width="2.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="311.10" y="271.5" ></text>
</g>
<g >
<title>round@plt   (4 samples, 0.09%)</title><rect x="705.2" y="373" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="708.22" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (52 samples, 1.16%)</title><rect x="1100.2" y="229" width="13.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1103.23" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum   (19 samples, 0.43%)</title><rect x="228.6" y="309" width="5.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="231.63" y="319.5" ></text>
</g>
<g >
<title>??   (62 samples, 1.39%)</title><rect x="1124.8" y="133" width="16.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1127.78" y="143.5" ></text>
</g>
<g >
<title>std::construct_at&lt;Call   (55 samples, 1.23%)</title><rect x="1050.1" y="325" width="14.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1053.06" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (284 samples, 6.35%)</title><rect x="772.8" y="277" width="75.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="775.81" y="287.5" >std::_Rb..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (68 samples, 1.52%)</title><rect x="847.8" y="293" width="18.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="850.80" y="303.5" ></text>
</g>
<g >
<title>get_inbetween_points   (261 samples, 5.84%)</title><rect x="653.7" y="389" width="68.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="656.73" y="399.5" >get_inb..</text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="652.7" y="309" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="655.68" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (158 samples, 3.54%)</title><rect x="586.4" y="261" width="41.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="589.40" y="271.5" >std..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (1 samples, 0.02%)</title><rect x="652.4" y="325" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="655.41" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (103 samples, 2.30%)</title><rect x="1114.0" y="229" width="27.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1116.96" y="239.5" >s..</text>
</g>
<g >
<title>std::deque&lt;Call   (553 samples, 12.37%)</title><rect x="918.8" y="373" width="146.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="921.83" y="383.5" >std::deque&lt;Call  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (56 samples, 1.25%)</title><rect x="533.3" y="229" width="14.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="536.33" y="239.5" ></text>
</g>
<g >
<title>choose_next_point   (2,232 samples, 49.94%)</title><rect x="484.2" y="405" width="589.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="487.22" y="415.5" >choose_next_point  </text>
</g>
<g >
<title>operator   (121 samples, 2.71%)</title><rect x="783.9" y="181" width="32.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="786.90" y="191.5" >op..</text>
</g>
<g >
<title>Call::~Call   (54 samples, 1.21%)</title><rect x="1171.5" y="325" width="14.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1174.52" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="773.6" y="213" width="0.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="776.61" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (292 samples, 6.53%)</title><rect x="407.1" y="309" width="77.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="410.12" y="319.5" >std::all..</text>
</g>
<g >
<title>gen_all_points   (97 samples, 2.17%)</title><rect x="628.1" y="389" width="25.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="631.12" y="399.5" >g..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (5 samples, 0.11%)</title><rect x="1052.7" y="85" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1055.70" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (5 samples, 0.11%)</title><rect x="1175.5" y="213" width="1.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1178.48" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (13 samples, 0.29%)</title><rect x="1182.3" y="229" width="3.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1185.34" y="239.5" ></text>
</g>
<g >
<title>operator   (101 samples, 2.26%)</title><rect x="950.0" y="101" width="26.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="952.99" y="111.5" >o..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (31 samples, 0.69%)</title><rect x="1065.4" y="357" width="8.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1068.37" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum   (8 samples, 0.18%)</title><rect x="865.8" y="309" width="2.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="868.76" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (145 samples, 3.24%)</title><rect x="938.4" y="165" width="38.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="941.37" y="175.5" >std..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (9 samples, 0.20%)</title><rect x="308.1" y="245" width="2.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="311.10" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (2 samples, 0.04%)</title><rect x="722.1" y="309" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="725.12" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (292 samples, 6.53%)</title><rect x="407.1" y="277" width="77.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="410.12" y="287.5" >std::__n..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt;   (366 samples, 8.19%)</title><rect x="1073.6" y="373" width="96.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1076.56" y="383.5" >std::alloca..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (4 samples, 0.09%)</title><rect x="1175.7" y="197" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1178.74" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (21 samples, 0.47%)</title><rect x="1176.8" y="181" width="5.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1179.80" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (121 samples, 2.71%)</title><rect x="815.9" y="229" width="31.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="818.85" y="239.5" >st..</text>
</g>
<g >
<title>free   (23 samples, 0.51%)</title><rect x="1067.5" y="261" width="6.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1070.48" y="271.5" ></text>
</g>
<g >
<title>operator   (5 samples, 0.11%)</title><rect x="1170.2" y="293" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1173.20" y="303.5" ></text>
</g>
<g >
<title>operator   (249 samples, 5.57%)</title><rect x="341.4" y="245" width="65.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="344.37" y="255.5" >operato..</text>
</g>
<g >
<title>??   (1 samples, 0.02%)</title><rect x="721.6" y="213" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="724.59" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (97 samples, 2.17%)</title><rect x="65.7" y="213" width="25.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="68.71" y="223.5" >s..</text>
</g>
<g >
<title>malloc   (235 samples, 5.26%)</title><rect x="166.6" y="181" width="62.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="169.58" y="191.5" >malloc  </text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (13 samples, 0.29%)</title><rect x="1182.3" y="213" width="3.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1185.34" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (56 samples, 1.25%)</title><rect x="533.3" y="261" width="14.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="536.33" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (2 samples, 0.04%)</title><rect x="1052.2" y="117" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1055.17" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (118 samples, 2.64%)</title><rect x="882.4" y="309" width="31.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="885.39" y="319.5" >st..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (35 samples, 0.78%)</title><rect x="774.4" y="181" width="9.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="777.40" y="191.5" ></text>
</g>
<g >
<title>operator   (102 samples, 2.28%)</title><rect x="1114.2" y="165" width="27.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1117.22" y="175.5" >o..</text>
</g>
<g >
<title>operator   (56 samples, 1.25%)</title><rect x="533.3" y="213" width="14.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="536.33" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (366 samples, 8.19%)</title><rect x="1073.6" y="325" width="96.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1076.56" y="335.5" >std::set&lt;st..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.02%)</title><rect x="1175.5" y="149" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1178.48" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (54 samples, 1.21%)</title><rect x="708.4" y="373" width="14.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="711.39" y="383.5" ></text>
</g>
<g >
<title>operator   (4 samples, 0.09%)</title><rect x="1175.7" y="133" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1178.74" y="143.5" ></text>
</g>
<g >
<title>operator   (275 samples, 6.15%)</title><rect x="156.0" y="197" width="72.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="159.01" y="207.5" >operator  </text>
</g>
<g >
<title>operator   (109 samples, 2.44%)</title><rect x="1141.4" y="181" width="28.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1144.42" y="191.5" >op..</text>
</g>
<g >
<title>malloc   (83 samples, 1.86%)</title><rect x="69.4" y="149" width="21.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="72.41" y="159.5" >m..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (852 samples, 19.06%)</title><rect x="13.2" y="389" width="224.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="16.17" y="399.5" >std::set&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (107 samples, 2.39%)</title><rect x="63.1" y="229" width="28.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="66.07" y="239.5" >s..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.13%)</title><rect x="531.7" y="229" width="1.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="534.75" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (39 samples, 0.87%)</title><rect x="939.2" y="101" width="10.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="942.16" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (45 samples, 1.01%)</title><rect x="1173.9" y="245" width="11.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1176.89" y="255.5" ></text>
</g>
<g >
<title>??   (5 samples, 0.11%)</title><rect x="532.0" y="149" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="535.01" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (366 samples, 8.19%)</title><rect x="1073.6" y="293" width="96.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1076.56" y="303.5" >std::_Rb_tr..</text>
</g>
<g >
<title>free   (7 samples, 0.16%)</title><rect x="1100.2" y="117" width="1.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1103.23" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;Call   (441 samples, 9.87%)</title><rect x="1073.6" y="389" width="116.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1076.56" y="399.5" >std::deque&lt;Cal..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.02%)</title><rect x="1175.5" y="165" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1178.48" y="175.5" ></text>
</g>
<g >
<title>malloc   (3 samples, 0.07%)</title><rect x="938.4" y="53" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="941.37" y="63.5" ></text>
</g>
<g >
<title>??   (2 samples, 0.04%)</title><rect x="1171.0" y="245" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1173.99" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (33 samples, 0.74%)</title><rect x="1064.8" y="373" width="8.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1067.84" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="938.4" y="133" width="0.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="941.37" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt;   (5 samples, 0.11%)</title><rect x="1170.2" y="341" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1173.20" y="351.5" ></text>
</g>
<g >
<title>??   (13 samples, 0.29%)</title><rect x="1178.9" y="117" width="3.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1181.91" y="127.5" ></text>
</g>
<g >
<title>operator   (45 samples, 1.01%)</title><rect x="1102.1" y="149" width="11.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1105.07" y="159.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (3 samples, 0.07%)</title><rect x="881.3" y="293" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="884.34" y="303.5" ></text>
</g>
<g >
<title>operator   (10 samples, 0.22%)</title><rect x="63.1" y="149" width="2.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="66.07" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (115 samples, 2.57%)</title><rect x="310.5" y="261" width="30.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="313.48" y="271.5" >st..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (235 samples, 5.26%)</title><rect x="91.6" y="213" width="62.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="94.59" y="223.5" >std::a..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (45 samples, 1.01%)</title><rect x="1102.1" y="181" width="11.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1105.07" y="191.5" ></text>
</g>
<g >
<title>??   (100 samples, 2.24%)</title><rect x="601.7" y="197" width="26.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="604.72" y="207.5" >?..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (110 samples, 2.46%)</title><rect x="1141.2" y="213" width="29.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1144.15" y="223.5" >st..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (20 samples, 0.45%)</title><rect x="1058.8" y="117" width="5.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1061.77" y="127.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (54 samples, 1.21%)</title><rect x="1171.5" y="309" width="14.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1174.52" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (4 samples, 0.09%)</title><rect x="708.4" y="357" width="1.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="711.39" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (465 samples, 10.41%)</title><rect x="923.3" y="245" width="122.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="926.32" y="255.5" >std::_Rb_tree&lt;s..</text>
</g>
<g >
<title>malloc   (1 samples, 0.02%)</title><rect x="1052.4" y="37" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1055.43" y="47.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_rotate_right   (7 samples, 0.16%)</title><rect x="878.2" y="325" width="1.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="881.17" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (94 samples, 2.10%)</title><rect x="628.9" y="357" width="24.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="631.91" y="367.5" >s..</text>
</g>
<g >
<title>free   (6 samples, 0.13%)</title><rect x="531.7" y="165" width="1.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="534.75" y="175.5" ></text>
</g>
<g >
<title>malloc   (102 samples, 2.28%)</title><rect x="820.9" y="181" width="26.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="823.87" y="191.5" >m..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (42 samples, 0.94%)</title><rect x="710.8" y="277" width="11.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="713.77" y="287.5" ></text>
</g>
<g >
<title>std::stack&lt;Call   (553 samples, 12.37%)</title><rect x="918.8" y="389" width="146.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="921.83" y="399.5" >std::stack&lt;Call  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (343 samples, 7.68%)</title><rect x="63.1" y="245" width="90.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="66.07" y="255.5" >std::_Rb_t..</text>
</g>
<g >
<title>operator   (8 samples, 0.18%)</title><rect x="308.4" y="197" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="311.37" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (55 samples, 1.23%)</title><rect x="1050.1" y="261" width="14.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1053.06" y="271.5" ></text>
</g>
<g >
<title>free   (2 samples, 0.04%)</title><rect x="340.8" y="245" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="343.84" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int   (8 samples, 0.18%)</title><rect x="880.3" y="341" width="2.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="883.28" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (7 samples, 0.16%)</title><rect x="1100.2" y="181" width="1.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1103.23" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (145 samples, 3.24%)</title><rect x="548.1" y="277" width="38.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="551.12" y="287.5" >std..</text>
</g>
<g >
<title>operator   (5 samples, 0.11%)</title><rect x="1052.7" y="69" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1055.70" y="79.5" ></text>
</g>
<g >
<title>operator   (28 samples, 0.63%)</title><rect x="1066.2" y="293" width="7.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1069.16" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (742 samples, 16.60%)</title><rect x="722.9" y="373" width="195.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="725.91" y="383.5" >std::_Rb_tree&lt;std::pair&lt;i..</text>
</g>
<g >
<title>??   (1 samples, 0.02%)</title><rect x="783.4" y="133" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="786.38" y="143.5" ></text>
</g>
<g >
<title>free   (246 samples, 5.50%)</title><rect x="342.2" y="213" width="64.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="345.16" y="223.5" >free  </text>
</g>
<g >
<title>operator   (13 samples, 0.29%)</title><rect x="1182.3" y="181" width="3.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1185.34" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (145 samples, 3.24%)</title><rect x="548.1" y="245" width="38.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="551.12" y="255.5" >std..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (110 samples, 2.46%)</title><rect x="1141.2" y="245" width="29.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1144.15" y="255.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree_decrement(std::_Rb_tree_node_base*)@plt   (1 samples, 0.02%)</title><rect x="882.1" y="325" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="885.13" y="335.5" ></text>
</g>
<g >
<title>operator   (20 samples, 0.45%)</title><rect x="1058.8" y="101" width="5.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1061.77" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (251 samples, 5.62%)</title><rect x="340.8" y="261" width="66.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="343.84" y="271.5" >std::__..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (97 samples, 2.17%)</title><rect x="65.7" y="197" width="25.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="68.71" y="207.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.02%)</title><rect x="1175.5" y="197" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1178.48" y="207.5" ></text>
</g>
<g >
<title>operator   (116 samples, 2.60%)</title><rect x="817.2" y="197" width="30.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="820.17" y="207.5" >op..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (20 samples, 0.45%)</title><rect x="1058.8" y="149" width="5.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1061.77" y="159.5" ></text>
</g>
<g >
<title>main   (4,469 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >main  </text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (42 samples, 0.94%)</title><rect x="710.8" y="325" width="11.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="713.77" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (479 samples, 10.72%)</title><rect x="501.6" y="341" width="126.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="504.64" y="351.5" >std::_Rb_tree&lt;s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (473 samples, 10.58%)</title><rect x="922.5" y="277" width="124.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="925.53" y="287.5" >std::_Rb_tree&lt;s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="773.6" y="197" width="0.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="776.61" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.04%)</title><rect x="1052.2" y="101" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1055.17" y="111.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (118 samples, 2.64%)</title><rect x="882.4" y="341" width="31.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="885.39" y="351.5" >st..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (4 samples, 0.09%)</title><rect x="708.4" y="341" width="1.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="711.39" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (236 samples, 5.28%)</title><rect x="91.3" y="229" width="62.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="94.32" y="239.5" >std::a..</text>
</g>
<g >
<title>??   (3 samples, 0.07%)</title><rect x="1058.0" y="53" width="0.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1060.98" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (160 samples, 3.58%)</title><rect x="773.6" y="245" width="42.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="776.61" y="255.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (7 samples, 0.16%)</title><rect x="1052.2" y="133" width="1.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1055.17" y="143.5" ></text>
</g>
<g >
<title>malloc   (106 samples, 2.37%)</title><rect x="787.9" y="165" width="28.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="790.87" y="175.5" >m..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (73 samples, 1.63%)</title><rect x="633.1" y="325" width="19.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="636.14" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (397 samples, 8.88%)</title><rect x="523.3" y="309" width="104.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="526.30" y="319.5" >std::_Rb_tre..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (10 samples, 0.22%)</title><rect x="63.1" y="213" width="2.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="66.07" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (235 samples, 5.26%)</title><rect x="91.6" y="197" width="62.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="94.59" y="207.5" >std::_..</text>
</g>
<g >
<title>operator   (6 samples, 0.13%)</title><rect x="531.7" y="181" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="534.75" y="191.5" ></text>
</g>
<g >
<title>operator   (21 samples, 0.47%)</title><rect x="1176.8" y="165" width="5.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1179.80" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (103 samples, 2.30%)</title><rect x="949.5" y="117" width="27.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="952.46" y="127.5" >s..</text>
</g>
<g >
<title>malloc   (25 samples, 0.56%)</title><rect x="777.0" y="149" width="6.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="780.04" y="159.5" ></text>
</g>
<g >
<title>operator   (68 samples, 1.52%)</title><rect x="847.8" y="245" width="18.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="850.80" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (158 samples, 3.54%)</title><rect x="586.4" y="293" width="41.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="589.40" y="303.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (55 samples, 1.23%)</title><rect x="1050.1" y="277" width="14.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1053.06" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (695 samples, 15.55%)</title><rect x="730.0" y="357" width="183.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="733.04" y="367.5" >std::_Rb_tree&lt;std::pair..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (845 samples, 18.91%)</title><rect x="15.0" y="357" width="223.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="18.02" y="367.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>malloc   (16 samples, 0.36%)</title><rect x="1054.5" y="69" width="4.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1057.55" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (4 samples, 0.09%)</title><rect x="1175.7" y="181" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1178.74" y="191.5" ></text>
</g>
<g >
<title>??   (6 samples, 0.13%)</title><rect x="947.9" y="53" width="1.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="950.87" y="63.5" ></text>
</g>
<g >
<title>malloc   (203 samples, 4.54%)</title><rect x="100.0" y="165" width="53.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="103.04" y="175.5" >mallo..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt;   (8 samples, 0.18%)</title><rect x="1047.9" y="325" width="2.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1050.95" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (103 samples, 2.30%)</title><rect x="1114.0" y="213" width="27.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1116.96" y="223.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (9 samples, 0.20%)</title><rect x="308.1" y="229" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="311.10" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (10 samples, 0.22%)</title><rect x="63.1" y="197" width="2.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="66.07" y="207.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_rotate_left   (2 samples, 0.04%)</title><rect x="877.6" y="325" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="880.64" y="335.5" ></text>
</g>
<g >
<title>free   (13 samples, 0.29%)</title><rect x="1182.3" y="149" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1185.34" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (45 samples, 1.01%)</title><rect x="1102.1" y="213" width="11.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1105.07" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (284 samples, 6.35%)</title><rect x="153.6" y="245" width="75.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="156.64" y="255.5" >std::all..</text>
</g>
<g >
<title>free   (136 samples, 3.04%)</title><rect x="550.5" y="197" width="35.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="553.49" y="207.5" >fre..</text>
</g>
<g >
<title>std::allocator&lt;Call&gt;::allocate   (8 samples, 0.18%)</title><rect x="1047.9" y="309" width="2.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1050.95" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (45 samples, 1.01%)</title><rect x="1052.2" y="165" width="11.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1055.17" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (394 samples, 8.82%)</title><rect x="937.3" y="197" width="104.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="940.31" y="207.5" >std::_Rb_tre..</text>
</g>
<g >
<title>Call::Call   (853 samples, 19.09%)</title><rect x="12.9" y="405" width="225.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="15.90" y="415.5" >Call::Call  </text>
</g>
<g >
<title>??   (19 samples, 0.43%)</title><rect x="810.8" y="149" width="5.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="813.84" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (21 samples, 0.47%)</title><rect x="1176.8" y="213" width="5.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1179.80" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;Call   (5 samples, 0.11%)</title><rect x="1170.2" y="357" width="1.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1173.20" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (10 samples, 0.22%)</title><rect x="63.1" y="165" width="2.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="66.07" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;Call   (66 samples, 1.48%)</title><rect x="1047.4" y="357" width="17.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1050.42" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (449 samples, 10.05%)</title><rect x="509.6" y="325" width="118.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="512.57" y="335.5" >std::_Rb_tree&lt;..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.40%)</title><rect x="1054.0" y="117" width="4.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1057.02" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (62 samples, 1.39%)</title><rect x="531.7" y="277" width="16.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="534.75" y="287.5" ></text>
</g>
<g >
<title>operator   (2 samples, 0.04%)</title><rect x="1052.2" y="53" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1055.17" y="63.5" ></text>
</g>
<g >
<title>malloc   (27 samples, 0.60%)</title><rect x="636.3" y="245" width="7.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="639.31" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (245 samples, 5.48%)</title><rect x="976.7" y="165" width="64.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="979.65" y="175.5" >std::al..</text>
</g>
<g >
<title>??   (175 samples, 3.92%)</title><rect x="438.0" y="213" width="46.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="441.01" y="223.5" >??  </text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (50 samples, 1.12%)</title><rect x="709.4" y="357" width="13.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="712.45" y="367.5" ></text>
</g>
<g >
<title>malloc   (83 samples, 1.86%)</title><rect x="954.7" y="85" width="22.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="957.74" y="95.5" >m..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (7 samples, 0.16%)</title><rect x="1100.2" y="165" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1103.23" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (121 samples, 2.71%)</title><rect x="815.9" y="213" width="31.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="818.85" y="223.5" >st..</text>
</g>
<g >
<title>operator   (20 samples, 0.45%)</title><rect x="1177.1" y="149" width="5.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1180.06" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (122 samples, 2.73%)</title><rect x="783.6" y="197" width="32.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="786.64" y="207.5" >st..</text>
</g>
<g >
<title>operator   (39 samples, 0.87%)</title><rect x="939.2" y="85" width="10.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="942.16" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (68 samples, 1.52%)</title><rect x="847.8" y="277" width="18.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="850.80" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (72 samples, 1.61%)</title><rect x="633.4" y="309" width="19.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="636.40" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (282 samples, 6.31%)</title><rect x="773.3" y="261" width="74.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="776.34" y="271.5" >std::_Rb..</text>
</g>
<g >
<title>free   (51 samples, 1.14%)</title><rect x="534.6" y="181" width="13.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="537.65" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.02%)</title><rect x="1175.5" y="181" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1178.48" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (9 samples, 0.20%)</title><rect x="1043.7" y="229" width="2.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1046.72" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (399 samples, 8.93%)</title><rect x="760.4" y="309" width="105.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="763.41" y="319.5" >std::_Rb_tre..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (477 samples, 10.67%)</title><rect x="921.5" y="309" width="125.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="924.47" y="319.5" >std::set&lt;std::p..</text>
</g>
<g >
<title>std::max&lt;unsigned   (1 samples, 0.02%)</title><rect x="653.5" y="309" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="656.47" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (299 samples, 6.69%)</title><rect x="1091.2" y="261" width="79.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1094.25" y="271.5" >std::_Rb_..</text>
</g>
<g >
<title>std::deque&lt;Call   (59 samples, 1.32%)</title><rect x="1170.2" y="373" width="15.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1173.20" y="383.5" ></text>
</g>
<g >
<title>is_close_int   (85 samples, 1.90%)</title><rect x="682.8" y="373" width="22.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="685.78" y="383.5" >i..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (91 samples, 2.04%)</title><rect x="629.7" y="341" width="24.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="632.70" y="351.5" >s..</text>
</g>
<g >
<title>??   (5 samples, 0.11%)</title><rect x="1100.8" y="101" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1103.75" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (97 samples, 2.17%)</title><rect x="65.7" y="181" width="25.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="68.71" y="191.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (932 samples, 20.85%)</title><rect x="238.1" y="373" width="246.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="241.13" y="383.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>operator   (4 samples, 0.09%)</title><rect x="1175.7" y="149" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1178.74" y="159.5" ></text>
</g>
<g >
<title>??   (30 samples, 0.67%)</title><rect x="540.2" y="165" width="7.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="543.19" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (13 samples, 0.29%)</title><rect x="1182.3" y="197" width="3.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1185.34" y="207.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (20 samples, 0.45%)</title><rect x="913.5" y="357" width="5.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="916.55" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (72 samples, 1.61%)</title><rect x="633.4" y="293" width="19.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="636.40" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (54 samples, 1.21%)</title><rect x="1171.5" y="293" width="14.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1174.52" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (158 samples, 3.54%)</title><rect x="586.4" y="277" width="41.7" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="589.40" y="287.5" >std..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="773.6" y="165" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="776.61" y="175.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.02%)</title><rect x="1175.5" y="117" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1178.48" y="127.5" ></text>
</g>
<g >
<title>operator   (39 samples, 0.87%)</title><rect x="711.6" y="261" width="10.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="714.56" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (1 samples, 0.02%)</title><rect x="1064.1" y="213" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1067.05" y="223.5" ></text>
</g>
<g >
<title>free   (8 samples, 0.18%)</title><rect x="308.4" y="181" width="2.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="311.37" y="191.5" ></text>
</g>
<g >
<title>operator   (52 samples, 1.16%)</title><rect x="534.4" y="197" width="13.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="537.39" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (28 samples, 0.63%)</title><rect x="1066.2" y="341" width="7.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1069.16" y="351.5" ></text>
</g>
<g >
<title>operator   (291 samples, 6.51%)</title><rect x="407.4" y="261" width="76.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="410.38" y="271.5" >operator  </text>
</g>
<g >
<title>Call::Call   (55 samples, 1.23%)</title><rect x="1050.1" y="309" width="14.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1053.06" y="319.5" ></text>
</g>
<g >
<title>operator   (24 samples, 0.54%)</title><rect x="1067.2" y="277" width="6.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1070.22" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (6 samples, 0.13%)</title><rect x="531.7" y="261" width="1.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="534.75" y="271.5" ></text>
</g>
<g >
<title>free   (112 samples, 2.51%)</title><rect x="311.3" y="197" width="29.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="314.27" y="207.5" >fr..</text>
</g>
<g >
<title>operator   (45 samples, 1.01%)</title><rect x="1102.1" y="165" width="11.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1105.07" y="175.5" ></text>
</g>
<g >
<title>??   (4 samples, 0.09%)</title><rect x="1053.0" y="37" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1055.96" y="47.5" ></text>
</g>
<g >
<title>malloc   (35 samples, 0.78%)</title><rect x="711.8" y="245" width="9.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="714.82" y="255.5" ></text>
</g>
<g >
<title>operator   (3 samples, 0.07%)</title><rect x="1170.7" y="277" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1173.72" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (72 samples, 1.61%)</title><rect x="633.4" y="277" width="19.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="636.40" y="287.5" ></text>
</g>
<g >
<title>free   (280 samples, 6.27%)</title><rect x="410.3" y="229" width="73.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="413.29" y="239.5" >free  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (282 samples, 6.31%)</title><rect x="154.2" y="213" width="74.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="157.17" y="223.5" >std::__n..</text>
</g>
<g >
<title>operator   (13 samples, 0.29%)</title><rect x="1182.3" y="165" width="3.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1185.34" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (45 samples, 1.01%)</title><rect x="1052.2" y="181" width="11.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1055.17" y="191.5" ></text>
</g>
<g >
<title>malloc   (2 samples, 0.04%)</title><rect x="773.9" y="133" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="776.87" y="143.5" ></text>
</g>
<g >
<title>operator   (3 samples, 0.07%)</title><rect x="721.1" y="245" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="724.06" y="255.5" ></text>
</g>
<g >
<title>operator   (115 samples, 2.57%)</title><rect x="310.5" y="213" width="30.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="313.48" y="223.5" >op..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (448 samples, 10.02%)</title><rect x="751.4" y="341" width="118.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="754.43" y="351.5" >std::_Rb_tree&lt;..</text>
</g>
<g >
<title>operator   (35 samples, 0.78%)</title><rect x="774.4" y="165" width="9.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="777.40" y="175.5" ></text>
</g>
<g >
<title>free   (105 samples, 2.35%)</title><rect x="1142.5" y="165" width="27.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1145.47" y="175.5" >f..</text>
</g>
<g >
<title>??   (1 samples, 0.02%)</title><rect x="1175.5" y="85" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1178.48" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (5 samples, 0.11%)</title><rect x="1052.7" y="101" width="1.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1055.70" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (4 samples, 0.09%)</title><rect x="708.4" y="325" width="1.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="711.39" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (121 samples, 2.71%)</title><rect x="815.9" y="245" width="31.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="818.85" y="255.5" >st..</text>
</g>
<g >
<title>??   (81 samples, 1.81%)</title><rect x="319.5" y="181" width="21.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="322.46" y="191.5" >?..</text>
</g>
<g >
<title>std::construct_at&lt;Call   (477 samples, 10.67%)</title><rect x="921.5" y="341" width="125.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="924.47" y="351.5" >std::construct_..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (932 samples, 20.85%)</title><rect x="238.1" y="389" width="246.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="241.13" y="399.5" >std::set&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="938.4" y="85" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="941.37" y="95.5" ></text>
</g>
<g >
<title>operator   (115 samples, 2.57%)</title><rect x="310.5" y="229" width="30.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="313.48" y="239.5" >op..</text>
</g>
<g >
<title>free   (4 samples, 0.09%)</title><rect x="1175.7" y="117" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1178.74" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (38 samples, 0.85%)</title><rect x="773.6" y="229" width="10.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="776.61" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance   (39 samples, 0.87%)</title><rect x="869.7" y="341" width="10.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="872.72" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;Call   (8 samples, 0.18%)</title><rect x="1047.9" y="341" width="2.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1050.95" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (20 samples, 0.45%)</title><rect x="913.5" y="325" width="5.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="916.55" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (115 samples, 2.57%)</title><rect x="310.5" y="277" width="30.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="313.48" y="287.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (54 samples, 1.21%)</title><rect x="1050.1" y="245" width="14.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1053.06" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (632 samples, 14.14%)</title><rect x="61.8" y="277" width="166.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="64.75" y="287.5" >std::_Rb_tree&lt;std::pa..</text>
</g>
<g >
<title>operator   (8 samples, 0.18%)</title><rect x="308.4" y="213" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="311.37" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (47 samples, 1.05%)</title><rect x="1051.6" y="197" width="12.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1054.64" y="207.5" ></text>
</g>
<g >
<title>??   (29 samples, 0.65%)</title><rect x="1106.3" y="117" width="7.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1109.30" y="127.5" ></text>
</g>
<g >
<title>??   (159 samples, 3.56%)</title><rect x="365.1" y="197" width="42.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="368.14" y="207.5" >??  </text>
</g>
<g >
<title>Call::~Call   (932 samples, 20.85%)</title><rect x="238.1" y="405" width="246.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="241.13" y="415.5" >Call::~Call  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (436 samples, 9.76%)</title><rect x="754.6" y="325" width="115.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="757.60" y="335.5" >std::_Rb_tree&lt;..</text>
</g>
<g >
<title>free   (1 samples, 0.02%)</title><rect x="1175.5" y="101" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1178.48" y="111.5" ></text>
</g>
<g >
<title>operator   (286 samples, 6.40%)</title><rect x="408.7" y="245" width="75.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="411.70" y="255.5" >operator  </text>
</g>
<g >
<title>free   (34 samples, 0.76%)</title><rect x="643.4" y="229" width="9.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="646.43" y="239.5" ></text>
</g>
<g >
<title>std::fmod&lt;double   (74 samples, 1.66%)</title><rect x="685.7" y="357" width="19.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="688.68" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (50 samples, 1.12%)</title><rect x="709.4" y="341" width="13.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="712.45" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (7 samples, 0.16%)</title><rect x="1100.2" y="213" width="1.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1103.23" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;Call&gt;::allocate   (8 samples, 0.18%)</title><rect x="1047.9" y="293" width="2.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1050.95" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="938.4" y="101" width="0.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="941.37" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Call&gt;   (54 samples, 1.21%)</title><rect x="1171.5" y="357" width="14.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1174.52" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (759 samples, 16.98%)</title><rect x="28.2" y="309" width="200.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="31.22" y="319.5" >std::_Rb_tree&lt;std::pair&lt;in..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (433 samples, 9.69%)</title><rect x="927.0" y="229" width="114.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="930.01" y="239.5" >std::_Rb_tree&lt;..</text>
</g>
<g >
<title>std::__new_allocator&lt;Call&gt;::deallocate   (5 samples, 0.11%)</title><rect x="1170.2" y="309" width="1.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1173.20" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (7 samples, 0.16%)</title><rect x="867.9" y="309" width="1.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="870.87" y="319.5" ></text>
</g>
<g >
<title>operator   (7 samples, 0.16%)</title><rect x="1100.2" y="133" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1103.23" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header   (1 samples, 0.02%)</title><rect x="237.9" y="341" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="240.87" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (251 samples, 5.62%)</title><rect x="340.8" y="293" width="66.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="343.84" y="303.5" >std::al..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (35 samples, 0.78%)</title><rect x="774.4" y="213" width="9.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="777.40" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (33 samples, 0.74%)</title><rect x="1064.8" y="389" width="8.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1067.84" y="399.5" ></text>
</g>
<g >
<title>malloc   (8 samples, 0.18%)</title><rect x="1047.9" y="261" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1050.95" y="271.5" ></text>
</g>
<g >
<title>free   (44 samples, 0.98%)</title><rect x="1102.3" y="133" width="11.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1105.34" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (866 samples, 19.38%)</title><rect x="255.6" y="341" width="228.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="258.56" y="351.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>??   (13 samples, 0.29%)</title><rect x="1070.1" y="245" width="3.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1073.13" y="255.5" ></text>
</g>
<g >
<title>??   (5 samples, 0.11%)</title><rect x="1184.5" y="133" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1187.46" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (468 samples, 10.47%)</title><rect x="922.5" y="261" width="123.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="925.53" y="271.5" >std::_Rb_tree&lt;s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="721.9" y="325" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="724.86" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (9 samples, 0.20%)</title><rect x="308.1" y="277" width="2.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="311.10" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (39 samples, 0.87%)</title><rect x="939.2" y="133" width="10.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="942.16" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement   (7 samples, 0.16%)</title><rect x="880.3" y="325" width="1.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="883.28" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="652.7" y="293" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="655.68" y="303.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (118 samples, 2.64%)</title><rect x="882.4" y="325" width="31.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="885.39" y="335.5" >st..</text>
</g>
<g >
<title>operator   (34 samples, 0.76%)</title><rect x="643.4" y="245" width="9.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="646.43" y="255.5" ></text>
</g>
<g >
<title>operator   (6 samples, 0.13%)</title><rect x="531.7" y="197" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="534.75" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum   (9 samples, 0.20%)</title><rect x="1041.3" y="229" width="2.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1044.34" y="239.5" ></text>
</g>
<g >
<title>malloc   (219 samples, 4.90%)</title><rect x="983.5" y="101" width="57.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="986.52" y="111.5" >malloc  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (407 samples, 9.11%)</title><rect x="933.9" y="213" width="107.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="936.88" y="223.5" >std::_Rb_tree..</text>
</g>
<g >
<title>??   (62 samples, 1.39%)</title><rect x="1153.8" y="149" width="16.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1156.83" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (852 samples, 19.06%)</title><rect x="13.2" y="373" width="224.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="16.17" y="383.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (103 samples, 2.30%)</title><rect x="1114.0" y="197" width="27.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1116.96" y="207.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.07%)</title><rect x="938.4" y="117" width="0.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="941.37" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header   (5 samples, 0.11%)</title><rect x="1046.1" y="261" width="1.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1049.10" y="271.5" ></text>
</g>
<g >
<title>operator   (145 samples, 3.24%)</title><rect x="548.1" y="229" width="38.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="551.12" y="239.5" >ope..</text>
</g>
<g >
<title>free   (1 samples, 0.02%)</title><rect x="308.1" y="213" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="311.10" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header   (1 samples, 0.02%)</title><rect x="1064.3" y="245" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1067.32" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (7 samples, 0.16%)</title><rect x="1100.2" y="197" width="1.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1103.23" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (158 samples, 3.54%)</title><rect x="1099.4" y="245" width="41.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1102.43" y="255.5" >std..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (115 samples, 2.57%)</title><rect x="310.5" y="245" width="30.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="313.48" y="255.5" >st..</text>
</g>
<g >
<title>operator   (69 samples, 1.54%)</title><rect x="634.2" y="261" width="18.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="637.19" y="271.5" ></text>
</g>
<g >
<title>operator   (3 samples, 0.07%)</title><rect x="773.6" y="149" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="776.61" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (844 samples, 18.89%)</title><rect x="15.0" y="341" width="222.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="18.02" y="351.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (292 samples, 6.53%)</title><rect x="407.1" y="293" width="77.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="410.12" y="303.5" >std::all..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.40%)</title><rect x="1054.0" y="101" width="4.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1057.02" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (51 samples, 1.14%)</title><rect x="1050.6" y="213" width="13.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1053.59" y="223.5" ></text>
</g>
<g >
<title>free   (3 samples, 0.07%)</title><rect x="1170.7" y="261" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1173.72" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (103 samples, 2.30%)</title><rect x="949.5" y="149" width="27.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="952.46" y="159.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (297 samples, 6.65%)</title><rect x="769.4" y="293" width="78.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="772.38" y="303.5" >std::_Rb_..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (390 samples, 8.73%)</title><rect x="938.4" y="181" width="102.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="941.37" y="191.5" >std::_Rb_tre..</text>
</g>
<g >
<title>std::deque&lt;Call   (1 samples, 0.02%)</title><rect x="1064.6" y="341" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1067.58" y="351.5" ></text>
</g>
<g >
<title>malloc   (9 samples, 0.20%)</title><rect x="63.3" y="133" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="66.34" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.04%)</title><rect x="1052.2" y="69" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1055.17" y="79.5" ></text>
</g>
<g >
<title>operator   (248 samples, 5.55%)</title><rect x="341.6" y="229" width="65.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="344.64" y="239.5" >operato..</text>
</g>
<g >
<title>operator   (143 samples, 3.20%)</title><rect x="548.6" y="213" width="37.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="551.64" y="223.5" >ope..</text>
</g>
<g >
<title>operator   (3 samples, 0.07%)</title><rect x="938.4" y="69" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="941.37" y="79.5" ></text>
</g>
<g >
<title>operator   (110 samples, 2.46%)</title><rect x="1141.2" y="197" width="29.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1144.15" y="207.5" >op..</text>
</g>
<g >
<title>std::abs   (7 samples, 0.16%)</title><rect x="683.8" y="357" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="686.83" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (477 samples, 10.67%)</title><rect x="921.5" y="293" width="125.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="924.47" y="303.5" >std::_Rb_tree&lt;s..</text>
</g>
<g >
<title>??   (21 samples, 0.47%)</title><rect x="646.9" y="213" width="5.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="649.87" y="223.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;Call&gt;   (366 samples, 8.19%)</title><rect x="1073.6" y="357" width="96.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1076.56" y="367.5" >std::destro..</text>
</g>
<g >
<title>operator   (241 samples, 5.39%)</title><rect x="977.7" y="117" width="63.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="980.71" y="127.5" >operat..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (103 samples, 2.30%)</title><rect x="949.5" y="133" width="27.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="952.46" y="143.5" >s..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (251 samples, 5.62%)</title><rect x="340.8" y="277" width="66.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="343.84" y="287.5" >std::al..</text>
</g>
<g >
<title>free   (99 samples, 2.22%)</title><rect x="1115.0" y="149" width="26.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1118.01" y="159.5" >f..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (54 samples, 1.21%)</title><rect x="1171.5" y="277" width="14.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1174.52" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (345 samples, 7.72%)</title><rect x="1079.1" y="277" width="91.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1082.10" y="287.5" >std::_Rb_t..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (929 samples, 20.79%)</title><rect x="238.9" y="357" width="245.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="241.92" y="367.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>malloc   (5 samples, 0.11%)</title><rect x="1052.7" y="53" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1055.70" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (42 samples, 0.94%)</title><rect x="938.4" y="149" width="11.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="941.37" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (28 samples, 0.63%)</title><rect x="1066.2" y="325" width="7.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1069.16" y="335.5" ></text>
</g>
<g >
<title>??   (1 samples, 0.02%)</title><rect x="847.5" y="165" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="850.54" y="175.5" ></text>
</g>
<g >
<title>free   (153 samples, 3.42%)</title><rect x="587.7" y="213" width="40.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="590.72" y="223.5" >fre..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.40%)</title><rect x="1054.0" y="133" width="4.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1057.02" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (244 samples, 5.46%)</title><rect x="976.9" y="133" width="64.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="979.92" y="143.5" >std::__..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (742 samples, 16.60%)</title><rect x="288.3" y="325" width="195.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="291.30" y="335.5" >std::_Rb_tree&lt;std::pair&lt;i..</text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (20 samples, 0.45%)</title><rect x="913.5" y="341" width="5.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="916.55" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (4 samples, 0.09%)</title><rect x="652.7" y="325" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="655.68" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (4 samples, 0.09%)</title><rect x="1175.7" y="165" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1178.74" y="175.5" ></text>
</g>
<g >
<title>operator   (103 samples, 2.30%)</title><rect x="1114.0" y="181" width="27.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1116.96" y="191.5" >o..</text>
</g>
<g >
<title>??   (16 samples, 0.36%)</title><rect x="972.4" y="69" width="4.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="975.43" y="79.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (743 samples, 16.63%)</title><rect x="722.6" y="389" width="196.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="725.65" y="399.5" >std::set&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.13%)</title><rect x="531.7" y="213" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="534.75" y="223.5" ></text>
</g>
<g >
<title>operator   (233 samples, 5.21%)</title><rect x="92.1" y="181" width="61.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="95.12" y="191.5" >operat..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (45 samples, 1.01%)</title><rect x="1102.1" y="197" width="11.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1105.07" y="207.5" ></text>
</g>
<g >
<title>all (4,469 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>free   (3 samples, 0.07%)</title><rect x="721.1" y="229" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="724.06" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (479 samples, 10.72%)</title><rect x="501.6" y="373" width="126.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="504.64" y="383.5" >std::set&lt;std::p..</text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (16 samples, 0.36%)</title><rect x="233.6" y="309" width="4.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="236.64" y="319.5" ></text>
</g>
<g >
<title>Call::Call   (477 samples, 10.67%)</title><rect x="921.5" y="325" width="125.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="924.47" y="335.5" >Call::Call  </text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (20 samples, 0.45%)</title><rect x="1058.8" y="133" width="5.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1061.77" y="143.5" ></text>
</g>
<g >
<title>operator   (18 samples, 0.40%)</title><rect x="1054.0" y="85" width="4.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1057.02" y="95.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (28 samples, 0.63%)</title><rect x="1066.2" y="309" width="7.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1069.16" y="319.5" ></text>
</g>
<g >
<title>??   (81 samples, 1.81%)</title><rect x="565.0" y="181" width="21.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="568.01" y="191.5" >?..</text>
</g>
<g >
<title>free   (19 samples, 0.43%)</title><rect x="1177.3" y="133" width="5.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1180.33" y="143.5" ></text>
</g>
<g >
<title>operator   (97 samples, 2.17%)</title><rect x="65.7" y="165" width="25.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="68.71" y="175.5" >o..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (55 samples, 1.23%)</title><rect x="1050.1" y="293" width="14.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1053.06" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (39 samples, 0.87%)</title><rect x="939.2" y="117" width="10.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="942.16" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (54 samples, 1.21%)</title><rect x="1050.1" y="229" width="14.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1053.06" y="239.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.02%)</title><rect x="1175.5" y="133" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1178.48" y="143.5" ></text>
</g>
<g >
<title>??   (137 samples, 3.07%)</title><rect x="1005.2" y="85" width="36.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1008.17" y="95.5" >??  </text>
</g>
<g >
<title>operator   (157 samples, 3.51%)</title><rect x="586.7" y="229" width="41.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="589.67" y="239.5" >ope..</text>
</g>
</g>
</svg>
