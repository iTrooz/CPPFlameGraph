<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (969,069 samples, 0.01%)</title><rect x="1008.6" y="261" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1011.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,511,254 samples, 0.03%)</title><rect x="1122.2" y="181" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1125.22" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,357,979 samples, 0.02%)</title><rect x="947.3" y="357" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="950.25" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,916,101 samples, 0.05%)</title><rect x="1162.3" y="373" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1165.26" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (4,761,604 samples, 0.06%)</title><rect x="92.1" y="517" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="95.15" y="527.5" ></text>
</g>
<g >
<title>operator new (10,236,052 samples, 0.12%)</title><rect x="1147.3" y="229" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1150.26" y="239.5" ></text>
</g>
<g >
<title>cfree (1,859,308 samples, 0.02%)</title><rect x="1147.4" y="213" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1150.36" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (353,922,623 samples, 4.24%)</title><rect x="325.9" y="533" width="50.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="328.91" y="543.5" >std::..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (3,109,658 samples, 0.04%)</title><rect x="1086.8" y="293" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1089.77" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (16,794,971 samples, 0.20%)</title><rect x="1149.3" y="261" width="2.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1152.30" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,182,719 samples, 0.01%)</title><rect x="973.7" y="245" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="976.70" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,500,855 samples, 0.02%)</title><rect x="1101.5" y="245" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1104.49" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (6,890,845 samples, 0.08%)</title><rect x="1032.7" y="165" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1035.74" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (26,070,159 samples, 0.31%)</title><rect x="1132.7" y="373" width="3.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1135.65" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (842,284 samples, 0.01%)</title><rect x="1092.4" y="357" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1095.40" y="367.5" ></text>
</g>
<g >
<title>cfree (9,964,540 samples, 0.12%)</title><rect x="1101.7" y="261" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1104.70" y="271.5" ></text>
</g>
<g >
<title>operator delete (1,096,094 samples, 0.01%)</title><rect x="1021.8" y="213" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1024.81" y="223.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,116,973 samples, 0.01%)</title><rect x="953.3" y="325" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="956.33" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (73,344,620 samples, 0.88%)</title><rect x="175.9" y="549" width="10.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="178.94" y="559.5" ></text>
</g>
<g >
<title>operator new (1,781,728 samples, 0.02%)</title><rect x="1055.7" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1058.73" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (7,401,374 samples, 0.09%)</title><rect x="840.4" y="501" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="843.43" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (829,899 samples, 0.01%)</title><rect x="189.9" y="533" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="192.85" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,456,879 samples, 0.04%)</title><rect x="1085.5" y="293" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1088.51" y="303.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (2,590,594 samples, 0.03%)</title><rect x="876.6" y="517" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="879.62" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,480,801 samples, 0.02%)</title><rect x="1109.5" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1112.46" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,169,811 samples, 0.03%)</title><rect x="952.5" y="309" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="955.47" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,595,170 samples, 0.02%)</title><rect x="77.8" y="437" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="80.81" y="447.5" ></text>
</g>
<g >
<title>operator new (1,807,388 samples, 0.02%)</title><rect x="1135.5" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.47" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,771,694 samples, 0.02%)</title><rect x="1162.3" y="341" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1165.30" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,122,556 samples, 0.04%)</title><rect x="1148.3" y="213" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1151.27" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,496,005 samples, 0.02%)</title><rect x="1151.4" y="181" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1154.38" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,607,488 samples, 0.02%)</title><rect x="994.8" y="165" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="997.82" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,607,014 samples, 0.03%)</title><rect x="1131.2" y="357" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1134.21" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (829,895 samples, 0.01%)</title><rect x="1189.7" y="549" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1192.65" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (91,140,864 samples, 1.09%)</title><rect x="985.9" y="325" width="12.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="988.86" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,229,988 samples, 0.01%)</title><rect x="1101.5" y="181" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1104.51" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,272,580 samples, 0.05%)</title><rect x="1032.7" y="101" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1035.74" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (2,696,221 samples, 0.03%)</title><rect x="1088.0" y="325" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1090.96" y="335.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (821,145 samples, 0.01%)</title><rect x="1129.3" y="181" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1132.35" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (4,537,715 samples, 0.05%)</title><rect x="979.2" y="357" width="0.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="982.19" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,619,422 samples, 0.03%)</title><rect x="182.5" y="501" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="185.52" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,049,825 samples, 0.12%)</title><rect x="1032.3" y="181" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1035.30" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,106,770 samples, 0.04%)</title><rect x="1115.7" y="229" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1118.70" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (16,277,867 samples, 0.19%)</title><rect x="394.0" y="501" width="2.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="396.98" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,275,015 samples, 0.05%)</title><rect x="181.1" y="453" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="184.14" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,667,307 samples, 0.02%)</title><rect x="1103.5" y="181" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1106.46" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,721,742 samples, 0.12%)</title><rect x="77.2" y="501" width="1.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="80.20" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,771,694 samples, 0.02%)</title><rect x="1162.3" y="309" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1165.30" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,100,868 samples, 0.01%)</title><rect x="932.4" y="261" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="935.44" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (819,405 samples, 0.01%)</title><rect x="947.3" y="277" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="950.31" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (33,242,604 samples, 0.40%)</title><rect x="1077.8" y="277" width="4.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1080.77" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,364,215 samples, 0.02%)</title><rect x="1154.8" y="341" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1157.80" y="351.5" ></text>
</g>
<g >
<title>roundf32x (2,861,679 samples, 0.03%)</title><rect x="1181.1" y="565" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.11" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,908,592 samples, 0.07%)</title><rect x="589.7" y="549" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="592.70" y="559.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (39,187,828 samples, 0.47%)</title><rect x="70.2" y="469" width="5.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="73.23" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (46,076,547 samples, 0.55%)</title><rect x="1123.0" y="325" width="6.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1125.96" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (938,416 samples, 0.01%)</title><rect x="309.5" y="469" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="312.54" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (11,048,199 samples, 0.13%)</title><rect x="1139.7" y="389" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1142.67" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (2,354,740 samples, 0.03%)</title><rect x="393.1" y="517" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="396.11" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,435,028 samples, 0.09%)</title><rect x="584.7" y="357" width="1.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="587.72" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,590,792 samples, 0.03%)</title><rect x="1136.9" y="325" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1139.86" y="335.5" ></text>
</g>
<g >
<title>update_process_times (1,091,035 samples, 0.01%)</title><rect x="1101.5" y="149" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1104.53" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;::pair&lt;int, double&gt; (1,763,106 samples, 0.02%)</title><rect x="733.6" y="533" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="736.59" y="543.5" ></text>
</g>
<g >
<title>operator new (83,173,211 samples, 1.00%)</title><rect x="1022.0" y="213" width="11.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1024.97" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (4,789,202 samples, 0.06%)</title><rect x="1160.8" y="421" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1163.76" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (959,311 samples, 0.01%)</title><rect x="1068.5" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1071.46" y="175.5" ></text>
</g>
<g >
<title>get_inbetween_points (126,128,117 samples, 1.51%)</title><rect x="936.6" y="405" width="17.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="939.58" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (153,464,210 samples, 1.84%)</title><rect x="1016.3" y="325" width="21.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1019.25" y="335.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,204,802 samples, 0.01%)</title><rect x="1135.7" y="229" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1138.72" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,641,191 samples, 0.02%)</title><rect x="582.8" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="585.80" y="415.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,618,265 samples, 0.03%)</title><rect x="1033.3" y="133" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1036.35" y="143.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,553,280 samples, 0.08%)</title><rect x="1153.6" y="325" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1156.65" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,774,821 samples, 0.02%)</title><rect x="590.3" y="469" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="593.26" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,602,560 samples, 0.03%)</title><rect x="851.0" y="501" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="854.00" y="511.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,222,602 samples, 0.01%)</title><rect x="1037.8" y="261" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1040.76" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,520,203 samples, 0.02%)</title><rect x="1163.3" y="341" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1166.30" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,749,619 samples, 0.02%)</title><rect x="737.0" y="437" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="740.01" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,619,173 samples, 0.06%)</title><rect x="179.4" y="485" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="182.35" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (27,919,511 samples, 0.33%)</title><rect x="1016.8" y="213" width="3.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1019.78" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (353,922,623 samples, 4.24%)</title><rect x="325.9" y="517" width="50.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="328.91" y="527.5" >std::..</text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (11,179,001 samples, 0.13%)</title><rect x="381.7" y="485" width="1.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="384.74" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,779,244 samples, 0.02%)</title><rect x="586.7" y="469" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="589.71" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (709,916 samples, 0.01%)</title><rect x="1142.8" y="373" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1145.78" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (811,217 samples, 0.01%)</title><rect x="1087.8" y="325" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1090.85" y="335.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (5,229,104 samples, 0.06%)</title><rect x="887.8" y="533" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="890.81" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (30,514,266 samples, 0.37%)</title><rect x="220.1" y="469" width="4.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="223.06" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (25,711,616 samples, 0.31%)</title><rect x="1040.0" y="197" width="3.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1043.03" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (7,469,214 samples, 0.09%)</title><rect x="704.2" y="469" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="707.19" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (22,085,725 samples, 0.26%)</title><rect x="1034.6" y="181" width="3.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1037.60" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,204,802 samples, 0.01%)</title><rect x="1135.7" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1138.72" y="319.5" ></text>
</g>
<g >
<title>operator new (253,711,763 samples, 3.04%)</title><rect x="466.6" y="549" width="35.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="469.60" y="559.5" >ope..</text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,433,697 samples, 0.02%)</title><rect x="1141.8" y="373" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1144.81" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (842,284 samples, 0.01%)</title><rect x="1092.4" y="309" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1095.40" y="319.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (33,988,323 samples, 0.41%)</title><rect x="371.1" y="469" width="4.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="374.11" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (959,311 samples, 0.01%)</title><rect x="1068.5" y="101" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1071.46" y="111.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,171,919 samples, 0.04%)</title><rect x="1167.2" y="485" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1170.18" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (915,481 samples, 0.01%)</title><rect x="1013.9" y="293" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1016.85" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (73,422,717 samples, 0.88%)</title><rect x="193.9" y="549" width="10.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="196.85" y="559.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,171,919 samples, 0.04%)</title><rect x="1167.2" y="469" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1170.18" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (13,592,516 samples, 0.16%)</title><rect x="1060.1" y="133" width="1.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1063.05" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,612,771 samples, 0.02%)</title><rect x="703.0" y="437" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="706.03" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (5,172,792 samples, 0.06%)</title><rect x="408.9" y="485" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="411.88" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,063,304 samples, 0.04%)</title><rect x="1122.2" y="213" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1125.22" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,973,484 samples, 0.05%)</title><rect x="1068.7" y="229" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1071.71" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (150,460,421 samples, 1.80%)</title><rect x="1016.5" y="277" width="21.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1019.50" y="287.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,168,651 samples, 0.11%)</title><rect x="1121.4" y="261" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1124.36" y="271.5" ></text>
</g>
<g >
<title>choose_next_point (1,733,817,816 samples, 20.76%)</title><rect x="916.5" y="437" width="244.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="919.52" y="447.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,335,296 samples, 0.06%)</title><rect x="1129.7" y="293" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1132.71" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,920,117 samples, 0.02%)</title><rect x="1144.3" y="229" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1147.26" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,934,077 samples, 0.13%)</title><rect x="993.7" y="245" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="996.67" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,782,095 samples, 0.02%)</title><rect x="1126.6" y="213" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1129.59" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,619,475 samples, 0.02%)</title><rect x="957.1" y="373" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="960.08" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,409,814 samples, 0.02%)</title><rect x="1030.6" y="197" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1033.59" y="207.5" ></text>
</g>
<g >
<title>choose_next_point (1,754,389,201 samples, 21.00%)</title><rect x="916.4" y="469" width="247.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="919.45" y="479.5" >choose_next_point</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (4,761,604 samples, 0.06%)</title><rect x="92.1" y="533" width="0.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="95.15" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (10,130,331 samples, 0.12%)</title><rect x="1153.1" y="341" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1156.14" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,346,831 samples, 0.02%)</title><rect x="1160.9" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.91" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,755,412,308 samples, 21.01%)</title><rect x="916.4" y="533" width="248.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="919.45" y="543.5" >[libc.so.6]</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (814,127 samples, 0.01%)</title><rect x="936.4" y="341" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="939.44" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (1,582,850 samples, 0.02%)</title><rect x="741.8" y="485" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="744.81" y="495.5" ></text>
</g>
<g >
<title>malloc (3,715,107 samples, 0.04%)</title><rect x="1021.3" y="213" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1024.29" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,662,962 samples, 0.02%)</title><rect x="1129.1" y="149" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1132.11" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,771,694 samples, 0.02%)</title><rect x="1162.3" y="261" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1165.30" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,387,336 samples, 0.02%)</title><rect x="1162.5" y="309" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1165.55" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,973,484 samples, 0.05%)</title><rect x="1068.7" y="197" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1071.71" y="207.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,443,066 samples, 0.07%)</title><rect x="998.9" y="341" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1001.85" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (259,144,090 samples, 3.10%)</title><rect x="705.4" y="549" width="36.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="708.42" y="559.5" >get..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (42,699,418 samples, 0.51%)</title><rect x="1062.6" y="229" width="6.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1065.56" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (18,694,226 samples, 0.22%)</title><rect x="996.0" y="181" width="2.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="999.02" y="191.5" ></text>
</g>
<g >
<title>cfree (2,178,943 samples, 0.03%)</title><rect x="1149.9" y="213" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1152.94" y="223.5" ></text>
</g>
<g >
<title>cfree (1,909,149 samples, 0.02%)</title><rect x="929.4" y="261" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="932.41" y="271.5" ></text>
</g>
<g >
<title>cfree (69,225,701 samples, 0.83%)</title><rect x="1093.9" y="277" width="9.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1096.91" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (23,586,466 samples, 0.28%)</title><rect x="687.2" y="517" width="3.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="690.23" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (2,012,213 samples, 0.02%)</title><rect x="867.7" y="533" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="870.68" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,737,109 samples, 0.03%)</title><rect x="1130.8" y="341" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1133.82" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (42,083,246 samples, 0.50%)</title><rect x="733.9" y="517" width="6.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="736.93" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (4,761,604 samples, 0.06%)</title><rect x="92.1" y="501" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="95.15" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,093,481 samples, 0.01%)</title><rect x="961.8" y="293" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="964.84" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (165,205,277 samples, 1.98%)</title><rect x="835.5" y="549" width="23.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="838.49" y="559.5" >s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,352,551 samples, 0.02%)</title><rect x="961.8" y="341" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="964.84" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (16,636,163 samples, 0.20%)</title><rect x="973.9" y="341" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="976.87" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,848,513 samples, 0.02%)</title><rect x="1054.9" y="149" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1057.89" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (5,294,303 samples, 0.06%)</title><rect x="1138.5" y="389" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1141.48" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,782,095 samples, 0.02%)</title><rect x="1126.6" y="133" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1129.59" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,967,785 samples, 0.23%)</title><rect x="996.0" y="245" width="2.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="999.00" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (22,085,725 samples, 0.26%)</title><rect x="1034.6" y="149" width="3.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1037.60" y="159.5" ></text>
</g>
<g >
<title>malloc (956,965 samples, 0.01%)</title><rect x="1143.9" y="261" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1146.87" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (10,722,218 samples, 0.13%)</title><rect x="1158.1" y="341" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1161.09" y="351.5" ></text>
</g>
<g >
<title>std::abs (1,218,448 samples, 0.01%)</title><rect x="430.0" y="517" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="432.97" y="527.5" ></text>
</g>
<g >
<title>cfree (12,374,882 samples, 0.15%)</title><rect x="1023.0" y="197" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1025.97" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (91,140,864 samples, 1.09%)</title><rect x="985.9" y="309" width="12.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="988.86" y="319.5" ></text>
</g>
<g >
<title>operator new (1,166,540 samples, 0.01%)</title><rect x="949.9" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="952.95" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,808,689 samples, 0.02%)</title><rect x="1148.8" y="213" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1151.82" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (20,495,995 samples, 0.25%)</title><rect x="1146.2" y="261" width="2.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1149.18" y="271.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (972,928 samples, 0.01%)</title><rect x="84.9" y="421" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="87.85" y="431.5" ></text>
</g>
<g >
<title>malloc (1,082,008 samples, 0.01%)</title><rect x="1138.7" y="277" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1141.71" y="287.5" ></text>
</g>
<g >
<title>operator delete (3,170,719 samples, 0.04%)</title><rect x="931.8" y="261" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="934.83" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (54,771,629 samples, 0.66%)</title><rect x="383.3" y="533" width="7.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="386.32" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (6,230,984 samples, 0.07%)</title><rect x="692.7" y="469" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="695.73" y="479.5" ></text>
</g>
<g >
<title>malloc (2,678,389 samples, 0.03%)</title><rect x="1039.0" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1042.03" y="319.5" ></text>
</g>
<g >
<title>operator new (25,490,285 samples, 0.31%)</title><rect x="1064.6" y="181" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1067.64" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,667,307 samples, 0.02%)</title><rect x="1103.5" y="149" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1106.46" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,587,663 samples, 0.08%)</title><rect x="1067.3" y="165" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1070.31" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (13,805,526 samples, 0.17%)</title><rect x="510.6" y="501" width="2.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="513.60" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (11,652,565 samples, 0.14%)</title><rect x="1142.9" y="341" width="1.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1145.88" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,501,868 samples, 0.02%)</title><rect x="309.5" y="517" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="312.48" y="527.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,776,983 samples, 0.02%)</title><rect x="1004.4" y="277" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1007.38" y="287.5" ></text>
</g>
<g >
<title>malloc (816,071 samples, 0.01%)</title><rect x="936.0" y="277" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="939.00" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (17,444,083 samples, 0.21%)</title><rect x="430.2" y="517" width="2.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="433.22" y="527.5" ></text>
</g>
<g >
<title>is_close_int (6,506,547 samples, 0.08%)</title><rect x="91.2" y="533" width="0.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="94.17" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (46,076,547 samples, 0.55%)</title><rect x="1123.0" y="261" width="6.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1125.96" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (13,404,608 samples, 0.16%)</title><rect x="945.6" y="373" width="1.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="948.55" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (11,823,889 samples, 0.14%)</title><rect x="389.4" y="501" width="1.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="392.38" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (11,652,565 samples, 0.14%)</title><rect x="1142.9" y="293" width="1.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1145.88" y="303.5" ></text>
</g>
<g >
<title>cfree (1,127,596 samples, 0.01%)</title><rect x="1101.9" y="245" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1104.85" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (2,118,256 samples, 0.03%)</title><rect x="92.8" y="485" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="95.82" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,301,800 samples, 0.03%)</title><rect x="1028.9" y="165" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1031.85" y="175.5" ></text>
</g>
<g >
<title>cfree (1,920,548 samples, 0.02%)</title><rect x="1116.4" y="229" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1119.39" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,989,805 samples, 0.08%)</title><rect x="1005.9" y="325" width="1.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1008.87" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (4,648,103 samples, 0.06%)</title><rect x="1160.8" y="389" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1163.78" y="399.5" ></text>
</g>
<g >
<title>malloc (2,944,132 samples, 0.04%)</title><rect x="931.4" y="261" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="934.42" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (39,200,601 samples, 0.47%)</title><rect x="948.3" y="389" width="5.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="951.26" y="399.5" ></text>
</g>
<g >
<title>choose_next_point (24,728,935 samples, 0.30%)</title><rect x="922.2" y="405" width="3.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="925.18" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,992,578 samples, 0.02%)</title><rect x="203.9" y="533" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="206.94" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (7,060,653 samples, 0.08%)</title><rect x="1129.5" y="325" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1132.46" y="335.5" ></text>
</g>
<g >
<title>cfree (1,366,301 samples, 0.02%)</title><rect x="982.4" y="357" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="985.40" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,719,672 samples, 0.04%)</title><rect x="189.3" y="533" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="192.33" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (43,545,784 samples, 0.52%)</title><rect x="186.3" y="549" width="6.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="189.30" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (91,531,362 samples, 1.10%)</title><rect x="985.9" y="341" width="12.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="988.86" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,634,313 samples, 0.25%)</title><rect x="1146.2" y="341" width="2.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1149.17" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (810,497 samples, 0.01%)</title><rect x="922.7" y="389" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="925.68" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (104,726,845 samples, 1.25%)</title><rect x="1093.4" y="341" width="14.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1096.37" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (157,501,143 samples, 1.89%)</title><rect x="1039.8" y="293" width="22.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1042.80" y="303.5" >s..</text>
</g>
<g >
<title>choose_next_point (822,199 samples, 0.01%)</title><rect x="1144.9" y="357" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1147.87" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (10,280,943 samples, 0.12%)</title><rect x="184.1" y="533" width="1.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="187.13" y="543.5" ></text>
</g>
<g >
<title>decltype  (2,442,209 samples, 0.03%)</title><rect x="414.8" y="469" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="417.82" y="479.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,157,825 samples, 0.07%)</title><rect x="585.8" y="485" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="588.84" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (10,708,243 samples, 0.13%)</title><rect x="844.9" y="501" width="1.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="847.86" y="511.5" ></text>
</g>
<g >
<title>cfree (5,074,596 samples, 0.06%)</title><rect x="929.2" y="277" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="932.20" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (11,912,645 samples, 0.14%)</title><rect x="76.9" y="517" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="79.89" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (39,477,172 samples, 0.47%)</title><rect x="909.1" y="469" width="5.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="912.10" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,948,822 samples, 0.04%)</title><rect x="703.7" y="469" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="706.68" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,083,865 samples, 0.01%)</title><rect x="1162.0" y="341" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1164.97" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,090,813 samples, 0.01%)</title><rect x="1057.8" y="165" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1060.82" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,203,547 samples, 0.03%)</title><rect x="1070.3" y="405" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1073.30" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (2,820,134 samples, 0.03%)</title><rect x="549.7" y="533" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="552.69" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,106,770 samples, 0.04%)</title><rect x="1115.7" y="213" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1118.70" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (41,887,694 samples, 0.50%)</title><rect x="220.1" y="517" width="5.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="223.06" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (813,534 samples, 0.01%)</title><rect x="1054.8" y="69" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1057.76" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,435,028 samples, 0.09%)</title><rect x="584.7" y="389" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="587.72" y="399.5" ></text>
</g>
<g >
<title>malloc (1,228,089 samples, 0.01%)</title><rect x="1159.2" y="277" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.17" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,590,792 samples, 0.03%)</title><rect x="1136.9" y="309" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1139.86" y="319.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (6,418,727 samples, 0.08%)</title><rect x="1136.3" y="373" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1139.33" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,172,100 samples, 0.15%)</title><rect x="986.3" y="261" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="989.31" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (8,319,552 samples, 0.10%)</title><rect x="584.7" y="421" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="587.67" y="431.5" ></text>
</g>
<g >
<title>operator new (4,378,317 samples, 0.05%)</title><rect x="1006.0" y="213" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1008.98" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (46,928,748 samples, 0.56%)</title><rect x="1145.6" y="357" width="6.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1148.62" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,403,299 samples, 0.06%)</title><rect x="1158.3" y="261" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.34" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (69,563,138 samples, 0.83%)</title><rect x="550.1" y="533" width="9.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="553.09" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (26,364,543 samples, 0.32%)</title><rect x="932.7" y="325" width="3.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="935.66" y="335.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (1,713,232 samples, 0.02%)</title><rect x="944.0" y="389" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="946.98" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (23,092,663 samples, 0.28%)</title><rect x="587.3" y="565" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="590.27" y="575.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (16,913,823 samples, 0.20%)</title><rect x="430.3" y="501" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="433.29" y="511.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,444,168 samples, 0.15%)</title><rect x="914.7" y="485" width="1.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="917.68" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (13,805,526 samples, 0.17%)</title><rect x="510.6" y="485" width="2.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="513.60" y="495.5" ></text>
</g>
<g >
<title>operator delete (1,390,233 samples, 0.02%)</title><rect x="947.7" y="389" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="950.69" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (20,169,947 samples, 0.24%)</title><rect x="412.0" y="453" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="414.97" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (22,610,026 samples, 0.27%)</title><rect x="1133.1" y="325" width="3.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1136.14" y="335.5" ></text>
</g>
<g >
<title>decltype  (1,101,290 samples, 0.01%)</title><rect x="381.6" y="421" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="384.58" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,648,072 samples, 0.02%)</title><rect x="1141.2" y="389" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1144.23" y="399.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,086,334 samples, 0.01%)</title><rect x="1108.0" y="197" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1111.01" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,132,549 samples, 0.06%)</title><rect x="391.1" y="533" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="394.05" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,095,650 samples, 0.05%)</title><rect x="1151.7" y="325" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1154.67" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,093,481 samples, 0.01%)</title><rect x="961.8" y="277" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="964.84" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,112,545 samples, 0.01%)</title><rect x="1003.4" y="277" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1006.36" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (76,578,437 samples, 0.92%)</title><rect x="963.1" y="325" width="10.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="966.05" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,978,477 samples, 0.10%)</title><rect x="75.8" y="485" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="78.77" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,589,498 samples, 0.03%)</title><rect x="1151.2" y="197" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1154.23" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,006,915 samples, 0.02%)</title><rect x="1005.0" y="309" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1007.97" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,498,002 samples, 0.05%)</title><rect x="1068.6" y="293" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1071.63" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (977,943 samples, 0.01%)</title><rect x="1101.3" y="149" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1104.29" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,920,117 samples, 0.02%)</title><rect x="1144.3" y="213" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1147.26" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (775,088 samples, 0.01%)</title><rect x="546.9" y="517" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="549.92" y="527.5" ></text>
</g>
<g >
<title>roundf32x (15,651,548 samples, 0.19%)</title><rect x="833.3" y="549" width="2.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="836.28" y="559.5" ></text>
</g>
<g >
<title>cfree (4,581,585 samples, 0.05%)</title><rect x="1012.0" y="325" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1015.00" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,123,842 samples, 0.07%)</title><rect x="1003.5" y="277" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1006.52" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (13,426,596 samples, 0.16%)</title><rect x="1002.7" y="309" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1005.73" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,080,602 samples, 0.01%)</title><rect x="1163.1" y="341" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1166.15" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (20,169,947 samples, 0.24%)</title><rect x="412.0" y="485" width="2.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="414.97" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,004,527 samples, 0.11%)</title><rect x="671.5" y="485" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="674.55" y="495.5" ></text>
</g>
<g >
<title>operator new (2,220,139 samples, 0.03%)</title><rect x="992.7" y="245" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="995.73" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,128,678 samples, 0.01%)</title><rect x="1159.4" y="277" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1162.44" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,246,026 samples, 0.01%)</title><rect x="431.3" y="485" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="434.28" y="495.5" ></text>
</g>
<g >
<title>get_inbetween_points (4,513,427 samples, 0.05%)</title><rect x="1049.6" y="181" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1052.59" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,520,203 samples, 0.02%)</title><rect x="1163.3" y="325" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1166.30" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (76,578,437 samples, 0.92%)</title><rect x="963.1" y="357" width="10.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="966.05" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (59,142,981 samples, 0.71%)</title><rect x="1152.4" y="405" width="8.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1155.38" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (34,565,220 samples, 0.41%)</title><rect x="560.7" y="549" width="4.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="563.73" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (17,444,083 samples, 0.21%)</title><rect x="430.2" y="533" width="2.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="433.22" y="543.5" ></text>
</g>
<g >
<title>update_process_times (1,058,778 samples, 0.01%)</title><rect x="943.6" y="277" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="946.60" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,182,491 samples, 0.11%)</title><rect x="1188.7" y="565" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1191.70" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (1,926,525 samples, 0.02%)</title><rect x="432.3" y="485" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="435.31" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,335,296 samples, 0.06%)</title><rect x="1129.7" y="261" width="0.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1132.71" y="271.5" ></text>
</g>
<g >
<title>operator new (1,103,255 samples, 0.01%)</title><rect x="929.7" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="932.70" y="271.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (6,677,231 samples, 0.08%)</title><rect x="876.2" y="533" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="879.21" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (3,965,337 samples, 0.05%)</title><rect x="953.8" y="357" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="956.80" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (18,694,226 samples, 0.22%)</title><rect x="996.0" y="165" width="2.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="999.02" y="175.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (3,548,526 samples, 0.04%)</title><rect x="704.7" y="421" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="707.74" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,595,170 samples, 0.02%)</title><rect x="77.8" y="405" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="80.81" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (939,234 samples, 0.01%)</title><rect x="183.1" y="501" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="186.08" y="511.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,282,918 samples, 0.04%)</title><rect x="1013.3" y="245" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1016.30" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,764,501 samples, 0.03%)</title><rect x="739.1" y="453" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="742.12" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,063,420 samples, 0.02%)</title><rect x="924.8" y="389" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="927.81" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,480,173 samples, 0.03%)</title><rect x="1101.1" y="213" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1104.14" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (48,438,239 samples, 0.58%)</title><rect x="698.6" y="517" width="6.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="701.58" y="527.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (3,265,476 samples, 0.04%)</title><rect x="560.1" y="533" width="0.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="563.13" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (813,261 samples, 0.01%)</title><rect x="1145.7" y="341" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.68" y="351.5" ></text>
</g>
<g >
<title>operator new (2,721,540 samples, 0.03%)</title><rect x="995.6" y="245" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="998.58" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (842,284 samples, 0.01%)</title><rect x="1092.4" y="325" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1095.40" y="335.5" ></text>
</g>
<g >
<title>malloc (8,836,243 samples, 0.11%)</title><rect x="588.4" y="549" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="591.39" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (820,721 samples, 0.01%)</title><rect x="978.6" y="309" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="981.59" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (39,477,172 samples, 0.47%)</title><rect x="909.1" y="437" width="5.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="912.10" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (16,185,228 samples, 0.19%)</title><rect x="82.8" y="533" width="2.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="85.80" y="543.5" ></text>
</g>
<g >
<title>roundf32x (9,660,309 samples, 0.12%)</title><rect x="174.6" y="549" width="1.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="177.57" y="559.5" ></text>
</g>
<g >
<title>cfree (7,669,311 samples, 0.09%)</title><rect x="1133.4" y="309" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1136.39" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,260,633 samples, 0.03%)</title><rect x="77.8" y="469" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="80.81" y="479.5" ></text>
</g>
<g >
<title>malloc (10,749,450 samples, 0.13%)</title><rect x="1006.9" y="341" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1009.91" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1,582,850 samples, 0.02%)</title><rect x="741.8" y="501" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="744.81" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (3,723,951 samples, 0.04%)</title><rect x="91.5" y="517" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="94.49" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (39,200,601 samples, 0.47%)</title><rect x="948.3" y="373" width="5.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="951.26" y="383.5" ></text>
</g>
<g >
<title>decltype  (972,928 samples, 0.01%)</title><rect x="84.9" y="405" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="87.85" y="415.5" ></text>
</g>
<g >
<title>all (8,353,635,517 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,230,628 samples, 0.01%)</title><rect x="995.0" y="181" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="998.04" y="191.5" ></text>
</g>
<g >
<title>operator new (1,303,441 samples, 0.02%)</title><rect x="1103.5" y="133" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.51" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (62,632,812 samples, 0.75%)</title><rect x="66.9" y="501" width="8.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="69.92" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (944,328 samples, 0.01%)</title><rect x="955.4" y="405" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="958.41" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,351,561 samples, 0.02%)</title><rect x="1145.3" y="357" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1148.33" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (22,085,725 samples, 0.26%)</title><rect x="1034.6" y="101" width="3.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1037.60" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (11,724,379 samples, 0.14%)</title><rect x="1086.2" y="325" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1089.19" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (814,127 samples, 0.01%)</title><rect x="936.4" y="309" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="939.44" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (22,085,725 samples, 0.26%)</title><rect x="1034.6" y="133" width="3.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1037.60" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,112,952 samples, 0.01%)</title><rect x="80.9" y="517" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="83.92" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,352,551 samples, 0.02%)</title><rect x="961.8" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="964.84" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,784,777 samples, 0.02%)</title><rect x="1056.2" y="181" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1059.23" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (6,176,616 samples, 0.07%)</title><rect x="432.7" y="485" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="435.68" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,842,125 samples, 0.02%)</title><rect x="993.4" y="245" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="996.41" y="255.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (11,373,428 samples, 0.14%)</title><rect x="224.4" y="485" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="227.37" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (945,046 samples, 0.01%)</title><rect x="1132.3" y="389" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1135.29" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,304,656 samples, 0.02%)</title><rect x="1055.0" y="85" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1057.97" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,749,619 samples, 0.02%)</title><rect x="737.0" y="453" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="740.01" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (1,514,597 samples, 0.02%)</title><rect x="81.1" y="533" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="84.08" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (941,699 samples, 0.01%)</title><rect x="955.3" y="357" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="958.26" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (18,354,705 samples, 0.22%)</title><rect x="1157.9" y="373" width="2.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1160.94" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (6,316,379 samples, 0.08%)</title><rect x="1008.5" y="341" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1011.51" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,781,412 samples, 0.07%)</title><rect x="395.5" y="485" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="398.46" y="495.5" ></text>
</g>
<g >
<title>is_close_int (24,552,600 samples, 0.29%)</title><rect x="944.2" y="389" width="3.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="947.22" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,125,174 samples, 0.05%)</title><rect x="527.0" y="501" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="529.97" y="511.5" ></text>
</g>
<g >
<title>malloc (2,358,219 samples, 0.03%)</title><rect x="988.2" y="261" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="991.24" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,696,815 samples, 0.02%)</title><rect x="1028.9" y="101" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1031.91" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,457,819 samples, 0.03%)</title><rect x="183.2" y="517" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="186.21" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,376,782 samples, 0.06%)</title><rect x="848.5" y="501" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="851.48" y="511.5" ></text>
</g>
<g >
<title>operator new (1,410,156 samples, 0.02%)</title><rect x="947.9" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="950.89" y="399.5" ></text>
</g>
<g >
<title>operator new (810,719 samples, 0.01%)</title><rect x="951.5" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="954.49" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,040,104 samples, 0.01%)</title><rect x="84.5" y="469" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="87.48" y="479.5" ></text>
</g>
<g >
<title>malloc (14,089,484 samples, 0.17%)</title><rect x="1103.8" y="277" width="2.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1106.83" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,774,821 samples, 0.02%)</title><rect x="590.3" y="485" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="593.26" y="495.5" ></text>
</g>
<g >
<title>malloc (9,893,930 samples, 0.12%)</title><rect x="1065.6" y="165" width="1.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1068.61" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,603,537 samples, 0.07%)</title><rect x="949.1" y="277" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="952.09" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (810,843 samples, 0.01%)</title><rect x="1016.0" y="325" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1019.05" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (810,497 samples, 0.01%)</title><rect x="922.7" y="373" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="925.68" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (13,805,526 samples, 0.17%)</title><rect x="510.6" y="533" width="2.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="513.60" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,066,150 samples, 0.01%)</title><rect x="1161.8" y="389" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1164.78" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,027,233 samples, 0.02%)</title><rect x="1118.3" y="149" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1121.31" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (54,791,139 samples, 0.66%)</title><rect x="1144.6" y="421" width="7.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1147.59" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,771,378 samples, 0.02%)</title><rect x="694.7" y="533" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="697.67" y="543.5" ></text>
</g>
<g >
<title>malloc (1,363,430 samples, 0.02%)</title><rect x="996.3" y="133" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="999.25" y="143.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (16,743,710 samples, 0.20%)</title><rect x="684.9" y="469" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="687.87" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,573,477 samples, 0.03%)</title><rect x="1115.8" y="149" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1118.76" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (29,063,456 samples, 0.35%)</title><rect x="690.6" y="533" width="4.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="693.56" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (22,324,872 samples, 0.27%)</title><rect x="853.7" y="533" width="3.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="856.73" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (754,653 samples, 0.01%)</title><rect x="1131.9" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1134.91" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,348,469 samples, 0.02%)</title><rect x="84.2" y="437" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="87.16" y="447.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,745,486 samples, 0.09%)</title><rect x="923.5" y="309" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="926.51" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,619,173 samples, 0.06%)</title><rect x="179.4" y="501" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="182.35" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,191,267 samples, 0.01%)</title><rect x="1005.0" y="293" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1007.97" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (13,168,740 samples, 0.16%)</title><rect x="737.3" y="485" width="1.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="740.26" y="495.5" ></text>
</g>
<g >
<title>malloc (2,478,456 samples, 0.03%)</title><rect x="1046.0" y="197" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1049.02" y="207.5" ></text>
</g>
<g >
<title>choose_next_point (2,296,069 samples, 0.03%)</title><rect x="583.1" y="421" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="586.09" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,841,729 samples, 0.03%)</title><rect x="1115.7" y="165" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1118.72" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,592,516 samples, 0.16%)</title><rect x="1060.1" y="85" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1063.05" y="95.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,776,983 samples, 0.02%)</title><rect x="1004.4" y="293" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1007.38" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (39,187,828 samples, 0.47%)</title><rect x="70.2" y="485" width="5.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="73.23" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,091,035 samples, 0.01%)</title><rect x="1101.5" y="165" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1104.53" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,779,244 samples, 0.02%)</title><rect x="586.7" y="453" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="589.71" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,367,752 samples, 0.02%)</title><rect x="431.1" y="437" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="434.09" y="447.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (11,179,001 samples, 0.13%)</title><rect x="381.7" y="469" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="384.74" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,348,469 samples, 0.02%)</title><rect x="84.2" y="485" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="87.16" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (1,108,547 samples, 0.01%)</title><rect x="1164.1" y="453" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1167.07" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,376,782 samples, 0.06%)</title><rect x="848.5" y="453" width="0.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="851.48" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (974,556 samples, 0.01%)</title><rect x="525.7" y="437" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="528.72" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (945,199 samples, 0.01%)</title><rect x="1054.8" y="133" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1057.76" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (953,315 samples, 0.01%)</title><rect x="1148.6" y="181" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1151.57" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (6,572,755 samples, 0.08%)</title><rect x="703.3" y="485" width="0.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="706.26" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (794,293 samples, 0.01%)</title><rect x="925.6" y="389" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="928.56" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (980,846 samples, 0.01%)</title><rect x="952.3" y="261" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="955.28" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (151,683,023 samples, 1.82%)</title><rect x="1016.5" y="309" width="21.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1019.50" y="319.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (8,956,827 samples, 0.11%)</title><rect x="695.5" y="533" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="698.51" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,595,170 samples, 0.02%)</title><rect x="77.8" y="421" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="80.81" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,379,046 samples, 0.02%)</title><rect x="1006.7" y="229" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1009.66" y="239.5" ></text>
</g>
<g >
<title>operator delete (2,676,391 samples, 0.03%)</title><rect x="1142.4" y="373" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1145.36" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,233,874 samples, 0.01%)</title><rect x="1153.5" y="325" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1156.47" y="335.5" ></text>
</g>
<g >
<title>cfree (6,239,629 samples, 0.07%)</title><rect x="988.8" y="245" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="991.82" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,862,181 samples, 0.14%)</title><rect x="78.7" y="485" width="1.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="81.69" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,443,066 samples, 0.07%)</title><rect x="998.9" y="357" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1001.85" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,920,117 samples, 0.02%)</title><rect x="1144.3" y="261" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1147.26" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (23,478,815 samples, 0.28%)</title><rect x="341.6" y="485" width="3.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="344.61" y="495.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,433,697 samples, 0.02%)</title><rect x="1141.8" y="341" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1144.81" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (46,076,547 samples, 0.55%)</title><rect x="1123.0" y="293" width="6.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1125.96" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,771,694 samples, 0.02%)</title><rect x="1162.3" y="277" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1165.30" y="287.5" ></text>
</g>
<g >
<title>update_process_times (820,721 samples, 0.01%)</title><rect x="978.6" y="245" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="981.59" y="255.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,553,280 samples, 0.08%)</title><rect x="1153.6" y="293" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1156.65" y="303.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,335,204 samples, 0.03%)</title><rect x="1182.7" y="517" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1185.71" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,203,378 samples, 0.03%)</title><rect x="182.2" y="453" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="185.20" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,759,041 samples, 0.02%)</title><rect x="1068.0" y="117" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1070.99" y="127.5" ></text>
</g>
<g >
<title>operator delete (968,564 samples, 0.01%)</title><rect x="930.1" y="277" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="933.05" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (162,582,514 samples, 1.95%)</title><rect x="664.3" y="517" width="22.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="667.27" y="527.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (826,528 samples, 0.01%)</title><rect x="1155.4" y="373" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1158.42" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (30,514,266 samples, 0.37%)</title><rect x="220.1" y="437" width="4.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="223.06" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (196,815,581 samples, 2.36%)</title><rect x="888.6" y="549" width="27.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="891.64" y="559.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (35,775,818 samples, 0.43%)</title><rect x="1111.1" y="245" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1114.09" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (810,650 samples, 0.01%)</title><rect x="583.3" y="357" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="586.26" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,234,219 samples, 0.01%)</title><rect x="1068.0" y="101" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1070.99" y="111.5" ></text>
</g>
<g >
<title>operator new (28,569,313 samples, 0.34%)</title><rect x="1177.0" y="565" width="4.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1180.01" y="575.5" ></text>
</g>
<g >
<title>round@plt (1,944,654 samples, 0.02%)</title><rect x="833.0" y="549" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="836.00" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,612,771 samples, 0.02%)</title><rect x="703.0" y="453" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="706.03" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (51,921,340 samples, 0.62%)</title><rect x="909.1" y="517" width="7.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="912.10" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,811,049 samples, 0.05%)</title><rect x="736.3" y="437" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="739.27" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (22,441,024 samples, 0.27%)</title><rect x="1149.1" y="341" width="3.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1152.08" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (12,812,216 samples, 0.15%)</title><rect x="407.1" y="469" width="1.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="410.07" y="479.5" ></text>
</g>
<g >
<title>cfree (7,726,753 samples, 0.09%)</title><rect x="930.3" y="261" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="933.30" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,781,412 samples, 0.07%)</title><rect x="395.5" y="453" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="398.46" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (42,973,979 samples, 0.51%)</title><rect x="1062.6" y="261" width="6.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1065.56" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (41,177,834 samples, 0.49%)</title><rect x="377.5" y="501" width="5.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="380.50" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,212,840 samples, 0.05%)</title><rect x="1138.5" y="341" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1141.50" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,214,998 samples, 0.05%)</title><rect x="1159.7" y="277" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1162.70" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,484,107 samples, 0.03%)</title><rect x="1129.1" y="197" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1132.11" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (166,189,176 samples, 1.99%)</title><rect x="976.2" y="405" width="23.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="979.22" y="415.5" >s..</text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,553,280 samples, 0.08%)</title><rect x="1153.6" y="309" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1156.65" y="319.5" ></text>
</g>
<g >
<title>cfree (795,897 samples, 0.01%)</title><rect x="1136.7" y="277" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1139.67" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (42,973,979 samples, 0.51%)</title><rect x="1062.6" y="277" width="6.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1065.56" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,778,636 samples, 0.05%)</title><rect x="1077.2" y="309" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1080.23" y="319.5" ></text>
</g>
<g >
<title>operator new (1,796,588 samples, 0.02%)</title><rect x="585.4" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="588.39" y="287.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,102,567 samples, 0.03%)</title><rect x="587.0" y="549" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="589.97" y="559.5" ></text>
</g>
<g >
<title>cfree (2,972,599 samples, 0.04%)</title><rect x="1020.8" y="213" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1023.80" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (813,534 samples, 0.01%)</title><rect x="1054.8" y="85" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1057.76" y="95.5" ></text>
</g>
<g >
<title>choose_next_point (1,754,807,714 samples, 21.01%)</title><rect x="916.4" y="501" width="247.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="919.45" y="511.5" >choose_next_point</text>
</g>
<g >
<title>update_process_times (761,311 samples, 0.01%)</title><rect x="1055.0" y="53" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1058.04" y="63.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,357,979 samples, 0.02%)</title><rect x="947.3" y="341" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="950.25" y="351.5" ></text>
</g>
<g >
<title>operator new (47,004,193 samples, 0.56%)</title><rect x="988.6" y="261" width="6.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="991.58" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,811,049 samples, 0.05%)</title><rect x="736.3" y="469" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="739.27" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,303,858 samples, 0.02%)</title><rect x="973.7" y="293" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="976.69" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (22,078,990 samples, 0.26%)</title><rect x="1141.5" y="405" width="3.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1144.47" y="415.5" ></text>
</g>
<g >
<title>malloc (1,995,020 samples, 0.02%)</title><rect x="977.3" y="373" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="980.31" y="383.5" ></text>
</g>
<g >
<title>is_close_int (43,710,288 samples, 0.52%)</title><rect x="727.4" y="533" width="6.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="730.41" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,453,200 samples, 0.02%)</title><rect x="943.5" y="341" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="946.55" y="351.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,618,265 samples, 0.03%)</title><rect x="1033.3" y="117" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1036.35" y="127.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,648,072 samples, 0.02%)</title><rect x="1141.2" y="373" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1144.23" y="383.5" ></text>
</g>
<g >
<title>operator new (14,397,742 samples, 0.17%)</title><rect x="950.2" y="277" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="953.22" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,662,962 samples, 0.02%)</title><rect x="1129.1" y="133" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1132.11" y="143.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (796,472 samples, 0.01%)</title><rect x="587.1" y="453" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="590.08" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,027,233 samples, 0.02%)</title><rect x="1118.3" y="213" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1121.31" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (2,153,416 samples, 0.03%)</title><rect x="1161.6" y="437" width="0.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1164.65" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,779,244 samples, 0.02%)</title><rect x="586.7" y="517" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="589.71" y="527.5" ></text>
</g>
<g >
<title>is_close_int (846,860 samples, 0.01%)</title><rect x="1050.0" y="165" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1052.98" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (42,699,418 samples, 0.51%)</title><rect x="1062.6" y="213" width="6.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1065.56" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (881,975 samples, 0.01%)</title><rect x="998.5" y="133" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1001.54" y="143.5" ></text>
</g>
<g >
<title>malloc (171,402,595 samples, 2.05%)</title><rect x="433.6" y="549" width="24.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="436.60" y="559.5" >m..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,771,378 samples, 0.02%)</title><rect x="694.7" y="517" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="697.67" y="527.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,935,351 samples, 0.02%)</title><rect x="1101.2" y="165" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1104.16" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (22,610,026 samples, 0.27%)</title><rect x="1133.1" y="357" width="3.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1136.14" y="367.5" ></text>
</g>
<g >
<title>operator new (827,908 samples, 0.01%)</title><rect x="1068.5" y="53" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1071.48" y="63.5" ></text>
</g>
<g >
<title>cfree (11,769,518 samples, 0.14%)</title><rect x="1116.2" y="245" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1119.24" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (54,771,629 samples, 0.66%)</title><rect x="383.3" y="517" width="7.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="386.32" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,115,563 samples, 0.05%)</title><rect x="702.3" y="453" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="705.33" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (185,331,787 samples, 2.22%)</title><rect x="344.9" y="469" width="26.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="347.93" y="479.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,376,782 samples, 0.06%)</title><rect x="848.5" y="485" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="851.48" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (11,652,565 samples, 0.14%)</title><rect x="1142.9" y="309" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1145.88" y="319.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,764,415 samples, 0.06%)</title><rect x="689.9" y="453" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="692.89" y="463.5" ></text>
</g>
<g >
<title>cfree (1,932,526 samples, 0.02%)</title><rect x="1044.0" y="181" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1047.05" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,243,706 samples, 0.01%)</title><rect x="586.7" y="405" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="589.71" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,027,233 samples, 0.02%)</title><rect x="1118.3" y="165" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1121.31" y="175.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,294,303 samples, 0.06%)</title><rect x="1138.5" y="373" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1141.48" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (2,169,811 samples, 0.03%)</title><rect x="952.5" y="293" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="955.47" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (91,140,864 samples, 1.09%)</title><rect x="985.9" y="293" width="12.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="988.86" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (86,733,801 samples, 1.04%)</title><rect x="841.5" y="533" width="12.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="844.48" y="543.5" ></text>
</g>
<g >
<title>choose_next_point (1,754,807,714 samples, 21.01%)</title><rect x="916.4" y="485" width="247.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="919.45" y="495.5" >choose_next_point</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (156,958,567 samples, 1.88%)</title><rect x="1039.8" y="229" width="22.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1042.80" y="239.5" >s..</text>
</g>
<g >
<title>cfree (808,082 samples, 0.01%)</title><rect x="1144.8" y="357" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1147.76" y="367.5" ></text>
</g>
<g >
<title>choose_next_point (148,811,767 samples, 1.78%)</title><rect x="61.2" y="549" width="21.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="64.25" y="559.5" ></text>
</g>
<g >
<title>operator delete (2,732,630 samples, 0.03%)</title><rect x="1105.8" y="277" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1108.82" y="287.5" ></text>
</g>
<g >
<title>cfree (2,476,156 samples, 0.03%)</title><rect x="585.3" y="293" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="588.33" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,579,118 samples, 0.02%)</title><rect x="1054.9" y="133" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1057.93" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,941,230 samples, 0.02%)</title><rect x="1103.4" y="261" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1106.42" y="271.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (53,089,176 samples, 0.64%)</title><rect x="868.0" y="517" width="7.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="870.96" y="527.5" ></text>
</g>
<g >
<title>malloc (8,851,010 samples, 0.11%)</title><rect x="1014.4" y="325" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1017.41" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (723,600 samples, 0.01%)</title><rect x="952.1" y="197" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="955.12" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,141,966 samples, 0.04%)</title><rect x="590.1" y="533" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="593.09" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,770,484 samples, 0.02%)</title><rect x="92.5" y="485" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="95.47" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (3,088,242 samples, 0.04%)</title><rect x="665.8" y="501" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="668.80" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,272,580 samples, 0.05%)</title><rect x="1032.7" y="85" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1035.74" y="95.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,453,200 samples, 0.02%)</title><rect x="943.5" y="357" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="946.55" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,779,244 samples, 0.02%)</title><rect x="586.7" y="485" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="589.71" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (77,536,403 samples, 0.93%)</title><rect x="65.9" y="517" width="11.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="68.94" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (8,625,852 samples, 0.10%)</title><rect x="1058.4" y="149" width="1.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1061.44" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,519,258 samples, 0.02%)</title><rect x="693.6" y="501" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="696.61" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (12,403,854 samples, 0.15%)</title><rect x="1156.2" y="357" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1159.18" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,054,518 samples, 0.07%)</title><rect x="1156.4" y="277" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.39" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (29,159,170 samples, 0.35%)</title><rect x="180.0" y="533" width="4.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="183.01" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (20,113,180 samples, 0.24%)</title><rect x="393.4" y="517" width="2.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="396.44" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,484,263 samples, 0.02%)</title><rect x="583.2" y="373" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="586.17" y="383.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (75,468,007 samples, 0.90%)</title><rect x="925.9" y="357" width="10.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="928.92" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,387,336 samples, 0.02%)</title><rect x="1162.5" y="341" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1165.55" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,952,571 samples, 0.05%)</title><rect x="1151.7" y="229" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1154.69" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,367,752 samples, 0.02%)</title><rect x="431.1" y="469" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="434.09" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (5,781,412 samples, 0.07%)</title><rect x="395.5" y="469" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="398.46" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (3,965,337 samples, 0.05%)</title><rect x="953.8" y="389" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="956.80" y="399.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (39,187,828 samples, 0.47%)</title><rect x="70.2" y="453" width="5.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="73.23" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,503,504 samples, 0.02%)</title><rect x="953.6" y="341" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="956.58" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,027,233 samples, 0.02%)</title><rect x="1118.3" y="133" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1121.31" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,590,792 samples, 0.03%)</title><rect x="1136.9" y="357" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1139.86" y="367.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,217,925 samples, 0.01%)</title><rect x="1154.6" y="325" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1157.57" y="335.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,217,925 samples, 0.01%)</title><rect x="1154.6" y="309" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1157.57" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,196,711 samples, 0.11%)</title><rect x="548.0" y="533" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="550.99" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (3,965,337 samples, 0.05%)</title><rect x="953.8" y="341" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="956.80" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (794,293 samples, 0.01%)</title><rect x="925.6" y="373" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="928.56" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,480,173 samples, 0.03%)</title><rect x="1101.1" y="245" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1104.14" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,115,563 samples, 0.05%)</title><rect x="702.3" y="469" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="705.33" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (723,600 samples, 0.01%)</title><rect x="952.1" y="149" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="955.12" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (6,176,616 samples, 0.07%)</title><rect x="432.7" y="517" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="435.68" y="527.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (16,593,409 samples, 0.20%)</title><rect x="1086.0" y="357" width="2.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1089.00" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,314,271 samples, 0.05%)</title><rect x="689.2" y="453" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="692.19" y="463.5" ></text>
</g>
<g >
<title>operator delete (138,789,474 samples, 1.66%)</title><rect x="122.7" y="549" width="19.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="125.71" y="559.5" ></text>
</g>
<g >
<title>decltype  (11,494,627 samples, 0.14%)</title><rect x="402.2" y="485" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="405.23" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (2,118,256 samples, 0.03%)</title><rect x="92.8" y="501" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="95.82" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,145,155 samples, 0.03%)</title><rect x="1089.1" y="357" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1092.12" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,854,061 samples, 0.02%)</title><rect x="943.5" y="389" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="946.51" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,696,464 samples, 0.04%)</title><rect x="1136.3" y="309" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1139.33" y="319.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (821,145 samples, 0.01%)</title><rect x="1129.3" y="165" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1132.35" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,589,659 samples, 0.03%)</title><rect x="1155.0" y="373" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1158.00" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (59,142,981 samples, 0.71%)</title><rect x="1152.4" y="421" width="8.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1155.38" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,132,549 samples, 0.06%)</title><rect x="391.1" y="517" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="394.05" y="527.5" ></text>
</g>
<g >
<title>operator delete (923,458 samples, 0.01%)</title><rect x="951.4" y="261" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="954.36" y="271.5" ></text>
</g>
<g >
<title>get_inbetween_points (4,012,836 samples, 0.05%)</title><rect x="1155.5" y="389" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1158.54" y="399.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (6,552,985 samples, 0.08%)</title><rect x="700.4" y="501" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="703.37" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,520,203 samples, 0.02%)</title><rect x="1163.3" y="357" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1166.30" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (14,241,579 samples, 0.17%)</title><rect x="922.8" y="373" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="925.80" y="383.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,442,209 samples, 0.03%)</title><rect x="414.8" y="485" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="417.82" y="495.5" ></text>
</g>
<g >
<title>gen_all_points (133,658,618 samples, 1.60%)</title><rect x="396.3" y="549" width="18.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="399.28" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (97,554,609 samples, 1.17%)</title><rect x="1108.9" y="277" width="13.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1111.88" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,379,281 samples, 0.02%)</title><rect x="182.9" y="501" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="185.89" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,214,656 samples, 0.01%)</title><rect x="955.5" y="405" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="958.54" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (156,958,567 samples, 1.88%)</title><rect x="1039.8" y="213" width="22.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1042.80" y="223.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (12,403,854 samples, 0.15%)</title><rect x="1156.2" y="309" width="1.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1159.18" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (1,751,231,300 samples, 20.96%)</title><rect x="916.4" y="453" width="247.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="919.45" y="463.5" >choose_next_point</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,712,405 samples, 0.02%)</title><rect x="943.5" y="373" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="946.53" y="383.5" ></text>
</g>
<g >
<title>cfree (3,962,720 samples, 0.05%)</title><rect x="1126.0" y="229" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1128.97" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,061,938 samples, 0.06%)</title><rect x="865.1" y="533" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="868.10" y="543.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (53,089,176 samples, 0.64%)</title><rect x="868.0" y="501" width="7.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="870.96" y="511.5" ></text>
</g>
<g >
<title>cfree (797,582 samples, 0.01%)</title><rect x="1163.1" y="309" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1166.15" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (46,565,378 samples, 0.56%)</title><rect x="926.1" y="309" width="6.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="929.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (499,830,916 samples, 5.98%)</title><rect x="999.7" y="389" width="70.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1002.70" y="399.5" >std::_R..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (12,812,216 samples, 0.15%)</title><rect x="407.1" y="437" width="1.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="410.07" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (3,670,432 samples, 0.04%)</title><rect x="392.3" y="501" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="395.34" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (6,019,183 samples, 0.07%)</title><rect x="1162.8" y="437" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1165.83" y="447.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (2,214,489 samples, 0.03%)</title><rect x="1183.3" y="549" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1186.30" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (828,637 samples, 0.01%)</title><rect x="1136.9" y="293" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.86" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,667,307 samples, 0.02%)</title><rect x="1103.5" y="213" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1106.46" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (4,675,579 samples, 0.06%)</title><rect x="1069.6" y="341" width="0.7" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1072.64" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (19,551,469 samples, 0.23%)</title><rect x="1083.2" y="341" width="2.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1086.24" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (79,832,873 samples, 0.96%)</title><rect x="877.4" y="549" width="11.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="880.36" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (4,789,202 samples, 0.06%)</title><rect x="1160.8" y="405" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1163.76" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (965,286 samples, 0.01%)</title><rect x="560.6" y="533" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="563.59" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (974,556 samples, 0.01%)</title><rect x="525.7" y="421" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="528.72" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (30,514,266 samples, 0.37%)</title><rect x="220.1" y="485" width="4.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="223.06" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (11,862,181 samples, 0.14%)</title><rect x="78.7" y="501" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="81.69" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,578,580 samples, 0.02%)</title><rect x="83.9" y="469" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="86.93" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (24,726,184 samples, 0.30%)</title><rect x="948.9" y="309" width="3.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="951.92" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (2,423,001 samples, 0.03%)</title><rect x="79.3" y="453" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="82.31" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (51,921,340 samples, 0.62%)</title><rect x="909.1" y="501" width="7.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="912.10" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (975,544 samples, 0.01%)</title><rect x="1015.9" y="309" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1018.85" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (964,186 samples, 0.01%)</title><rect x="1164.1" y="421" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1167.09" y="431.5" ></text>
</g>
<g >
<title>get_inbetween_points (21,950,281 samples, 0.26%)</title><rect x="1089.4" y="373" width="3.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1092.42" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,578,580 samples, 0.02%)</title><rect x="83.9" y="437" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="86.93" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (13,592,516 samples, 0.16%)</title><rect x="1060.1" y="101" width="1.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1063.05" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,222,047 samples, 0.01%)</title><rect x="1151.7" y="197" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.73" y="207.5" ></text>
</g>
<g >
<title>operator new (1,923,388 samples, 0.02%)</title><rect x="1120.8" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1123.76" y="271.5" ></text>
</g>
<g >
<title>cfree (8,022,182 samples, 0.10%)</title><rect x="1156.2" y="293" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1159.20" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,901,177 samples, 0.02%)</title><rect x="1068.3" y="181" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1071.33" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (8,389,077 samples, 0.10%)</title><rect x="523.4" y="453" width="1.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="526.36" y="463.5" ></text>
</g>
<g >
<title>operator new (14,673,325 samples, 0.18%)</title><rect x="996.4" y="133" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="999.45" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,531,310 samples, 0.04%)</title><rect x="409.1" y="437" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="412.11" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,279,957 samples, 0.05%)</title><rect x="584.7" y="293" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="587.72" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,716,527 samples, 0.02%)</title><rect x="1159.8" y="245" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.80" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (775,088 samples, 0.01%)</title><rect x="546.9" y="533" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="549.92" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,771,908 samples, 0.02%)</title><rect x="1138.2" y="389" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1141.17" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (24,726,184 samples, 0.30%)</title><rect x="948.9" y="325" width="3.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="951.92" y="335.5" ></text>
</g>
<g >
<title>cfree (1,344,550 samples, 0.02%)</title><rect x="952.5" y="277" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="955.53" y="287.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (938,416 samples, 0.01%)</title><rect x="309.5" y="453" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="312.54" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (915,481 samples, 0.01%)</title><rect x="1013.9" y="309" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1016.85" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,667,307 samples, 0.02%)</title><rect x="1103.5" y="229" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1106.46" y="239.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (76,578,437 samples, 0.92%)</title><rect x="963.1" y="341" width="10.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="966.05" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,063,420 samples, 0.02%)</title><rect x="924.8" y="373" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="927.81" y="383.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,232,691 samples, 0.01%)</title><rect x="432.1" y="469" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="435.14" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (49,151,702 samples, 0.59%)</title><rect x="520.6" y="517" width="6.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="523.61" y="527.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,379,124 samples, 0.02%)</title><rect x="193.4" y="517" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="196.42" y="527.5" ></text>
</g>
<g >
<title>operator new (1,073,305 samples, 0.01%)</title><rect x="1148.9" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1151.91" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (97,554,609 samples, 1.17%)</title><rect x="1108.9" y="341" width="13.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1111.88" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,274,741 samples, 0.04%)</title><rect x="1008.8" y="325" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1011.78" y="335.5" ></text>
</g>
<g >
<title>cfree (3,932,426 samples, 0.05%)</title><rect x="1065.0" y="165" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1068.02" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (7,177,809 samples, 0.09%)</title><rect x="984.8" y="357" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="987.85" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (6,019,183 samples, 0.07%)</title><rect x="1162.8" y="421" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1165.83" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,610,759 samples, 0.07%)</title><rect x="1005.9" y="261" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1008.87" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (42,699,418 samples, 0.51%)</title><rect x="1062.6" y="197" width="6.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1065.56" y="207.5" ></text>
</g>
<g >
<title>get_inbetween_points (14,607,162 samples, 0.17%)</title><rect x="1137.2" y="421" width="2.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1140.24" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (5,994,496 samples, 0.07%)</title><rect x="693.8" y="485" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="696.82" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (959,311 samples, 0.01%)</title><rect x="1068.5" y="117" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1071.46" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,626,924 samples, 0.02%)</title><rect x="925.1" y="357" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="928.12" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,321,295 samples, 0.06%)</title><rect x="583.9" y="405" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="586.91" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (5,610,759 samples, 0.07%)</title><rect x="1005.9" y="277" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1008.87" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,579,118 samples, 0.02%)</title><rect x="1054.9" y="117" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1057.93" y="127.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,480,173 samples, 0.03%)</title><rect x="1101.1" y="197" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1104.14" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,435,028 samples, 0.09%)</title><rect x="584.7" y="325" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="587.72" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (13,456,220 samples, 0.16%)</title><rect x="875.5" y="549" width="1.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="878.46" y="559.5" ></text>
</g>
<g >
<title>get_inbetween_points (805,204 samples, 0.01%)</title><rect x="1145.0" y="357" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1147.99" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (53,840,951 samples, 0.64%)</title><rect x="1144.6" y="389" width="7.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1147.64" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (16,794,971 samples, 0.20%)</title><rect x="1149.3" y="245" width="2.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1152.30" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,418,727 samples, 0.08%)</title><rect x="1136.3" y="405" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1139.33" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,500,855 samples, 0.02%)</title><rect x="1101.5" y="229" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1104.49" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (969,069 samples, 0.01%)</title><rect x="1008.6" y="309" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1011.65" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (46,416,022 samples, 0.56%)</title><rect x="580.2" y="517" width="6.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="583.15" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,692,498 samples, 0.03%)</title><rect x="694.9" y="517" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="697.92" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,369,885 samples, 0.03%)</title><rect x="1004.6" y="309" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1007.63" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (1,551,246,593 samples, 18.57%)</title><rect x="917.2" y="421" width="219.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="920.21" y="431.5" >choose_next_point</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (185,331,787 samples, 2.22%)</title><rect x="344.9" y="453" width="26.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="347.93" y="463.5" >a..</text>
</g>
<g >
<title>local_Rb_tree_decrement (1,084,196 samples, 0.01%)</title><rect x="560.4" y="517" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="563.36" y="527.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,426,726 samples, 0.08%)</title><rect x="1140.3" y="341" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1143.33" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (85,279,612 samples, 1.02%)</title><rect x="672.8" y="453" width="12.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="675.82" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,619,173 samples, 0.06%)</title><rect x="179.4" y="517" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="182.35" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (844,388 samples, 0.01%)</title><rect x="1013.9" y="277" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1016.86" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,387,336 samples, 0.02%)</title><rect x="1162.5" y="325" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1165.55" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,387,265 samples, 0.18%)</title><rect x="1059.8" y="197" width="2.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1062.80" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (26,364,543 samples, 0.32%)</title><rect x="932.7" y="309" width="3.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="935.66" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,582,360 samples, 0.04%)</title><rect x="1085.0" y="293" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1088.00" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,342,148 samples, 0.03%)</title><rect x="431.8" y="469" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="434.81" y="479.5" ></text>
</g>
<g >
<title>malloc (3,449,755 samples, 0.04%)</title><rect x="1147.7" y="213" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1150.68" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (13,775,168 samples, 0.16%)</title><rect x="856.9" y="533" width="1.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="859.88" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,222,030 samples, 0.22%)</title><rect x="1142.0" y="389" width="2.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1145.01" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (460,853,556 samples, 5.52%)</title><rect x="226.0" y="549" width="65.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="228.98" y="559.5" >[libc.s..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,301,800 samples, 0.03%)</title><rect x="1028.9" y="181" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1031.85" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (808,000 samples, 0.01%)</title><rect x="1125.9" y="165" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1128.86" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,779,244 samples, 0.02%)</title><rect x="586.7" y="437" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="589.71" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (805,803 samples, 0.01%)</title><rect x="992.3" y="213" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="995.31" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (40,258,197 samples, 0.48%)</title><rect x="580.2" y="485" width="5.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="583.15" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,915,517 samples, 0.02%)</title><rect x="590.3" y="501" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="593.26" y="511.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,764,415 samples, 0.06%)</title><rect x="689.9" y="469" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="692.89" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (157,501,143 samples, 1.89%)</title><rect x="1039.8" y="277" width="22.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1042.80" y="287.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,771,694 samples, 0.02%)</title><rect x="1162.3" y="325" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1165.30" y="335.5" ></text>
</g>
<g >
<title>operator new (2,753,134 samples, 0.03%)</title><rect x="1068.9" y="165" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1071.88" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (2,696,221 samples, 0.03%)</title><rect x="1088.0" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1090.96" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,290,792 samples, 0.03%)</title><rect x="84.7" y="469" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="87.66" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,827,590 samples, 0.02%)</title><rect x="1028.9" y="117" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1031.89" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,683,687 samples, 0.08%)</title><rect x="216.3" y="533" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="219.32" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (945,199 samples, 0.01%)</title><rect x="1054.8" y="149" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1057.76" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,808,689 samples, 0.02%)</title><rect x="1148.8" y="117" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1151.82" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (2,858,279 samples, 0.03%)</title><rect x="80.5" y="501" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="83.52" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (796,472 samples, 0.01%)</title><rect x="587.1" y="437" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="590.08" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,590,792 samples, 0.03%)</title><rect x="1136.9" y="341" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1139.86" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (5,053,124 samples, 0.06%)</title><rect x="79.7" y="469" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.65" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,254,110 samples, 0.02%)</title><rect x="1182.0" y="533" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1184.99" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,915,088 samples, 0.02%)</title><rect x="1115.9" y="133" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1118.85" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (825,313 samples, 0.01%)</title><rect x="923.4" y="341" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="926.39" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,100,302 samples, 0.05%)</title><rect x="1068.7" y="277" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1071.69" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (19,569,587 samples, 0.23%)</title><rect x="687.8" y="501" width="2.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="690.80" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (968,944 samples, 0.01%)</title><rect x="1163.7" y="421" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1166.68" y="431.5" ></text>
</g>
<g >
<title>operator new (1,198,652 samples, 0.01%)</title><rect x="1118.4" y="117" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1121.43" y="127.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,548,526 samples, 0.04%)</title><rect x="704.7" y="437" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="707.74" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,821,765 samples, 0.02%)</title><rect x="1092.0" y="309" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1095.03" y="319.5" ></text>
</g>
<g >
<title>is_close_int (3,136,256 samples, 0.04%)</title><rect x="1138.0" y="405" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1141.03" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,838,116 samples, 0.03%)</title><rect x="994.8" y="197" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="997.82" y="207.5" ></text>
</g>
<g >
<title>cfree (17,846,202 samples, 0.21%)</title><rect x="933.5" y="277" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="936.47" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (22,487,033 samples, 0.27%)</title><rect x="1056.5" y="181" width="3.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1059.48" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,358,098 samples, 0.02%)</title><rect x="309.5" y="485" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="312.48" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,655,971 samples, 0.03%)</title><rect x="189.0" y="533" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="191.95" y="543.5" ></text>
</g>
<g >
<title>malloc (4,787,249 samples, 0.06%)</title><rect x="950.7" y="261" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="953.68" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (8,389,077 samples, 0.10%)</title><rect x="523.4" y="501" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="526.36" y="511.5" ></text>
</g>
<g >
<title>operator delete (1,528,538 samples, 0.02%)</title><rect x="1046.4" y="197" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1049.37" y="207.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (2,039,829 samples, 0.02%)</title><rect x="564.9" y="533" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="567.94" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (1,514,156 samples, 0.02%)</title><rect x="1168.4" y="549" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1171.39" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,973,484 samples, 0.05%)</title><rect x="1068.7" y="213" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1071.71" y="223.5" ></text>
</g>
<g >
<title>operator delete (6,566,030 samples, 0.08%)</title><rect x="1029.2" y="197" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1032.20" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (5,965,541 samples, 0.07%)</title><rect x="81.4" y="533" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="84.43" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (1,776,295 samples, 0.02%)</title><rect x="1115.9" y="101" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1118.87" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,520,203 samples, 0.02%)</title><rect x="1163.3" y="309" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1166.30" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,808,689 samples, 0.02%)</title><rect x="1148.8" y="133" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1151.82" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,782,095 samples, 0.02%)</title><rect x="1126.6" y="149" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1129.59" y="159.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (969,067 samples, 0.01%)</title><rect x="427.4" y="533" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="430.44" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,364,502 samples, 0.02%)</title><rect x="1101.5" y="197" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1104.49" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,335,296 samples, 0.06%)</title><rect x="1129.7" y="277" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1132.71" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2,307,187,040 samples, 27.62%)</title><rect x="590.5" y="565" width="325.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="593.54" y="575.5" >[unknown]</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (3,186,855 samples, 0.04%)</title><rect x="736.8" y="485" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="739.81" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,335,204 samples, 0.03%)</title><rect x="1182.7" y="549" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1185.71" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,920,117 samples, 0.02%)</title><rect x="1144.3" y="181" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1147.26" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,204,802 samples, 0.01%)</title><rect x="1135.7" y="245" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1138.72" y="255.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (2,966,198 samples, 0.04%)</title><rect x="738.7" y="469" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="741.70" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (7,469,214 samples, 0.09%)</title><rect x="704.2" y="453" width="1.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="707.19" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (813,468 samples, 0.01%)</title><rect x="985.6" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="988.58" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (11,392,248 samples, 0.14%)</title><rect x="387.4" y="469" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="390.41" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,166,278 samples, 0.03%)</title><rect x="1140.0" y="373" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1143.02" y="383.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,225,871 samples, 0.03%)</title><rect x="1059.3" y="117" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1062.34" y="127.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (40,258,197 samples, 0.48%)</title><rect x="580.2" y="437" width="5.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="583.15" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,692,563 samples, 0.08%)</title><rect x="1146.2" y="229" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1149.18" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (4,272,580 samples, 0.05%)</title><rect x="1032.7" y="133" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1035.74" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (253,241,537 samples, 3.03%)</title><rect x="590.6" y="549" width="35.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="593.63" y="559.5" >[li..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (16,794,971 samples, 0.20%)</title><rect x="1149.3" y="229" width="2.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1152.30" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,379,046 samples, 0.02%)</title><rect x="1006.7" y="261" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1009.66" y="271.5" ></text>
</g>
<g >
<title>malloc (1,090,466 samples, 0.01%)</title><rect x="1152.0" y="181" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1154.98" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (8,389,077 samples, 0.10%)</title><rect x="523.4" y="469" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="526.36" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,435,028 samples, 0.09%)</title><rect x="584.7" y="373" width="1.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="587.72" y="383.5" ></text>
</g>
<g >
<title>operator new (1,482,249 samples, 0.02%)</title><rect x="1150.0" y="197" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.02" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (16,593,409 samples, 0.20%)</title><rect x="1086.0" y="341" width="2.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1089.00" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (19,778,927 samples, 0.24%)</title><rect x="690.8" y="485" width="2.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="693.81" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (5,994,496 samples, 0.07%)</title><rect x="693.8" y="501" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="696.82" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,348,469 samples, 0.02%)</title><rect x="84.2" y="453" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="87.16" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (13,666,651 samples, 0.16%)</title><rect x="739.9" y="517" width="1.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="742.88" y="527.5" ></text>
</g>
<g >
<title>cfree (1,622,463 samples, 0.02%)</title><rect x="1137.0" y="293" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1139.97" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (959,311 samples, 0.01%)</title><rect x="1068.5" y="133" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1071.46" y="143.5" ></text>
</g>
<g >
<title>malloc (1,380,351 samples, 0.02%)</title><rect x="1068.9" y="149" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1071.95" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,080,602 samples, 0.01%)</title><rect x="1163.1" y="325" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1166.15" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,808,689 samples, 0.02%)</title><rect x="1148.8" y="181" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1151.82" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,749,619 samples, 0.02%)</title><rect x="737.0" y="469" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="740.01" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,456,879 samples, 0.04%)</title><rect x="1085.5" y="277" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1088.51" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,558,388 samples, 0.07%)</title><rect x="1011.2" y="325" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1014.18" y="335.5" ></text>
</g>
<g >
<title>gen_all_points (6,418,727 samples, 0.08%)</title><rect x="1136.3" y="421" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1139.33" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,083,865 samples, 0.01%)</title><rect x="1162.0" y="325" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1164.97" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,226,024 samples, 0.01%)</title><rect x="947.3" y="309" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="950.27" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (414,612,097 samples, 4.96%)</title><rect x="1010.7" y="341" width="58.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1013.70" y="351.5" >std::_..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,242,758 samples, 0.03%)</title><rect x="1085.0" y="245" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1088.00" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,453,200 samples, 0.02%)</title><rect x="943.5" y="325" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="946.55" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (145,421,031 samples, 1.74%)</title><rect x="539.4" y="549" width="20.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="542.37" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,214,998 samples, 0.05%)</title><rect x="1159.7" y="341" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1162.70" y="351.5" ></text>
</g>
<g >
<title>operator new (92,564,839 samples, 1.11%)</title><rect x="1046.6" y="197" width="13.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1049.58" y="207.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (38,294,918 samples, 0.46%)</title><rect x="948.4" y="357" width="5.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="951.39" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (810,497 samples, 0.01%)</title><rect x="922.7" y="357" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="925.68" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (1,617,421 samples, 0.02%)</title><rect x="1088.1" y="293" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1091.11" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,782,095 samples, 0.02%)</title><rect x="1126.6" y="117" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1129.59" y="127.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,184,606 samples, 0.04%)</title><rect x="78.1" y="469" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="81.13" y="479.5" ></text>
</g>
<g >
<title>cfree (14,195,568 samples, 0.17%)</title><rect x="1164.5" y="565" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1167.48" y="575.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,066,150 samples, 0.01%)</title><rect x="1161.8" y="357" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1164.78" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (899,263 samples, 0.01%)</title><rect x="1130.5" y="325" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1133.46" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,973,484 samples, 0.05%)</title><rect x="1068.7" y="261" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1071.71" y="271.5" ></text>
</g>
<g >
<title>operator new (9,218,651 samples, 0.11%)</title><rect x="1150.3" y="213" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1153.29" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,426,726 samples, 0.08%)</title><rect x="1140.3" y="373" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1143.33" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (13,592,516 samples, 0.16%)</title><rect x="1060.1" y="149" width="1.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1063.05" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (166,189,176 samples, 1.99%)</title><rect x="976.2" y="389" width="23.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="979.22" y="399.5" >s..</text>
</g>
<g >
<title>cfree (177,023,867 samples, 2.12%)</title><rect x="36.2" y="549" width="25.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="39.24" y="559.5" >c..</text>
</g>
<g >
<title>operator delete (2,731,322 samples, 0.03%)</title><rect x="1120.4" y="261" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1123.37" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (16,604,072 samples, 0.20%)</title><rect x="78.6" y="533" width="2.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="81.57" y="543.5" ></text>
</g>
<g >
<title>operator new (227,081,471 samples, 2.72%)</title><rect x="142.3" y="549" width="32.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="145.32" y="559.5" >op..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (11,568,917 samples, 0.14%)</title><rect x="923.0" y="357" width="1.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="925.96" y="367.5" ></text>
</g>
<g >
<title>decltype  (1,344,331 samples, 0.02%)</title><rect x="83.3" y="485" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.26" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (4,693,950 samples, 0.06%)</title><rect x="81.6" y="501" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="84.61" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,443,887 samples, 0.03%)</title><rect x="925.1" y="389" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="928.10" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,080,602 samples, 0.01%)</title><rect x="1163.1" y="357" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1166.15" y="367.5" ></text>
</g>
<g >
<title>choose_next_point (22,185,356 samples, 0.27%)</title><rect x="1152.4" y="389" width="3.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1155.40" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (4,554,472 samples, 0.05%)</title><rect x="1009.4" y="325" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1012.44" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,662,962 samples, 0.02%)</title><rect x="1129.1" y="165" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1132.11" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (820,721 samples, 0.01%)</title><rect x="978.6" y="261" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="981.59" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (145,175,036 samples, 1.74%)</title><rect x="955.7" y="389" width="20.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="958.71" y="399.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (16,891,499 samples, 0.20%)</title><rect x="190.1" y="517" width="2.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="193.06" y="527.5" ></text>
</g>
<g >
<title>choose_next_point (2,455,749 samples, 0.03%)</title><rect x="309.4" y="533" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="312.38" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (4,938,555 samples, 0.06%)</title><rect x="1013.1" y="277" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1016.06" y="287.5" ></text>
</g>
<g >
<title>decltype  (6,552,985 samples, 0.08%)</title><rect x="700.4" y="485" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="703.37" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle (761,311 samples, 0.01%)</title><rect x="1055.0" y="69" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1058.04" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (6,989,636 samples, 0.08%)</title><rect x="849.2" y="501" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="852.23" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,314,271 samples, 0.05%)</title><rect x="689.2" y="421" width="0.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="692.19" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,667,307 samples, 0.02%)</title><rect x="1103.5" y="197" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1106.46" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (156,958,567 samples, 1.88%)</title><rect x="1039.8" y="261" width="22.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1042.80" y="271.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (46,565,378 samples, 0.56%)</title><rect x="926.1" y="325" width="6.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="929.07" y="335.5" ></text>
</g>
<g >
<title>cfree (25,278,157 samples, 0.30%)</title><rect x="1123.3" y="245" width="3.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1126.27" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (20,498,709 samples, 0.25%)</title><rect x="517.7" y="469" width="2.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="520.71" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,144,741 samples, 0.16%)</title><rect x="933.8" y="261" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="936.80" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,428,325 samples, 0.03%)</title><rect x="702.9" y="485" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="705.92" y="495.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,598,671 samples, 0.03%)</title><rect x="381.4" y="453" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="384.37" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (7,614,831 samples, 0.09%)</title><rect x="391.8" y="533" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="394.78" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,645,614 samples, 0.04%)</title><rect x="1163.1" y="405" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1166.13" y="415.5" ></text>
</g>
<g >
<title>cfree (211,054,632 samples, 2.53%)</title><rect x="626.4" y="549" width="29.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="629.40" y="559.5" >cf..</text>
</g>
<g >
<title>decltype  (1,503,504 samples, 0.02%)</title><rect x="953.6" y="325" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="956.58" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,453,200 samples, 0.02%)</title><rect x="943.5" y="309" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="946.55" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (6,038,716 samples, 0.07%)</title><rect x="1166.8" y="533" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1169.84" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,080,602 samples, 0.01%)</title><rect x="1163.1" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1166.15" y="399.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,694,139 samples, 0.02%)</title><rect x="587.0" y="501" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="589.98" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (796,472 samples, 0.01%)</title><rect x="587.1" y="469" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="590.08" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (151,683,023 samples, 1.82%)</title><rect x="1016.5" y="293" width="21.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1019.50" y="303.5" >s..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,978,477 samples, 0.10%)</title><rect x="75.8" y="469" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="78.77" y="479.5" ></text>
</g>
<g >
<title>cfree (6,895,236 samples, 0.08%)</title><rect x="1158.2" y="277" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1161.17" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,759,041 samples, 0.02%)</title><rect x="1068.0" y="133" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1070.99" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,169,811 samples, 0.03%)</title><rect x="952.5" y="325" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="955.47" y="335.5" ></text>
</g>
<g >
<title>malloc (5,295,921 samples, 0.06%)</title><rect x="1134.5" y="309" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1137.51" y="319.5" ></text>
</g>
<g >
<title>malloc (1,223,568 samples, 0.01%)</title><rect x="1035.1" y="85" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1038.10" y="95.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,484,111 samples, 0.07%)</title><rect x="1082.5" y="309" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1085.46" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (2,590,527 samples, 0.03%)</title><rect x="389.0" y="501" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="392.02" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,399,981 samples, 0.08%)</title><rect x="1058.4" y="85" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1061.44" y="95.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,856,108 samples, 0.02%)</title><rect x="587.0" y="517" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="589.97" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,387,336 samples, 0.02%)</title><rect x="1162.5" y="245" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1165.55" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,229,159 samples, 0.07%)</title><rect x="1128.6" y="245" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1131.58" y="255.5" ></text>
</g>
<g >
<title>cfree (2,128,903 samples, 0.03%)</title><rect x="1150.4" y="197" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1153.39" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,335,296 samples, 0.06%)</title><rect x="1129.7" y="309" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1132.71" y="319.5" ></text>
</g>
<g >
<title>operator new (9,433,591 samples, 0.11%)</title><rect x="1060.5" y="69" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1063.52" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (4,931,200 samples, 0.06%)</title><rect x="1182.3" y="565" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1185.34" y="575.5" ></text>
</g>
<g >
<title>cfree (1,752,075 samples, 0.02%)</title><rect x="921.9" y="405" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="924.93" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (10,384,522 samples, 0.12%)</title><rect x="527.5" y="517" width="1.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="530.55" y="527.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (2,409,974 samples, 0.03%)</title><rect x="887.5" y="533" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="890.47" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (10,708,243 samples, 0.13%)</title><rect x="844.9" y="517" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="847.86" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (7,614,831 samples, 0.09%)</title><rect x="391.8" y="517" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="394.78" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,764,501 samples, 0.03%)</title><rect x="739.1" y="469" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="742.12" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (5,610,759 samples, 0.07%)</title><rect x="1005.9" y="245" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1008.87" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (6,399,981 samples, 0.08%)</title><rect x="1058.4" y="117" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1061.44" y="127.5" ></text>
</g>
<g >
<title>malloc (818,879 samples, 0.01%)</title><rect x="982.6" y="357" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="985.61" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,952,571 samples, 0.05%)</title><rect x="1151.7" y="309" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1154.69" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,203,378 samples, 0.03%)</title><rect x="182.2" y="437" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="185.20" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (4,125,120 samples, 0.05%)</title><rect x="694.1" y="469" width="0.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="697.09" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (2,118,256 samples, 0.03%)</title><rect x="92.8" y="517" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="95.82" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,377,126 samples, 0.05%)</title><rect x="702.3" y="485" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="705.30" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (46,565,378 samples, 0.56%)</title><rect x="926.1" y="293" width="6.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="929.07" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (117,241,480 samples, 1.40%)</title><rect x="957.3" y="373" width="16.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="960.31" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,083,865 samples, 0.01%)</title><rect x="1162.0" y="309" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1164.97" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (16,185,228 samples, 0.19%)</title><rect x="82.8" y="517" width="2.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="85.80" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,607,488 samples, 0.02%)</title><rect x="994.8" y="133" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="997.82" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,724,379 samples, 0.14%)</title><rect x="1086.2" y="309" width="1.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1089.19" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (22,085,725 samples, 0.26%)</title><rect x="1034.6" y="165" width="3.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1037.60" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (953,315 samples, 0.01%)</title><rect x="1148.6" y="165" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1151.57" y="175.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,470,474 samples, 0.02%)</title><rect x="924.6" y="325" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="927.60" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (52,445,381 samples, 0.63%)</title><rect x="375.9" y="517" width="7.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="378.91" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,473,168 samples, 0.02%)</title><rect x="976.9" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="979.93" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (832,182 samples, 0.01%)</title><rect x="1157.8" y="277" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1160.82" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,344,331 samples, 0.02%)</title><rect x="83.3" y="501" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="86.26" y="511.5" ></text>
</g>
<g >
<title>gen_all_points (61,241,119 samples, 0.73%)</title><rect x="696.8" y="549" width="8.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="699.77" y="559.5" ></text>
</g>
<g >
<title>operator new (2,577,934 samples, 0.03%)</title><rect x="1126.1" y="213" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.13" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (46,076,547 samples, 0.55%)</title><rect x="1123.0" y="277" width="6.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1125.96" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (16,705,314 samples, 0.20%)</title><rect x="409.6" y="485" width="2.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="412.61" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (19,778,927 samples, 0.24%)</title><rect x="690.8" y="501" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="693.81" y="511.5" ></text>
</g>
<g >
<title>operator new (6,270,332 samples, 0.08%)</title><rect x="1102.1" y="245" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1105.13" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (761,311 samples, 0.01%)</title><rect x="1055.0" y="37" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1058.04" y="47.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (26,453,554 samples, 0.32%)</title><rect x="932.6" y="341" width="3.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="935.65" y="351.5" ></text>
</g>
<g >
<title>gen_all_points (19,909,530 samples, 0.24%)</title><rect x="82.3" y="549" width="2.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="85.27" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (4,255,201 samples, 0.05%)</title><rect x="1010.1" y="325" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1013.08" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,242,758 samples, 0.03%)</title><rect x="1085.0" y="277" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1088.00" y="287.5" ></text>
</g>
<g >
<title>cfree (1,909,554 samples, 0.02%)</title><rect x="1160.8" y="325" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1163.84" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (51,949,715 samples, 0.62%)</title><rect x="1075.1" y="325" width="7.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1078.12" y="335.5" ></text>
</g>
<g >
<title>gen_all_points (2,200,611 samples, 0.03%)</title><rect x="1168.3" y="565" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1171.30" y="575.5" ></text>
</g>
<g >
<title>roundf32x (5,723,720 samples, 0.07%)</title><rect x="502.5" y="549" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="505.51" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,890,845 samples, 0.08%)</title><rect x="1032.7" y="149" width="1.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1035.74" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,511,254 samples, 0.03%)</title><rect x="1122.2" y="149" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1125.22" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (955,175 samples, 0.01%)</title><rect x="1014.0" y="261" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1017.00" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,900,507 samples, 0.02%)</title><rect x="1107.7" y="197" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1110.74" y="207.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,339,602 samples, 0.02%)</title><rect x="1085.3" y="261" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1088.32" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (4,973,459 samples, 0.06%)</title><rect x="689.2" y="485" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="692.19" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (40,258,197 samples, 0.48%)</title><rect x="580.2" y="453" width="5.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="583.15" y="463.5" ></text>
</g>
<g >
<title>cfree (133,487,986 samples, 1.60%)</title><rect x="291.1" y="549" width="18.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="294.10" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (945,199 samples, 0.01%)</title><rect x="1054.8" y="101" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1057.76" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,275,015 samples, 0.05%)</title><rect x="181.1" y="501" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="184.14" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,182,316 samples, 0.06%)</title><rect x="1107.4" y="261" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1110.43" y="271.5" ></text>
</g>
<g >
<title>task_tick_fair (814,307 samples, 0.01%)</title><rect x="1116.0" y="85" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1118.95" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,224,053 samples, 0.01%)</title><rect x="1162.3" y="245" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1165.30" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (3,965,337 samples, 0.05%)</title><rect x="953.8" y="373" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="956.80" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (4,214,998 samples, 0.05%)</title><rect x="1159.7" y="325" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1162.70" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,952,571 samples, 0.05%)</title><rect x="1151.7" y="277" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1154.69" y="287.5" ></text>
</g>
<g >
<title>operator new (200,596,711 samples, 2.40%)</title><rect x="804.7" y="549" width="28.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="807.67" y="559.5" >op..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (1,582,850 samples, 0.02%)</title><rect x="741.8" y="517" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="744.81" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,367,752 samples, 0.02%)</title><rect x="431.1" y="453" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="434.09" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (10,427,877 samples, 0.12%)</title><rect x="181.7" y="517" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="184.74" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,745,486 samples, 0.09%)</title><rect x="923.5" y="341" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="926.51" y="351.5" ></text>
</g>
<g >
<title>update_process_times (1,915,088 samples, 0.02%)</title><rect x="1115.9" y="117" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1118.85" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (16,794,971 samples, 0.20%)</title><rect x="1149.3" y="277" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1152.30" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (5,735,983 samples, 0.07%)</title><rect x="559.9" y="549" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="562.92" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (5,965,541 samples, 0.07%)</title><rect x="81.4" y="517" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="84.43" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,779,244 samples, 0.02%)</title><rect x="586.7" y="533" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="589.71" y="543.5" ></text>
</g>
<g >
<title>malloc (7,630,885 samples, 0.09%)</title><rect x="1126.9" y="245" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1129.86" y="255.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,282,918 samples, 0.04%)</title><rect x="1013.3" y="229" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1016.30" y="239.5" ></text>
</g>
<g >
<title>decltype  (1,290,317 samples, 0.02%)</title><rect x="705.2" y="469" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="708.24" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (185,655,751 samples, 2.22%)</title><rect x="10.0" y="549" width="26.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >[..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,203,547 samples, 0.03%)</title><rect x="1070.3" y="389" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1073.30" y="399.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (33,988,323 samples, 0.41%)</title><rect x="371.1" y="485" width="4.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="374.11" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,352,551 samples, 0.02%)</title><rect x="961.8" y="325" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="964.84" y="335.5" ></text>
</g>
<g >
<title>operator new (1,720,198 samples, 0.02%)</title><rect x="1064.2" y="165" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1067.20" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (4,523,197 samples, 0.05%)</title><rect x="1087.2" y="277" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1090.21" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (13,666,651 samples, 0.16%)</title><rect x="739.9" y="501" width="1.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="742.88" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (42,083,246 samples, 0.50%)</title><rect x="733.9" y="533" width="6.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="736.93" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (10,722,218 samples, 0.13%)</title><rect x="1158.1" y="357" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1161.09" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (64,219,989 samples, 0.77%)</title><rect x="1074.2" y="357" width="9.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1077.16" y="367.5" ></text>
</g>
<g >
<title>get_inbetween_points (57,299,547 samples, 0.69%)</title><rect x="85.1" y="549" width="8.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="88.08" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (1,514,597 samples, 0.02%)</title><rect x="81.1" y="517" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="84.08" y="527.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,222,602 samples, 0.01%)</title><rect x="1037.8" y="277" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1040.76" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,775,409 samples, 0.02%)</title><rect x="1155.0" y="341" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1158.02" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (1,241,723 samples, 0.01%)</title><rect x="1161.5" y="437" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1164.47" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,234,219 samples, 0.01%)</title><rect x="1068.0" y="85" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1070.99" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,600,942 samples, 0.02%)</title><rect x="1189.8" y="549" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1192.77" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (20,495,995 samples, 0.25%)</title><rect x="1146.2" y="277" width="2.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1149.18" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,335,010 samples, 0.03%)</title><rect x="1088.7" y="357" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1091.68" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,169,740 samples, 0.06%)</title><rect x="994.5" y="229" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="997.49" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,480,173 samples, 0.03%)</title><rect x="1101.1" y="229" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1104.14" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,500,191 samples, 0.02%)</title><rect x="1106.5" y="277" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1109.53" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (4,554,472 samples, 0.05%)</title><rect x="1009.4" y="341" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1012.44" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,742,744 samples, 0.08%)</title><rect x="526.0" y="501" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="529.01" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,511,254 samples, 0.03%)</title><rect x="1122.2" y="197" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1125.22" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (1,519,734 samples, 0.02%)</title><rect x="864.9" y="517" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="867.89" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (104,726,845 samples, 1.25%)</title><rect x="1093.4" y="309" width="14.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1096.37" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (35,129,927 samples, 0.42%)</title><rect x="384.1" y="501" width="4.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="387.05" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (13,666,651 samples, 0.16%)</title><rect x="739.9" y="533" width="1.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="742.88" y="543.5" ></text>
</g>
<g >
<title>malloc (209,101,376 samples, 2.50%)</title><rect x="93.2" y="549" width="29.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="96.18" y="559.5" >ma..</text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (20,169,947 samples, 0.24%)</title><rect x="412.0" y="469" width="2.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="414.97" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (16,891,499 samples, 0.20%)</title><rect x="190.1" y="501" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="193.06" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,564,636 samples, 0.03%)</title><rect x="952.4" y="341" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="955.42" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (77,536,403 samples, 0.93%)</title><rect x="65.9" y="533" width="11.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="68.94" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,579,118 samples, 0.02%)</title><rect x="1054.9" y="101" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1057.93" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (959,311 samples, 0.01%)</title><rect x="1068.5" y="149" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1071.46" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,904,851 samples, 0.02%)</title><rect x="82.0" y="469" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="85.00" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,417,133 samples, 0.03%)</title><rect x="1088.3" y="357" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1091.34" y="367.5" ></text>
</g>
<g >
<title>cfree (1,486,922 samples, 0.02%)</title><rect x="1143.6" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1146.64" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (13,805,526 samples, 0.17%)</title><rect x="510.6" y="469" width="2.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="513.60" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (808,000 samples, 0.01%)</title><rect x="1125.9" y="213" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1128.86" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,212,840 samples, 0.05%)</title><rect x="1138.5" y="325" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1141.50" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (6,533,641 samples, 0.08%)</title><rect x="695.9" y="501" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="698.85" y="511.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,978,387 samples, 0.04%)</title><rect x="1115.7" y="181" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1118.72" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,405,372 samples, 0.02%)</title><rect x="952.1" y="245" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="955.06" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,900,507 samples, 0.02%)</title><rect x="1107.7" y="181" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1110.74" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (104,726,845 samples, 1.25%)</title><rect x="1093.4" y="357" width="14.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1096.37" y="367.5" ></text>
</g>
<g >
<title>_start (1,755,480,293 samples, 21.01%)</title><rect x="916.4" y="565" width="248.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="919.45" y="575.5" >_start</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,027,233 samples, 0.02%)</title><rect x="1118.3" y="197" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1121.31" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,203,378 samples, 0.03%)</title><rect x="182.2" y="501" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="185.20" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (97,554,609 samples, 1.17%)</title><rect x="1108.9" y="309" width="13.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1111.88" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (221,868,600 samples, 2.66%)</title><rect x="1037.9" y="325" width="31.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1040.93" y="335.5" >st..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (11,494,627 samples, 0.14%)</title><rect x="402.2" y="501" width="1.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="405.23" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (972,939 samples, 0.01%)</title><rect x="1132.0" y="373" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1135.04" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,771,694 samples, 0.02%)</title><rect x="1162.3" y="293" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1165.30" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,792,479 samples, 0.02%)</title><rect x="392.9" y="517" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="395.85" y="527.5" ></text>
</g>
<g >
<title>gen_all_points (77,223,639 samples, 0.92%)</title><rect x="925.7" y="405" width="10.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="928.67" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,139,397 samples, 0.04%)</title><rect x="1131.6" y="357" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1134.58" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (35,129,927 samples, 0.42%)</title><rect x="384.1" y="485" width="4.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="387.05" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (5,085,412 samples, 0.06%)</title><rect x="185.6" y="533" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="188.58" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,212,840 samples, 0.05%)</title><rect x="1138.5" y="309" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1141.50" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (805,803 samples, 0.01%)</title><rect x="992.3" y="229" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="995.31" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,028,510 samples, 0.02%)</title><rect x="1028.9" y="149" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1031.89" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,848,513 samples, 0.02%)</title><rect x="1054.9" y="165" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1057.89" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (40,258,197 samples, 0.48%)</title><rect x="580.2" y="469" width="5.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="583.15" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,275,015 samples, 0.05%)</title><rect x="181.1" y="485" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="184.14" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,375,316 samples, 0.02%)</title><rect x="1069.3" y="373" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1072.27" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (85,279,612 samples, 1.02%)</title><rect x="672.8" y="485" width="12.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="675.82" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,986,841 samples, 0.04%)</title><rect x="1107.7" y="245" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1110.74" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,224,809 samples, 0.01%)</title><rect x="955.2" y="405" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="958.22" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,262,503 samples, 0.02%)</title><rect x="1168.1" y="565" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.08" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (5,003,602 samples, 0.06%)</title><rect x="952.8" y="341" width="0.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="955.78" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (752,343 samples, 0.01%)</title><rect x="1047.4" y="181" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1050.38" y="191.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,569,237 samples, 0.03%)</title><rect x="1188.3" y="549" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.28" y="559.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,393,593 samples, 0.06%)</title><rect x="1091.6" y="325" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1094.64" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (4,945,696 samples, 0.06%)</title><rect x="1166.9" y="517" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1169.93" y="527.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (10,095,829 samples, 0.12%)</title><rect x="979.8" y="325" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="982.84" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,764,168 samples, 0.25%)</title><rect x="1030.8" y="197" width="2.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1033.78" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (754,653 samples, 0.01%)</title><rect x="1131.9" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1134.91" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (5,188,637 samples, 0.06%)</title><rect x="69.5" y="485" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="72.50" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (42,699,418 samples, 0.51%)</title><rect x="1062.6" y="245" width="6.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1065.56" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,900,507 samples, 0.02%)</title><rect x="1107.7" y="213" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1110.74" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (156,958,567 samples, 1.88%)</title><rect x="1039.8" y="245" width="22.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1042.80" y="255.5" >s..</text>
</g>
<g >
<title>choose_next_point (12,026,348 samples, 0.14%)</title><rect x="1012.6" y="325" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1015.65" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,145,155 samples, 0.03%)</title><rect x="1089.1" y="341" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1092.12" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,531,310 samples, 0.04%)</title><rect x="409.1" y="469" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="412.11" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,182,903 samples, 0.03%)</title><rect x="1136.0" y="309" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1139.03" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (53,089,176 samples, 0.64%)</title><rect x="868.0" y="533" width="7.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="870.96" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,824,060 samples, 0.08%)</title><rect x="547.0" y="533" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="550.02" y="543.5" ></text>
</g>
<g >
<title>cfree (3,980,851 samples, 0.05%)</title><rect x="1001.7" y="341" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1004.69" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (2,532,438 samples, 0.03%)</title><rect x="1141.7" y="389" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1144.65" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,275,015 samples, 0.05%)</title><rect x="181.1" y="517" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="184.14" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (5,610,759 samples, 0.07%)</title><rect x="1005.9" y="229" width="0.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1008.87" y="239.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,083,179 samples, 0.01%)</title><rect x="1054.7" y="165" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1057.74" y="175.5" ></text>
</g>
<g >
<title>operator new (3,343,319 samples, 0.04%)</title><rect x="655.7" y="533" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="658.67" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,945,758 samples, 0.14%)</title><rect x="1058.0" y="165" width="1.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1060.97" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,373,869 samples, 0.02%)</title><rect x="1157.7" y="293" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1160.74" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (4,570,426 samples, 0.05%)</title><rect x="1183.0" y="565" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1186.04" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,505,407 samples, 0.02%)</title><rect x="993.1" y="245" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="996.14" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,569,640 samples, 0.03%)</title><rect x="583.5" y="405" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="586.51" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (153,991,551 samples, 1.84%)</title><rect x="204.2" y="549" width="21.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="207.22" y="559.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (10,558,357 samples, 0.13%)</title><rect x="1002.9" y="293" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1005.89" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,298,387 samples, 0.02%)</title><rect x="1029.0" y="85" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1031.97" y="95.5" ></text>
</g>
<g >
<title>operator delete (7,330,567 samples, 0.09%)</title><rect x="982.7" y="357" width="1.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="985.73" y="367.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (938,416 samples, 0.01%)</title><rect x="309.5" y="437" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="312.54" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,973,484 samples, 0.05%)</title><rect x="1068.7" y="245" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1071.71" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (2,858,279 samples, 0.03%)</title><rect x="80.5" y="485" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="83.52" y="495.5" ></text>
</g>
<g >
<title>choose_next_point (11,300,369 samples, 0.14%)</title><rect x="1166.5" y="565" width="1.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1169.48" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (104,726,845 samples, 1.25%)</title><rect x="1093.4" y="325" width="14.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1096.37" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (499,830,916 samples, 5.98%)</title><rect x="999.7" y="405" width="70.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1002.70" y="415.5" >std::se..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (436,113,625 samples, 5.22%)</title><rect x="1070.6" y="405" width="61.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1073.61" y="415.5" >std::s..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (39,477,172 samples, 0.47%)</title><rect x="909.1" y="453" width="5.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="912.10" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,004,506 samples, 0.01%)</title><rect x="952.1" y="229" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="955.12" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (945,046 samples, 0.01%)</title><rect x="1132.3" y="405" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1135.29" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,191,267 samples, 0.01%)</title><rect x="1005.0" y="277" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1007.97" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (150,460,421 samples, 1.80%)</title><rect x="1016.5" y="245" width="21.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1019.50" y="255.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (18,694,226 samples, 0.22%)</title><rect x="996.0" y="149" width="2.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="999.02" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,091,533 samples, 0.05%)</title><rect x="736.2" y="485" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="739.23" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (1,755,412,308 samples, 21.01%)</title><rect x="916.4" y="549" width="248.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="919.45" y="559.5" >__libc_start_main</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,080,763 samples, 0.01%)</title><rect x="1145.3" y="341" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1148.33" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,845,633 samples, 0.05%)</title><rect x="1070.9" y="373" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1073.90" y="383.5" ></text>
</g>
<g >
<title>operator delete (2,043,598 samples, 0.02%)</title><rect x="992.4" y="245" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="995.45" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (46,835,436 samples, 0.56%)</title><rect x="926.0" y="341" width="6.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="929.03" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,505,783 samples, 0.11%)</title><rect x="1062.6" y="181" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1065.64" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,595,170 samples, 0.02%)</title><rect x="77.8" y="453" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="80.81" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (7,469,214 samples, 0.09%)</title><rect x="704.2" y="485" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="707.19" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,808,689 samples, 0.02%)</title><rect x="1148.8" y="165" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1151.82" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (145,175,036 samples, 1.74%)</title><rect x="955.7" y="405" width="20.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="958.71" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (76,421,676 samples, 0.91%)</title><rect x="925.8" y="373" width="10.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="928.78" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,717,677 samples, 0.09%)</title><rect x="380.3" y="437" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="383.28" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (27,650,837 samples, 0.33%)</title><rect x="1132.4" y="405" width="3.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1135.43" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,170,286 samples, 0.03%)</title><rect x="1038.3" y="309" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1041.33" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,234,219 samples, 0.01%)</title><rect x="1068.0" y="69" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1070.99" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (11,796,542 samples, 0.14%)</title><rect x="1142.9" y="357" width="1.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1145.88" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,978,477 samples, 0.10%)</title><rect x="75.8" y="501" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="78.77" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,511,254 samples, 0.03%)</title><rect x="1122.2" y="165" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1125.22" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,607,488 samples, 0.02%)</title><rect x="994.8" y="181" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="997.82" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,915,517 samples, 0.02%)</title><rect x="590.3" y="517" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="593.26" y="527.5" ></text>
</g>
<g >
<title>decltype  (3,548,526 samples, 0.04%)</title><rect x="704.7" y="405" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="707.74" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (10,722,218 samples, 0.13%)</title><rect x="1158.1" y="325" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1161.09" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (1,107,564 samples, 0.01%)</title><rect x="1155.9" y="373" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1158.93" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,435,028 samples, 0.09%)</title><rect x="584.7" y="405" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="587.72" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,153,193 samples, 0.27%)</title><rect x="926.1" y="277" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="929.07" y="287.5" ></text>
</g>
<g >
<title>cfree (995,535 samples, 0.01%)</title><rect x="588.2" y="549" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="591.23" y="559.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,112,952 samples, 0.01%)</title><rect x="80.9" y="533" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="83.92" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (4,619,173 samples, 0.06%)</title><rect x="179.4" y="533" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="182.35" y="543.5" ></text>
</g>
<g >
<title>cfree (811,156 samples, 0.01%)</title><rect x="1145.8" y="341" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1148.83" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (39,477,172 samples, 0.47%)</title><rect x="909.1" y="485" width="5.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="912.10" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,612,771 samples, 0.02%)</title><rect x="703.0" y="469" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="706.03" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (69,563,138 samples, 0.83%)</title><rect x="550.1" y="501" width="9.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="553.09" y="511.5" ></text>
</g>
<g >
<title>operator new (1,509,307 samples, 0.02%)</title><rect x="935.8" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="938.75" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (436,113,625 samples, 5.22%)</title><rect x="1070.6" y="389" width="61.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1073.61" y="399.5" >std::_..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (7,717,677 samples, 0.09%)</title><rect x="380.3" y="453" width="1.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="383.28" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,123,842 samples, 0.07%)</title><rect x="1003.5" y="261" width="0.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1006.52" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,904,851 samples, 0.02%)</title><rect x="82.0" y="485" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="85.00" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,006,915 samples, 0.02%)</title><rect x="1005.0" y="325" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1007.97" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,838,116 samples, 0.03%)</title><rect x="994.8" y="213" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="997.82" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (13,805,526 samples, 0.17%)</title><rect x="510.6" y="517" width="2.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="513.60" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (7,262,787 samples, 0.09%)</title><rect x="962.0" y="357" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="965.03" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (26,364,543 samples, 0.32%)</title><rect x="932.7" y="293" width="3.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="935.66" y="303.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (6,989,805 samples, 0.08%)</title><rect x="1005.9" y="293" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1008.87" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (24,869,110 samples, 0.30%)</title><rect x="948.9" y="341" width="3.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="951.90" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (162,582,514 samples, 1.95%)</title><rect x="664.3" y="533" width="22.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="667.27" y="543.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (20,495,995 samples, 0.25%)</title><rect x="1146.2" y="293" width="2.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1149.18" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,490,601 samples, 0.02%)</title><rect x="978.7" y="357" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="981.72" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (14,067,552 samples, 0.17%)</title><rect x="529.0" y="517" width="2.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="532.02" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,387,336 samples, 0.02%)</title><rect x="1162.5" y="277" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1165.55" y="287.5" ></text>
</g>
<g >
<title>operator new (4,103,728 samples, 0.05%)</title><rect x="1143.6" y="277" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1146.62" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (51,128,637 samples, 0.61%)</title><rect x="1062.0" y="309" width="7.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1065.05" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (794,293 samples, 0.01%)</title><rect x="925.6" y="357" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="928.56" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,217,925 samples, 0.01%)</title><rect x="1154.6" y="341" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1157.57" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,058,778 samples, 0.01%)</title><rect x="943.6" y="293" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="946.60" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (117,745,893 samples, 1.41%)</title><rect x="858.8" y="549" width="16.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="861.83" y="559.5" ></text>
</g>
<g >
<title>operator new (2,087,111 samples, 0.02%)</title><rect x="954.7" y="405" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="957.75" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (974,556 samples, 0.01%)</title><rect x="525.7" y="453" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="528.72" y="463.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,123,842 samples, 0.07%)</title><rect x="1003.5" y="245" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1006.52" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,212,840 samples, 0.05%)</title><rect x="1138.5" y="357" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1141.50" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,060,097 samples, 0.02%)</title><rect x="953.0" y="325" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="956.04" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (5,921,807 samples, 0.07%)</title><rect x="1069.5" y="357" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1072.46" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,376,782 samples, 0.06%)</title><rect x="848.5" y="469" width="0.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="851.48" y="479.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,775,930 samples, 0.02%)</title><rect x="411.7" y="469" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="414.72" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,618,232 samples, 0.02%)</title><rect x="583.1" y="405" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="586.15" y="415.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (16,636,163 samples, 0.20%)</title><rect x="973.9" y="357" width="2.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="976.87" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (1,108,547 samples, 0.01%)</title><rect x="1164.1" y="437" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1167.07" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (11,796,542 samples, 0.14%)</title><rect x="1142.9" y="373" width="1.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1145.88" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (20,495,995 samples, 0.25%)</title><rect x="1146.2" y="325" width="2.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1149.18" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (8,956,827 samples, 0.11%)</title><rect x="695.5" y="517" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="698.51" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (16,636,163 samples, 0.20%)</title><rect x="973.9" y="373" width="2.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="976.87" y="383.5" ></text>
</g>
<g >
<title>choose_next_point (287,133,912 samples, 3.44%)</title><rect x="656.2" y="549" width="40.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="659.21" y="559.5" >cho..</text>
</g>
<g >
<title>cfree (2,430,618 samples, 0.03%)</title><rect x="950.3" y="261" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="953.34" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (491,221,819 samples, 5.88%)</title><rect x="999.9" y="357" width="69.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1002.88" y="367.5" >std::_R..</text>
</g>
<g >
<title>std::abs (2,325,105 samples, 0.03%)</title><rect x="733.3" y="517" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="736.26" y="527.5" ></text>
</g>
<g >
<title>malloc (1,946,967 samples, 0.02%)</title><rect x="1157.4" y="293" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1160.37" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,782,095 samples, 0.02%)</title><rect x="1126.6" y="181" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1129.59" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,662,962 samples, 0.02%)</title><rect x="1129.1" y="181" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1132.11" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (4,996,774 samples, 0.06%)</title><rect x="329.5" y="501" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="332.50" y="511.5" ></text>
</g>
<g >
<title>update_process_times (837,555 samples, 0.01%)</title><rect x="1101.3" y="133" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1104.31" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (37,277,394 samples, 0.45%)</title><rect x="531.0" y="533" width="5.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="534.00" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,243,306 samples, 0.01%)</title><rect x="1093.7" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1096.72" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,242,758 samples, 0.03%)</title><rect x="1085.0" y="229" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1088.00" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (5,526,881 samples, 0.07%)</title><rect x="691.9" y="453" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="694.95" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,115,563 samples, 0.05%)</title><rect x="702.3" y="437" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="705.33" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (2,256,342 samples, 0.03%)</title><rect x="84.3" y="485" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="87.35" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,275,015 samples, 0.05%)</title><rect x="181.1" y="469" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="184.14" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (53,840,951 samples, 0.64%)</title><rect x="1144.6" y="373" width="7.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1147.64" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (7,401,374 samples, 0.09%)</title><rect x="840.4" y="469" width="1.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="843.43" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,607,488 samples, 0.02%)</title><rect x="994.8" y="149" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="997.82" y="159.5" ></text>
</g>
<g >
<title>cfree (2,003,942 samples, 0.02%)</title><rect x="1159.8" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1162.76" y="271.5" ></text>
</g>
<g >
<title>cfree (940,309 samples, 0.01%)</title><rect x="988.1" y="261" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="991.05" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,083,865 samples, 0.01%)</title><rect x="1162.0" y="389" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1164.97" y="399.5" ></text>
</g>
<g >
<title>malloc (18,997,200 samples, 0.23%)</title><rect x="989.8" y="245" width="2.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="992.76" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,717,677 samples, 0.09%)</title><rect x="380.3" y="421" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="383.28" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (13,426,596 samples, 0.16%)</title><rect x="1002.7" y="325" width="1.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1005.73" y="335.5" ></text>
</g>
<g >
<title>operator new (1,107,035 samples, 0.01%)</title><rect x="1144.4" y="149" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1147.35" y="159.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (11,373,428 samples, 0.14%)</title><rect x="224.4" y="469" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="227.37" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (4,870,375 samples, 0.06%)</title><rect x="1162.1" y="437" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1165.13" y="447.5" ></text>
</g>
<g >
<title>operator new (16,487,139 samples, 0.20%)</title><rect x="1035.3" y="85" width="2.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1038.28" y="95.5" ></text>
</g>
<g >
<title>operator delete (800,606 samples, 0.01%)</title><rect x="1151.1" y="197" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1154.08" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (18,828,816 samples, 0.23%)</title><rect x="996.0" y="229" width="2.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="999.02" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (11,652,565 samples, 0.14%)</title><rect x="1142.9" y="325" width="1.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1145.88" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,920,117 samples, 0.02%)</title><rect x="1144.3" y="245" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1147.26" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (1,470,127 samples, 0.02%)</title><rect x="877.2" y="533" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="880.15" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,920,117 samples, 0.02%)</title><rect x="1144.3" y="165" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1147.26" y="175.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (69,563,138 samples, 0.83%)</title><rect x="550.1" y="517" width="9.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="553.09" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (16,891,499 samples, 0.20%)</title><rect x="190.1" y="533" width="2.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="193.06" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (16,794,971 samples, 0.20%)</title><rect x="1149.3" y="293" width="2.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1152.30" y="303.5" ></text>
</g>
<g >
<title>[libc.so.6] (762,587 samples, 0.01%)</title><rect x="1101.7" y="245" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1104.74" y="255.5" ></text>
</g>
<g >
<title>malloc (1,612,301 samples, 0.02%)</title><rect x="1145.1" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1148.10" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (1,107,564 samples, 0.01%)</title><rect x="1155.9" y="357" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1158.93" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,870,375 samples, 0.06%)</title><rect x="1162.1" y="389" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1165.13" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (968,944 samples, 0.01%)</title><rect x="1163.7" y="437" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1166.68" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (723,600 samples, 0.01%)</title><rect x="952.1" y="165" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="955.12" y="175.5" ></text>
</g>
<g >
<title>_dl_catch_exception (796,472 samples, 0.01%)</title><rect x="587.1" y="485" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="590.08" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (35,359,884 samples, 0.42%)</title><rect x="846.4" y="517" width="5.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="849.38" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (10,095,829 samples, 0.12%)</title><rect x="979.8" y="357" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="982.84" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,358,045 samples, 0.02%)</title><rect x="1129.8" y="213" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1132.80" y="223.5" ></text>
</g>
<g >
<title>operator delete (1,531,521 samples, 0.02%)</title><rect x="936.1" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="939.11" y="287.5" ></text>
</g>
<g >
<title>decltype  (8,437,941 samples, 0.10%)</title><rect x="413.6" y="405" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="416.62" y="415.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (29,222,736 samples, 0.35%)</title><rect x="701.3" y="501" width="4.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="704.30" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,204,802 samples, 0.01%)</title><rect x="1135.7" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.72" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (277,817,679 samples, 3.33%)</title><rect x="1092.8" y="373" width="39.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1095.78" y="383.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,808,689 samples, 0.02%)</title><rect x="1148.8" y="197" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1151.82" y="207.5" ></text>
</g>
<g >
<title>decltype  (2,346,558 samples, 0.03%)</title><rect x="1033.4" y="101" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1036.39" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,399,981 samples, 0.08%)</title><rect x="1058.4" y="69" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1061.44" y="79.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,182,719 samples, 0.01%)</title><rect x="973.7" y="229" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="976.70" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (131,881,366 samples, 1.58%)</title><rect x="666.2" y="501" width="18.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="669.24" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,083,865 samples, 0.01%)</title><rect x="1162.0" y="357" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1164.97" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (12,403,854 samples, 0.15%)</title><rect x="1156.2" y="373" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1159.18" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (56,431,446 samples, 0.68%)</title><rect x="1122.7" y="341" width="7.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1125.66" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (1,223,103 samples, 0.01%)</title><rect x="1029.0" y="53" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1031.98" y="63.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (30,514,266 samples, 0.37%)</title><rect x="220.1" y="453" width="4.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="223.06" y="463.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,470,474 samples, 0.02%)</title><rect x="924.6" y="341" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="927.60" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (957,939 samples, 0.01%)</title><rect x="1138.5" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1141.52" y="303.5" ></text>
</g>
<g >
<title>[anon] (2,555,555,181 samples, 30.59%)</title><rect x="226.0" y="565" width="361.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="228.98" y="575.5" >[anon]</text>
</g>
<g >
<title>operator new (2,159,357 samples, 0.03%)</title><rect x="1030.1" y="197" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1033.12" y="207.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,433,697 samples, 0.02%)</title><rect x="1141.8" y="357" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1144.81" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,705,597 samples, 0.02%)</title><rect x="696.5" y="453" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="699.53" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (32,278,906 samples, 0.39%)</title><rect x="1156.1" y="389" width="4.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1159.11" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (5,526,881 samples, 0.07%)</title><rect x="691.9" y="469" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="694.95" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (813,468 samples, 0.01%)</title><rect x="985.6" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="988.58" y="351.5" ></text>
</g>
<g >
<title>update_process_times (1,298,387 samples, 0.02%)</title><rect x="1029.0" y="69" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1031.97" y="79.5" ></text>
</g>
<g >
<title>operator new (7,652,352 samples, 0.09%)</title><rect x="1116.8" y="229" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1119.80" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,350,884 samples, 0.03%)</title><rect x="1148.7" y="229" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1151.75" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,429,751 samples, 0.02%)</title><rect x="978.9" y="357" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="981.93" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,513,574 samples, 0.02%)</title><rect x="1136.3" y="293" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.33" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (18,694,226 samples, 0.22%)</title><rect x="996.0" y="197" width="2.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="999.02" y="207.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (185,331,787 samples, 2.22%)</title><rect x="344.9" y="485" width="26.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="347.93" y="495.5" >s..</text>
</g>
<g >
<title>is_close_int (834,602 samples, 0.01%)</title><rect x="1005.8" y="325" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1008.75" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (33,988,323 samples, 0.41%)</title><rect x="371.1" y="501" width="4.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="374.11" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,775,409 samples, 0.02%)</title><rect x="1155.0" y="325" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1158.02" y="335.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,056,986 samples, 0.02%)</title><rect x="587.0" y="533" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="589.97" y="543.5" ></text>
</g>
<g >
<title>operator new (5,957,310 samples, 0.07%)</title><rect x="983.8" y="357" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="986.77" y="367.5" ></text>
</g>
<g >
<title>choose_next_point (1,823,658 samples, 0.02%)</title><rect x="1162.9" y="405" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1165.87" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (97,554,609 samples, 1.17%)</title><rect x="1108.9" y="293" width="13.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1111.88" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,335,296 samples, 0.06%)</title><rect x="1129.7" y="245" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1132.71" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,919,660 samples, 0.18%)</title><rect x="1083.9" y="325" width="2.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1086.89" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,705,597 samples, 0.02%)</title><rect x="696.5" y="469" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="699.53" y="479.5" ></text>
</g>
<g >
<title>malloc (12,050,146 samples, 0.14%)</title><rect x="1118.7" y="261" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1121.67" y="271.5" ></text>
</g>
<g >
<title>operator new (1,362,614 samples, 0.02%)</title><rect x="1126.6" y="101" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1129.62" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (820,721 samples, 0.01%)</title><rect x="978.6" y="325" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="981.59" y="335.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (1,505,649 samples, 0.02%)</title><rect x="427.6" y="533" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="430.58" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,079,121 samples, 0.01%)</title><rect x="695.3" y="517" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="698.30" y="527.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (972,928 samples, 0.01%)</title><rect x="84.9" y="437" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="87.85" y="447.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,426,726 samples, 0.08%)</title><rect x="1140.3" y="357" width="0.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1143.33" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,203,378 samples, 0.03%)</title><rect x="182.2" y="469" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="185.20" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (158,464,471 samples, 1.90%)</title><rect x="1039.7" y="309" width="22.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1042.66" y="319.5" >s..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (11,179,001 samples, 0.13%)</title><rect x="381.7" y="453" width="1.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="384.74" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (27,510,194 samples, 0.33%)</title><rect x="1033.9" y="213" width="3.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1036.87" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (33,242,604 samples, 0.40%)</title><rect x="1077.8" y="309" width="4.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1080.77" y="319.5" ></text>
</g>
<g >
<title>choose_next_point (611,111,146 samples, 7.32%)</title><rect x="310.0" y="549" width="86.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="312.96" y="559.5" >choose_nex..</text>
</g>
<g >
<title>decltype  (11,100,356 samples, 0.13%)</title><rect x="914.9" y="453" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="917.87" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,075,683 samples, 0.01%)</title><rect x="1009.0" y="309" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1011.96" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,247,305 samples, 0.05%)</title><rect x="1160.8" y="341" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1163.84" y="351.5" ></text>
</g>
<g >
<title>operator delete (2,176,025 samples, 0.03%)</title><rect x="1055.4" y="181" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1058.42" y="191.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,198,936 samples, 0.03%)</title><rect x="587.0" y="565" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="589.96" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,166,677 samples, 0.03%)</title><rect x="1118.3" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1121.29" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,578,166 samples, 0.02%)</title><rect x="1074.9" y="325" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1077.90" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (955,175 samples, 0.01%)</title><rect x="1014.0" y="277" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1017.00" y="287.5" ></text>
</g>
<g >
<title>decltype  (1,091,114 samples, 0.01%)</title><rect x="995.1" y="149" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="998.06" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,262,503 samples, 0.02%)</title><rect x="1168.1" y="549" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.08" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,282,918 samples, 0.04%)</title><rect x="1013.3" y="261" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1016.30" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,087,079 samples, 0.01%)</title><rect x="1167.8" y="533" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1170.79" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (76,421,676 samples, 0.91%)</title><rect x="925.8" y="389" width="10.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="928.78" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,696,464 samples, 0.04%)</title><rect x="1136.3" y="325" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1139.33" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,904,851 samples, 0.02%)</title><rect x="82.0" y="453" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="85.00" y="463.5" ></text>
</g>
<g >
<title>is_close_int (16,661,658 samples, 0.20%)</title><rect x="427.8" y="533" width="2.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="430.79" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (17,215,362 samples, 0.21%)</title><rect x="1149.2" y="325" width="2.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1152.24" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,500,855 samples, 0.02%)</title><rect x="1101.5" y="261" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1104.49" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (18,828,816 samples, 0.23%)</title><rect x="996.0" y="213" width="2.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="999.02" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,582,360 samples, 0.04%)</title><rect x="1085.0" y="309" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1088.00" y="319.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,443,066 samples, 0.07%)</title><rect x="998.9" y="325" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1001.85" y="335.5" ></text>
</g>
<g >
<title>operator delete (764,211 samples, 0.01%)</title><rect x="1067.0" y="165" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1070.01" y="175.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,648,072 samples, 0.02%)</title><rect x="1141.2" y="357" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1144.23" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,578,580 samples, 0.02%)</title><rect x="83.9" y="453" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="86.93" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (6,038,716 samples, 0.07%)</title><rect x="1166.8" y="549" width="0.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1169.84" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (969,069 samples, 0.01%)</title><rect x="1008.6" y="293" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1011.65" y="303.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,184,606 samples, 0.04%)</title><rect x="78.1" y="453" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="81.13" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,383,655 samples, 0.02%)</title><rect x="1089.2" y="325" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1092.23" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (8,389,077 samples, 0.10%)</title><rect x="523.4" y="437" width="1.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="526.36" y="447.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (11,565,611 samples, 0.14%)</title><rect x="83.4" y="501" width="1.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="86.45" y="511.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (1,799,397 samples, 0.02%)</title><rect x="1188.0" y="549" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1191.03" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (21,985,559 samples, 0.26%)</title><rect x="536.3" y="533" width="3.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="539.27" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (85,279,612 samples, 1.02%)</title><rect x="672.8" y="469" width="12.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="675.82" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,379,046 samples, 0.02%)</title><rect x="1006.7" y="277" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1009.66" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (22,610,026 samples, 0.27%)</title><rect x="1133.1" y="341" width="3.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1136.14" y="351.5" ></text>
</g>
<g >
<title>attempt7_cpp (8,353,622,600 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >attempt7_cpp</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (27,650,837 samples, 0.33%)</title><rect x="1132.4" y="389" width="3.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1135.43" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (826,528 samples, 0.01%)</title><rect x="1155.4" y="357" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1158.42" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,756,125 samples, 0.07%)</title><rect x="932.7" y="277" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="935.66" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (12,403,854 samples, 0.15%)</title><rect x="1156.2" y="341" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1159.18" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,314,271 samples, 0.05%)</title><rect x="689.2" y="437" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="692.19" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (2,290,792 samples, 0.03%)</title><rect x="84.7" y="485" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="87.66" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (5,294,303 samples, 0.06%)</title><rect x="1138.5" y="405" width="0.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1141.48" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (2,290,792 samples, 0.03%)</title><rect x="84.7" y="453" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="87.66" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (842,284 samples, 0.01%)</title><rect x="1092.4" y="341" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1095.40" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (43,515,988 samples, 0.52%)</title><rect x="1062.5" y="293" width="6.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1065.49" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,260,633 samples, 0.03%)</title><rect x="77.8" y="485" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="80.81" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (24,164,731 samples, 0.29%)</title><rect x="995.3" y="261" width="3.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="998.32" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,000,828 samples, 0.05%)</title><rect x="183.6" y="517" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="186.56" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,189,602 samples, 0.03%)</title><rect x="1181.9" y="549" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1184.91" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (3,696,464 samples, 0.04%)</title><rect x="1136.3" y="357" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1139.33" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (12,872,032 samples, 0.15%)</title><rect x="1152.9" y="357" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1155.93" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (5,835,803 samples, 0.07%)</title><rect x="1013.0" y="293" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1016.03" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,736,441 samples, 0.02%)</title><rect x="1161.7" y="405" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1164.69" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,387,336 samples, 0.02%)</title><rect x="1162.5" y="293" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1165.55" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (22,369,984 samples, 0.27%)</title><rect x="1034.6" y="197" width="3.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1037.56" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (946,886 samples, 0.01%)</title><rect x="193.7" y="533" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="196.72" y="543.5" ></text>
</g>
<g >
<title>cfree (1,722,900 samples, 0.02%)</title><rect x="949.9" y="277" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="952.89" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (13,871,944 samples, 0.17%)</title><rect x="1060.0" y="181" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1063.01" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,369,735 samples, 0.02%)</title><rect x="1130.6" y="341" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1133.63" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,470,474 samples, 0.02%)</title><rect x="924.6" y="357" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="927.60" y="367.5" ></text>
</g>
<g >
<title>malloc (15,852,107 samples, 0.19%)</title><rect x="1169.5" y="565" width="2.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1172.50" y="575.5" ></text>
</g>
<g >
<title>operator new (2,313,395 samples, 0.03%)</title><rect x="1151.9" y="197" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.90" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,303,858 samples, 0.02%)</title><rect x="973.7" y="277" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="976.69" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (52,445,381 samples, 0.63%)</title><rect x="375.9" y="533" width="7.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="378.91" y="543.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,335,204 samples, 0.03%)</title><rect x="1182.7" y="533" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1185.71" y="543.5" ></text>
</g>
<g >
<title>operator delete (62,224,265 samples, 0.74%)</title><rect x="457.8" y="549" width="8.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="460.81" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (64,219,989 samples, 0.77%)</title><rect x="1074.2" y="341" width="9.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1077.16" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,484,111 samples, 0.07%)</title><rect x="1082.5" y="325" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1085.46" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (46,416,022 samples, 0.56%)</title><rect x="580.2" y="501" width="6.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="583.15" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,219,786 samples, 0.01%)</title><rect x="1162.0" y="405" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1164.95" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (110,945,137 samples, 1.33%)</title><rect x="399.5" y="533" width="15.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="402.49" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,027,233 samples, 0.02%)</title><rect x="1118.3" y="181" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1121.31" y="191.5" ></text>
</g>
<g >
<title>malloc (2,754,349 samples, 0.03%)</title><rect x="1150.7" y="197" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1153.69" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,508,347 samples, 0.02%)</title><rect x="1014.0" y="293" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1016.98" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (33,242,604 samples, 0.40%)</title><rect x="1077.8" y="293" width="4.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1080.77" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (13,592,516 samples, 0.16%)</title><rect x="1060.1" y="117" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1063.05" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,079,622 samples, 0.01%)</title><rect x="80.4" y="501" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="83.36" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,184,606 samples, 0.04%)</title><rect x="78.1" y="485" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="81.13" y="495.5" ></text>
</g>
<g >
<title>decltype  (2,087,470 samples, 0.02%)</title><rect x="1059.4" y="85" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1062.36" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (12,403,854 samples, 0.15%)</title><rect x="1156.2" y="325" width="1.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1159.18" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (77,772,189 samples, 0.93%)</title><rect x="905.5" y="533" width="10.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="908.45" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,771,345 samples, 0.02%)</title><rect x="1154.7" y="357" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1157.75" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,705,597 samples, 0.02%)</title><rect x="696.5" y="485" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="699.53" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,952,571 samples, 0.05%)</title><rect x="1151.7" y="293" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1154.69" y="303.5" ></text>
</g>
<g >
<title>operator delete (1,506,160 samples, 0.02%)</title><rect x="1135.3" y="309" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1138.26" y="319.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (4,344,862 samples, 0.05%)</title><rect x="203.3" y="533" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="206.33" y="543.5" ></text>
</g>
<g >
<title>cfree (1,674,596 samples, 0.02%)</title><rect x="1060.1" y="69" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1063.13" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (91,531,362 samples, 1.10%)</title><rect x="985.9" y="357" width="12.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="988.86" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (941,699 samples, 0.01%)</title><rect x="955.3" y="389" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="958.26" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,944,773 samples, 0.12%)</title><rect x="192.4" y="549" width="1.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="195.45" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (10,972,025 samples, 0.13%)</title><rect x="385.9" y="453" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="388.86" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,508,347 samples, 0.02%)</title><rect x="1014.0" y="309" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1016.98" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (150,460,421 samples, 1.80%)</title><rect x="1016.5" y="261" width="21.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1019.50" y="271.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (7,401,374 samples, 0.09%)</title><rect x="840.4" y="533" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="843.43" y="543.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (5,471,229 samples, 0.07%)</title><rect x="192.9" y="533" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="195.95" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,978,387 samples, 0.04%)</title><rect x="1115.7" y="197" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1118.72" y="207.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (2,603,121 samples, 0.03%)</title><rect x="739.5" y="485" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="742.51" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (964,792 samples, 0.01%)</title><rect x="978.6" y="341" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="981.57" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (10,708,243 samples, 0.13%)</title><rect x="844.9" y="485" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="847.86" y="495.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,066,150 samples, 0.01%)</title><rect x="1161.8" y="373" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1164.78" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (7,401,374 samples, 0.09%)</title><rect x="840.4" y="485" width="1.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="843.43" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,986,841 samples, 0.04%)</title><rect x="1107.7" y="229" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1110.74" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,871,664 samples, 0.02%)</title><rect x="1162.5" y="357" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1165.55" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (8,625,852 samples, 0.10%)</title><rect x="1058.4" y="133" width="1.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1061.44" y="143.5" ></text>
</g>
<g >
<title>cfree (13,649,125 samples, 0.16%)</title><rect x="1047.5" y="181" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1050.55" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (10,952,669 samples, 0.13%)</title><rect x="865.8" y="533" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="868.82" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,335,010 samples, 0.03%)</title><rect x="1088.7" y="341" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1091.68" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,771,694 samples, 0.02%)</title><rect x="1162.3" y="357" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1165.30" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,999,632 samples, 0.10%)</title><rect x="1000.6" y="341" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1003.56" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,764,415 samples, 0.06%)</title><rect x="689.9" y="485" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="692.89" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (1,514,156 samples, 0.02%)</title><rect x="1168.4" y="533" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1171.39" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,028,510 samples, 0.02%)</title><rect x="1028.9" y="133" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1031.89" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,076,825 samples, 0.12%)</title><rect x="1106.7" y="277" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1109.74" y="287.5" ></text>
</g>
<g >
<title>get_inbetween_points (130,504,925 samples, 1.56%)</title><rect x="415.2" y="549" width="18.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="418.16" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (979,467 samples, 0.01%)</title><rect x="984.7" y="357" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="987.71" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,926,525 samples, 0.02%)</title><rect x="432.3" y="469" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="435.31" y="479.5" ></text>
</g>
<g >
<title>operator new (1,641,486 samples, 0.02%)</title><rect x="1106.2" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.20" y="287.5" ></text>
</g>
<g >
<title>cfree (2,042,238 samples, 0.02%)</title><rect x="582.8" y="421" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="585.80" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,506,290 samples, 0.02%)</title><rect x="431.1" y="485" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="434.07" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,290,317 samples, 0.02%)</title><rect x="705.2" y="485" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="708.24" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (2,851,714 samples, 0.03%)</title><rect x="549.3" y="533" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="552.29" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (23,869,179 samples, 0.29%)</title><rect x="977.9" y="373" width="3.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="980.89" y="383.5" ></text>
</g>
<g >
<title>std::abs (1,470,686 samples, 0.02%)</title><rect x="947.5" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="950.48" y="383.5" ></text>
</g>
<g >
<title>operator new (16,993,398 samples, 0.20%)</title><rect x="930.2" y="277" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="933.19" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,559,482 samples, 0.05%)</title><rect x="1149.3" y="213" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1152.30" y="223.5" ></text>
</g>
<g >
<title>cfree (1,501,703 samples, 0.02%)</title><rect x="1034.8" y="85" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1037.79" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,210,148 samples, 0.04%)</title><rect x="1067.8" y="149" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1070.79" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,291,203 samples, 0.10%)</title><rect x="904.3" y="533" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="907.28" y="543.5" ></text>
</g>
<g >
<title>main (1,755,412,308 samples, 21.01%)</title><rect x="916.4" y="517" width="248.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="919.45" y="527.5" >main</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (2,118,256 samples, 0.03%)</title><rect x="92.8" y="533" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="95.82" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (163,112,874 samples, 1.95%)</title><rect x="1108.2" y="357" width="23.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1111.17" y="367.5" >s..</text>
</g>
<g >
<title>hrtimer_interrupt (1,303,858 samples, 0.02%)</title><rect x="973.7" y="261" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="976.69" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,717,677 samples, 0.09%)</title><rect x="380.3" y="405" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="383.28" y="415.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,287,346 samples, 0.03%)</title><rect x="565.2" y="533" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="568.23" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (24,726,184 samples, 0.30%)</title><rect x="948.9" y="293" width="3.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="951.92" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,511,470 samples, 0.02%)</title><rect x="924.9" y="357" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="927.88" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,920,117 samples, 0.02%)</title><rect x="1144.3" y="197" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1147.26" y="207.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (6,157,825 samples, 0.07%)</title><rect x="585.8" y="469" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="588.84" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,667,307 samples, 0.02%)</title><rect x="1103.5" y="165" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1106.46" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (16,604,072 samples, 0.20%)</title><rect x="78.6" y="517" width="2.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="81.57" y="527.5" ></text>
</g>
<g >
<title>scheduler_tick (837,555 samples, 0.01%)</title><rect x="1101.3" y="117" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1104.31" y="127.5" ></text>
</g>
<g >
<title>cfree (1,638,959 samples, 0.02%)</title><rect x="1038.7" y="309" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1041.73" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (10,369,640 samples, 0.12%)</title><rect x="524.5" y="501" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="527.55" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (13,592,516 samples, 0.16%)</title><rect x="1060.1" y="165" width="1.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1063.05" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (7,401,374 samples, 0.09%)</title><rect x="840.4" y="517" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="843.43" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (974,556 samples, 0.01%)</title><rect x="525.7" y="469" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="528.72" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (97,554,609 samples, 1.17%)</title><rect x="1108.9" y="325" width="13.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1111.88" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,589,659 samples, 0.03%)</title><rect x="1155.0" y="357" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1158.00" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,369,885 samples, 0.03%)</title><rect x="1004.6" y="325" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1007.63" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (920,449 samples, 0.01%)</title><rect x="943.6" y="261" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="946.62" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,303,858 samples, 0.02%)</title><rect x="973.7" y="309" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="976.69" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (4,247,305 samples, 0.05%)</title><rect x="1160.8" y="357" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1163.84" y="367.5" ></text>
</g>
<g >
<title>cfree (62,803,292 samples, 0.75%)</title><rect x="1109.7" y="261" width="8.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1112.72" y="271.5" ></text>
</g>
<g >
<title>malloc (36,773,532 samples, 0.44%)</title><rect x="1050.2" y="181" width="5.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1053.23" y="191.5" ></text>
</g>
<g >
<title>malloc (829,714 samples, 0.01%)</title><rect x="1064.5" y="181" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1067.45" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (41,887,694 samples, 0.50%)</title><rect x="220.1" y="501" width="5.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="223.06" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,657,753 samples, 0.02%)</title><rect x="1015.8" y="325" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1018.81" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,418,727 samples, 0.08%)</title><rect x="1136.3" y="389" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1139.33" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,232,606 samples, 0.01%)</title><rect x="955.0" y="405" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="958.04" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,093,718 samples, 0.01%)</title><rect x="584.4" y="389" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="587.43" y="399.5" ></text>
</g>
<g >
<title>decltype  (10,538,417 samples, 0.13%)</title><rect x="224.5" y="453" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="227.49" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (20,495,995 samples, 0.25%)</title><rect x="1146.2" y="245" width="2.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.18" y="255.5" ></text>
</g>
<g >
<title>get_inbetween_points (10,519,840 samples, 0.13%)</title><rect x="1005.4" y="341" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1008.43" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (110,945,137 samples, 1.33%)</title><rect x="399.5" y="517" width="15.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="402.49" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (9,462,233 samples, 0.11%)</title><rect x="428.6" y="517" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="431.63" y="527.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (40,038,892 samples, 0.48%)</title><rect x="734.2" y="501" width="5.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="737.22" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,421,947 samples, 0.03%)</title><rect x="1163.3" y="389" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1166.30" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (959,311 samples, 0.01%)</title><rect x="1068.5" y="69" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1071.46" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,076,469 samples, 0.01%)</title><rect x="1189.8" y="533" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1192.85" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,379,046 samples, 0.02%)</title><rect x="1006.7" y="245" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1009.66" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,779,244 samples, 0.02%)</title><rect x="586.7" y="421" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="589.71" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,305,944 samples, 0.04%)</title><rect x="1129.0" y="229" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1132.00" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (6,176,616 samples, 0.07%)</title><rect x="432.7" y="533" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="435.68" y="543.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (1,234,508 samples, 0.01%)</title><rect x="943.8" y="389" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="946.81" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (969,069 samples, 0.01%)</title><rect x="1008.6" y="325" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1011.65" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (3,109,658 samples, 0.04%)</title><rect x="1086.8" y="277" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1089.77" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,203,378 samples, 0.03%)</title><rect x="182.2" y="485" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="185.20" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (10,722,218 samples, 0.13%)</title><rect x="1158.1" y="309" width="1.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1161.09" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (810,497 samples, 0.01%)</title><rect x="922.7" y="341" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="925.68" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,219,786 samples, 0.01%)</title><rect x="1162.0" y="421" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1164.95" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (20,498,709 samples, 0.25%)</title><rect x="517.7" y="485" width="2.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="520.71" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (4,272,580 samples, 0.05%)</title><rect x="1032.7" y="117" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1035.74" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (20,498,709 samples, 0.25%)</title><rect x="517.7" y="501" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="520.71" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (1,164,516 samples, 0.01%)</title><rect x="877.0" y="517" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="879.99" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,774,821 samples, 0.02%)</title><rect x="590.3" y="437" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="593.26" y="447.5" ></text>
</g>
<g >
<title>operator delete (37,334,316 samples, 0.45%)</title><rect x="1171.7" y="565" width="5.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1174.74" y="575.5" ></text>
</g>
<g >
<title>cfree (3,235,333 samples, 0.04%)</title><rect x="1064.0" y="181" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1066.99" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (820,721 samples, 0.01%)</title><rect x="978.6" y="293" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="981.59" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (20,498,709 samples, 0.25%)</title><rect x="517.7" y="453" width="2.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="520.71" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (130,625,110 samples, 1.56%)</title><rect x="512.6" y="533" width="18.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="515.55" y="543.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,952,571 samples, 0.05%)</title><rect x="1151.7" y="213" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1154.69" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (46,076,547 samples, 0.55%)</title><rect x="1123.0" y="309" width="6.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1125.96" y="319.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (2,437,424 samples, 0.03%)</title><rect x="727.1" y="533" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="730.07" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (13,752,557 samples, 0.16%)</title><rect x="406.9" y="485" width="2.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="409.93" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,352,551 samples, 0.02%)</title><rect x="961.8" y="309" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="964.84" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (5,534,535 samples, 0.07%)</title><rect x="1091.6" y="357" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1094.62" y="367.5" ></text>
</g>
<g >
<title>operator new (8,161,522 samples, 0.10%)</title><rect x="583.5" y="421" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="586.51" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,556,381 samples, 0.03%)</title><rect x="578.1" y="533" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="581.15" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (2,185,851 samples, 0.03%)</title><rect x="867.4" y="533" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="870.37" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (20,498,709 samples, 0.25%)</title><rect x="517.7" y="517" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="520.71" y="527.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (10,095,829 samples, 0.12%)</title><rect x="979.8" y="341" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="982.84" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (806,004 samples, 0.01%)</title><rect x="952.6" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="955.57" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,348,469 samples, 0.02%)</title><rect x="84.2" y="469" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="87.16" y="479.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (8,437,941 samples, 0.10%)</title><rect x="413.6" y="437" width="1.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="416.62" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,497,266 samples, 0.02%)</title><rect x="1148.5" y="197" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1151.50" y="207.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,230,628 samples, 0.01%)</title><rect x="995.0" y="165" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="998.04" y="175.5" ></text>
</g>
<g >
<title>operator new (2,745,905 samples, 0.03%)</title><rect x="1034.1" y="197" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1037.12" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,219,786 samples, 0.01%)</title><rect x="1162.0" y="437" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1164.95" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (7,435,028 samples, 0.09%)</title><rect x="584.7" y="341" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="587.72" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,722,795 samples, 0.04%)</title><rect x="1133.8" y="293" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.78" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,794,119 samples, 0.02%)</title><rect x="1091.3" y="341" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1094.31" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (10,708,243 samples, 0.13%)</title><rect x="844.9" y="453" width="1.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="847.86" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (14,241,579 samples, 0.17%)</title><rect x="922.8" y="389" width="2.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="925.80" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,952,571 samples, 0.05%)</title><rect x="1151.7" y="261" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1154.69" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (808,000 samples, 0.01%)</title><rect x="1125.9" y="181" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1128.86" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,989,805 samples, 0.08%)</title><rect x="1005.9" y="309" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1008.87" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,376,782 samples, 0.06%)</title><rect x="848.5" y="437" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="851.48" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (5,921,807 samples, 0.07%)</title><rect x="1069.5" y="373" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1072.46" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (11,912,645 samples, 0.14%)</title><rect x="76.9" y="533" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="79.89" y="543.5" ></text>
</g>
<g >
<title>get_inbetween_points (6,304,302 samples, 0.08%)</title><rect x="1168.6" y="565" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1171.61" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (820,721 samples, 0.01%)</title><rect x="978.6" y="277" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="981.59" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (10,316,348 samples, 0.12%)</title><rect x="380.3" y="485" width="1.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="383.28" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (16,794,971 samples, 0.20%)</title><rect x="1149.3" y="309" width="2.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1152.30" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,247,305 samples, 0.05%)</title><rect x="1160.8" y="373" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1163.84" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (11,392,248 samples, 0.14%)</title><rect x="387.4" y="453" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="390.41" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,225,871 samples, 0.03%)</title><rect x="1059.3" y="101" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1062.34" y="111.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (814,127 samples, 0.01%)</title><rect x="936.4" y="325" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="939.44" y="335.5" ></text>
</g>
<g >
<title>operator delete (1,823,540 samples, 0.02%)</title><rect x="954.5" y="405" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="957.49" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,071,408 samples, 0.02%)</title><rect x="1101.1" y="181" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1104.14" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,900,507 samples, 0.02%)</title><rect x="1107.7" y="165" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1110.74" y="175.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,456,879 samples, 0.04%)</title><rect x="1085.5" y="309" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1088.51" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,500,855 samples, 0.02%)</title><rect x="1101.5" y="213" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1104.49" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (964,792 samples, 0.01%)</title><rect x="978.6" y="357" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="981.57" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (23,586,466 samples, 0.28%)</title><rect x="687.2" y="533" width="3.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="690.23" y="543.5" ></text>
</g>
<g >
<title>malloc (31,354,537 samples, 0.38%)</title><rect x="1024.8" y="197" width="4.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1027.77" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,531,310 samples, 0.04%)</title><rect x="409.1" y="453" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="412.11" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,220,350 samples, 0.01%)</title><rect x="1068.7" y="165" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1071.71" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (959,311 samples, 0.01%)</title><rect x="1068.5" y="85" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1071.46" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (2,153,416 samples, 0.03%)</title><rect x="1161.6" y="421" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1164.65" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (2,764,501 samples, 0.03%)</title><rect x="739.1" y="485" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="742.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (35,530,768 samples, 0.43%)</title><rect x="1183.7" y="565" width="5.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1186.68" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,618,232 samples, 0.02%)</title><rect x="583.1" y="389" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="586.15" y="399.5" ></text>
</g>
<g >
<title>get_inbetween_points (940,664 samples, 0.01%)</title><rect x="309.7" y="533" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="312.73" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,226,024 samples, 0.01%)</title><rect x="947.3" y="325" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="950.27" y="335.5" ></text>
</g>
<g >
<title>task_tick_fair (951,939 samples, 0.01%)</title><rect x="1029.0" y="37" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1032.02" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,952,571 samples, 0.05%)</title><rect x="1151.7" y="245" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1154.69" y="255.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (16,743,710 samples, 0.20%)</title><rect x="684.9" y="485" width="2.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="687.87" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (2,598,671 samples, 0.03%)</title><rect x="381.4" y="437" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="384.37" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,004,506 samples, 0.01%)</title><rect x="952.1" y="213" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="955.12" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,719,604 samples, 0.07%)</title><rect x="1159.6" y="357" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1162.60" y="367.5" ></text>
</g>
<g >
<title>operator new (969,778 samples, 0.01%)</title><rect x="1006.7" y="213" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1009.72" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,314,271 samples, 0.05%)</title><rect x="689.2" y="405" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="692.19" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (4,214,998 samples, 0.05%)</title><rect x="1159.7" y="309" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1162.70" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,484,107 samples, 0.03%)</title><rect x="1129.1" y="213" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1132.11" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,520,203 samples, 0.02%)</title><rect x="1163.3" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1166.30" y="383.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (810,650 samples, 0.01%)</title><rect x="583.3" y="325" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="586.26" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,696,464 samples, 0.04%)</title><rect x="1136.3" y="341" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1139.33" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (13,666,651 samples, 0.16%)</title><rect x="739.9" y="485" width="1.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="742.88" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (10,246,712 samples, 0.12%)</title><rect x="852.3" y="517" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="855.28" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,642,637 samples, 0.02%)</title><rect x="66.7" y="501" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="69.69" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (3,811,049 samples, 0.05%)</title><rect x="736.3" y="453" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="739.27" y="463.5" ></text>
</g>
<g >
<title>cfree (15,997,685 samples, 0.19%)</title><rect x="1043.7" y="197" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1046.68" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (22,085,725 samples, 0.26%)</title><rect x="1034.6" y="117" width="3.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1037.60" y="127.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (941,699 samples, 0.01%)</title><rect x="955.3" y="373" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="958.26" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,087,079 samples, 0.01%)</title><rect x="1167.8" y="549" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1170.79" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,335,684 samples, 0.03%)</title><rect x="1144.2" y="277" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1147.20" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (19,551,469 samples, 0.23%)</title><rect x="1083.2" y="357" width="2.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1086.24" y="367.5" ></text>
</g>
<g >
<title>[[stack]] (1,528,966,449 samples, 18.30%)</title><rect x="10.0" y="565" width="216.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >[[stack]]</text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,339,602 samples, 0.02%)</title><rect x="1085.3" y="277" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1088.32" y="287.5" ></text>
</g>
<g >
<title>operator delete (151,670,047 samples, 1.82%)</title><rect x="783.2" y="549" width="21.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="786.24" y="559.5" >o..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (129,830,019 samples, 1.55%)</title><rect x="981.3" y="373" width="18.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="984.28" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (104,726,845 samples, 1.25%)</title><rect x="1093.4" y="293" width="14.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1096.37" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (6,050,352 samples, 0.07%)</title><rect x="431.5" y="485" width="0.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="434.46" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,653,394 samples, 0.06%)</title><rect x="1142.9" y="277" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1145.92" y="287.5" ></text>
</g>
<g >
<title>round@plt (1,248,960 samples, 0.01%)</title><rect x="174.4" y="549" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="177.39" y="559.5" ></text>
</g>
<g >
<title>malloc (291,769,258 samples, 3.49%)</title><rect x="742.0" y="549" width="41.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="745.03" y="559.5" >mal..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (5,835,803 samples, 0.07%)</title><rect x="1013.0" y="309" width="0.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1016.03" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (4,255,201 samples, 0.05%)</title><rect x="1010.1" y="341" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1013.08" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,774,821 samples, 0.02%)</title><rect x="590.3" y="453" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="593.26" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (5,534,535 samples, 0.07%)</title><rect x="1091.6" y="341" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1094.62" y="351.5" ></text>
</g>
<g >
<title>operator new (957,423 samples, 0.01%)</title><rect x="1103.2" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1106.17" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (2,449,615 samples, 0.03%)</title><rect x="80.6" y="469" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="83.57" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (9,446,146 samples, 0.11%)</title><rect x="389.7" y="469" width="1.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="392.72" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,692,498 samples, 0.03%)</title><rect x="694.9" y="533" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="697.92" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,027,737 samples, 0.05%)</title><rect x="1122.1" y="245" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1125.09" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (12,812,216 samples, 0.15%)</title><rect x="407.1" y="453" width="1.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="410.07" y="463.5" ></text>
</g>
<g >
<title>malloc (975,243 samples, 0.01%)</title><rect x="1160.0" y="261" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1163.04" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,776,983 samples, 0.02%)</title><rect x="1004.4" y="261" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1007.38" y="271.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (16,743,710 samples, 0.20%)</title><rect x="684.9" y="501" width="2.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="687.87" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,204,802 samples, 0.01%)</title><rect x="1135.7" y="261" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1138.72" y="271.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (3,506,171 samples, 0.04%)</title><rect x="202.8" y="533" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="205.83" y="543.5" ></text>
</g>
<g >
<title>cfree (3,141,006 samples, 0.04%)</title><rect x="1129.7" y="229" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1132.75" y="239.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (1,107,564 samples, 0.01%)</title><rect x="1155.9" y="341" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1158.93" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,443,887 samples, 0.03%)</title><rect x="925.1" y="373" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="928.10" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,771,345 samples, 0.02%)</title><rect x="1154.7" y="373" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1157.75" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,204,802 samples, 0.01%)</title><rect x="1135.7" y="277" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1138.72" y="287.5" ></text>
</g>
<g >
<title>is_close_int (2,331,811 samples, 0.03%)</title><rect x="1091.2" y="357" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1094.23" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,525,899 samples, 0.07%)</title><rect x="850.2" y="501" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="853.22" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,792,479 samples, 0.02%)</title><rect x="392.9" y="533" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="395.85" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (10,316,348 samples, 0.12%)</title><rect x="380.3" y="469" width="1.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="383.28" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (7,435,028 samples, 0.09%)</title><rect x="584.7" y="309" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="587.72" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (20,113,180 samples, 0.24%)</title><rect x="393.4" y="533" width="2.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="396.44" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (2,423,001 samples, 0.03%)</title><rect x="79.3" y="469" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="82.31" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (954,812 samples, 0.01%)</title><rect x="1043.9" y="181" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1046.91" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (29,063,456 samples, 0.35%)</title><rect x="690.6" y="517" width="4.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="693.56" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,117,785 samples, 0.01%)</title><rect x="952.3" y="277" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="955.26" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,808,689 samples, 0.02%)</title><rect x="1148.8" y="149" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1151.82" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (13,820,712 samples, 0.17%)</title><rect x="1139.5" y="421" width="2.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1142.52" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,688,872 samples, 0.18%)</title><rect x="1123.9" y="229" width="2.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1126.90" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (790,421 samples, 0.01%)</title><rect x="1135.9" y="309" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1138.91" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (2,354,740 samples, 0.03%)</title><rect x="393.1" y="533" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="396.11" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (13,820,712 samples, 0.17%)</title><rect x="1139.5" y="405" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1142.52" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,782,095 samples, 0.02%)</title><rect x="1126.6" y="197" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1129.59" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,626,924 samples, 0.02%)</title><rect x="925.1" y="341" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="928.12" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,295,710 samples, 0.03%)</title><rect x="584.1" y="389" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="587.11" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,877,979 samples, 0.07%)</title><rect x="1181.5" y="565" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1184.51" y="575.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,973,484 samples, 0.05%)</title><rect x="1068.7" y="181" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1071.71" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (6,176,616 samples, 0.07%)</title><rect x="432.7" y="501" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="435.68" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (3,670,432 samples, 0.04%)</title><rect x="392.3" y="485" width="0.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="395.34" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,779,244 samples, 0.02%)</title><rect x="586.7" y="501" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="589.71" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (11,823,889 samples, 0.14%)</title><rect x="389.4" y="485" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="392.38" y="495.5" ></text>
</g>
<g >
<title>choose_next_point (126,820,973 samples, 1.52%)</title><rect x="1071.5" y="373" width="17.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1074.51" y="383.5" ></text>
</g>
<g >
<title>operator new (3,067,828 samples, 0.04%)</title><rect x="1128.0" y="245" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.99" y="255.5" ></text>
</g>
<g >
<title>operator new (1,347,663 samples, 0.02%)</title><rect x="1136.7" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.67" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (255,216,536 samples, 3.06%)</title><rect x="503.3" y="549" width="36.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="506.32" y="559.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (4,870,375 samples, 0.06%)</title><rect x="1162.1" y="421" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1165.13" y="431.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (4,050,476 samples, 0.05%)</title><rect x="726.5" y="533" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="729.50" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (27,900,753 samples, 0.33%)</title><rect x="729.3" y="517" width="4.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="732.32" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (150,460,421 samples, 1.80%)</title><rect x="1016.5" y="229" width="21.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1019.50" y="239.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,848,219 samples, 0.02%)</title><rect x="83.9" y="485" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="86.89" y="495.5" ></text>
</g>
<g >
<title>malloc (1,421,374 samples, 0.02%)</title><rect x="1044.3" y="181" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1047.34" y="191.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,745,486 samples, 0.09%)</title><rect x="923.5" y="325" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="926.51" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (954,943 samples, 0.01%)</title><rect x="1101.5" y="133" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1104.55" y="143.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,171,919 samples, 0.04%)</title><rect x="1167.2" y="501" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1170.18" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,223,862 samples, 0.01%)</title><rect x="1137.0" y="277" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1139.99" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,915,255 samples, 0.02%)</title><rect x="1121.1" y="261" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1124.09" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (54,791,139 samples, 0.66%)</title><rect x="1144.6" y="405" width="7.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1147.59" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (8,437,941 samples, 0.10%)</title><rect x="413.6" y="421" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="416.62" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,435,291 samples, 0.08%)</title><rect x="851.4" y="517" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="854.37" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (48,438,239 samples, 0.58%)</title><rect x="698.6" y="533" width="6.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="701.58" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (289,547,029 samples, 3.47%)</title><rect x="330.2" y="501" width="40.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="333.21" y="511.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (151,177,950 samples, 1.81%)</title><rect x="565.6" y="549" width="21.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="568.61" y="559.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (1,582,850 samples, 0.02%)</title><rect x="741.8" y="533" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="744.81" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (491,221,819 samples, 5.88%)</title><rect x="999.9" y="373" width="69.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1002.88" y="383.5" >std::_R..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,484,111 samples, 0.07%)</title><rect x="1082.5" y="293" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1085.46" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,667,307 samples, 0.02%)</title><rect x="1103.5" y="245" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1106.46" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (10,708,243 samples, 0.13%)</title><rect x="844.9" y="469" width="1.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="847.86" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (947,738 samples, 0.01%)</title><rect x="947.3" y="293" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="950.29" y="303.5" ></text>
</g>
<g >
<title>operator new (1,425,512 samples, 0.02%)</title><rect x="977.6" y="373" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="980.61" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,076,469 samples, 0.01%)</title><rect x="1189.8" y="517" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1192.85" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (8,389,077 samples, 0.10%)</title><rect x="523.4" y="485" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="526.36" y="495.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (12,444,168 samples, 0.15%)</title><rect x="914.7" y="469" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="917.68" y="479.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,086,334 samples, 0.01%)</title><rect x="1108.0" y="213" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1111.01" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,619,173 samples, 0.06%)</title><rect x="179.4" y="469" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="182.35" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (8,207,656 samples, 0.10%)</title><rect x="410.6" y="469" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="413.56" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (5,177,887 samples, 0.06%)</title><rect x="738.0" y="469" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="740.97" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (4,870,375 samples, 0.06%)</title><rect x="1162.1" y="405" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1165.13" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,234,219 samples, 0.01%)</title><rect x="1068.0" y="53" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1070.99" y="63.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (808,000 samples, 0.01%)</title><rect x="1125.9" y="197" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1128.86" y="207.5" ></text>
</g>
<g >
<title>operator new (2,427,830 samples, 0.03%)</title><rect x="1138.7" y="293" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1141.69" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,501,868 samples, 0.02%)</title><rect x="309.5" y="501" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="312.48" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,519,734 samples, 0.02%)</title><rect x="864.9" y="533" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="867.89" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (969,069 samples, 0.01%)</title><rect x="1008.6" y="277" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1011.65" y="287.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (810,650 samples, 0.01%)</title><rect x="583.3" y="341" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="586.26" y="351.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (828,647 samples, 0.01%)</title><rect x="1168.5" y="517" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1171.49" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (41,697,838 samples, 0.50%)</title><rect x="1095.6" y="261" width="5.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1098.60" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (6,399,981 samples, 0.08%)</title><rect x="1058.4" y="101" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1061.44" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,374,036 samples, 0.04%)</title><rect x="951.8" y="261" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="954.78" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,876,345 samples, 0.02%)</title><rect x="1004.7" y="293" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1007.70" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (58,060,946 samples, 0.70%)</title><rect x="578.5" y="533" width="8.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="581.51" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (4,523,197 samples, 0.05%)</title><rect x="1087.2" y="293" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1090.21" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,063,304 samples, 0.04%)</title><rect x="1122.2" y="229" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1125.22" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (12,872,032 samples, 0.15%)</title><rect x="1152.9" y="373" width="1.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1155.93" y="383.5" ></text>
</g>
<g >
<title>operator new (9,630,960 samples, 0.12%)</title><rect x="1044.5" y="181" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1047.54" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (972,939 samples, 0.01%)</title><rect x="1132.0" y="357" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1135.04" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,782,095 samples, 0.02%)</title><rect x="1126.6" y="229" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1129.59" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,083,865 samples, 0.01%)</title><rect x="1162.0" y="373" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1164.97" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (91,140,864 samples, 1.09%)</title><rect x="985.9" y="277" width="12.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="988.86" y="287.5" ></text>
</g>
<g >
<title>choose_next_point (22,236,582 samples, 0.27%)</title><rect x="1002.2" y="341" width="3.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1005.25" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,079,121 samples, 0.01%)</title><rect x="695.3" y="533" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="698.30" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (820,721 samples, 0.01%)</title><rect x="978.6" y="229" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="981.59" y="239.5" ></text>
</g>
<g >
<title>operator delete (1,645,654 samples, 0.02%)</title><rect x="979.3" y="341" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="982.31" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (5,053,124 samples, 0.06%)</title><rect x="79.7" y="453" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="82.65" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,027,233 samples, 0.02%)</title><rect x="1118.3" y="229" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1121.31" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,242,758 samples, 0.03%)</title><rect x="1085.0" y="261" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1088.00" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (901,744 samples, 0.01%)</title><rect x="1163.5" y="373" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1166.52" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (10,972,025 samples, 0.13%)</title><rect x="385.9" y="469" width="1.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="388.86" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,417,133 samples, 0.03%)</title><rect x="1088.3" y="341" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1091.34" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (61,652,042 samples, 0.74%)</title><rect x="217.3" y="533" width="8.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="220.27" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (945,199 samples, 0.01%)</title><rect x="1054.8" y="117" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1057.76" y="127.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (80,071,040 samples, 0.96%)</title><rect x="403.9" y="501" width="11.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="406.85" y="511.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (10,722,218 samples, 0.13%)</title><rect x="1158.1" y="293" width="1.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1161.09" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (22,078,990 samples, 0.26%)</title><rect x="1141.5" y="421" width="3.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1144.47" y="431.5" ></text>
</g>
<g >
<title>decltype  (2,603,121 samples, 0.03%)</title><rect x="739.5" y="469" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="742.51" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,926,525 samples, 0.02%)</title><rect x="432.3" y="453" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="435.31" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (723,600 samples, 0.01%)</title><rect x="952.1" y="181" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="955.12" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (974,556 samples, 0.01%)</title><rect x="525.7" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="528.72" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (4,973,459 samples, 0.06%)</title><rect x="689.2" y="469" width="0.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="692.19" y="479.5" ></text>
</g>
<g >
<title>decltype  (1,222,602 samples, 0.01%)</title><rect x="1037.8" y="245" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1040.76" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,387,336 samples, 0.02%)</title><rect x="1162.5" y="261" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1165.55" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (6,230,984 samples, 0.07%)</title><rect x="692.7" y="453" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="695.73" y="463.5" ></text>
</g>
<g >
<title>operator new (997,602 samples, 0.01%)</title><rect x="979.5" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="982.54" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (20,495,995 samples, 0.25%)</title><rect x="1146.2" y="309" width="2.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1149.18" y="319.5" ></text>
</g>
<g >
<title>decltype  (5,875,695 samples, 0.07%)</title><rect x="585.9" y="453" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="588.88" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,782,095 samples, 0.02%)</title><rect x="1126.6" y="165" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1129.59" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (4,214,998 samples, 0.05%)</title><rect x="1159.7" y="293" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1162.70" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,080,602 samples, 0.01%)</title><rect x="1163.1" y="373" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1166.15" y="383.5" ></text>
</g>
</g>
</svg>
