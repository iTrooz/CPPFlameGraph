<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,178,753 samples, 0.01%)</title><rect x="693.1" y="325" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="696.11" y="335.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,668,367 samples, 0.02%)</title><rect x="376.9" y="373" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="379.94" y="383.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,081,090 samples, 0.01%)</title><rect x="808.7" y="117" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="811.72" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,798,253 samples, 0.05%)</title><rect x="742.1" y="213" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="745.06" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,387,942 samples, 0.02%)</title><rect x="425.3" y="373" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="428.25" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,019,956 samples, 0.19%)</title><rect x="503.7" y="421" width="2.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="506.72" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (1,831,185 samples, 0.02%)</title><rect x="885.7" y="309" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="888.73" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (142,825,557 samples, 1.79%)</title><rect x="789.8" y="229" width="21.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="792.84" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (439,668,347 samples, 5.52%)</title><rect x="747.9" y="405" width="65.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="750.92" y="415.5" >std::se..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (180,767,650 samples, 2.27%)</title><rect x="339.6" y="389" width="26.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="342.58" y="399.5" >a..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (174,309,034 samples, 2.19%)</title><rect x="762.1" y="293" width="25.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="765.14" y="303.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,245,361 samples, 0.02%)</title><rect x="903.9" y="181" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="906.87" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,387,942 samples, 0.02%)</title><rect x="425.3" y="421" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="428.25" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,569,695 samples, 0.07%)</title><rect x="811.4" y="261" width="0.8" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="814.40" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (11,241,787 samples, 0.14%)</title><rect x="809.3" y="149" width="1.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="812.33" y="159.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (9,768,928 samples, 0.12%)</title><rect x="725.5" y="325" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="728.46" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (4,274,102 samples, 0.05%)</title><rect x="80.0" y="389" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="82.96" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (46,617,630 samples, 0.59%)</title><rect x="887.1" y="373" width="6.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="890.10" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (4,995,902 samples, 0.06%)</title><rect x="936.6" y="421" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="939.55" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (34,007,817 samples, 0.43%)</title><rect x="366.4" y="437" width="5.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="369.36" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (982,901 samples, 0.01%)</title><rect x="885.5" y="341" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="888.54" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,809,815 samples, 0.02%)</title><rect x="851.4" y="357" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="854.44" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (15,019,956 samples, 0.19%)</title><rect x="503.7" y="437" width="2.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="506.72" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (696,588 samples, 0.01%)</title><rect x="672.3" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="675.25" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,238,159 samples, 0.04%)</title><rect x="864.5" y="309" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="867.50" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (89,559,845 samples, 1.12%)</title><rect x="851.7" y="373" width="13.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="854.71" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,433,100 samples, 0.02%)</title><rect x="181.8" y="421" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="184.78" y="431.5" ></text>
</g>
<g >
<title>main (833,528 samples, 0.01%)</title><rect x="622.2" y="453" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="625.15" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,474,358 samples, 0.02%)</title><rect x="984.0" y="389" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="986.96" y="399.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (843,857 samples, 0.01%)</title><rect x="1189.9" y="437" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1192.87" y="447.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,544,584 samples, 0.02%)</title><rect x="932.5" y="373" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="935.49" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (1,267,781 samples, 0.02%)</title><rect x="840.6" y="357" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="843.61" y="367.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,056,430 samples, 0.01%)</title><rect x="984.0" y="325" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="987.00" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (48,048,389 samples, 0.60%)</title><rect x="894.0" y="357" width="7.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="897.01" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (690,840 samples, 0.01%)</title><rect x="985.2" y="245" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="988.16" y="255.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (831,040 samples, 0.01%)</title><rect x="825.5" y="213" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="828.52" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,222,842 samples, 0.03%)</title><rect x="686.1" y="357" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="689.07" y="367.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (7,506,191 samples, 0.09%)</title><rect x="386.0" y="469" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="388.98" y="479.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (32,320,650 samples, 0.41%)</title><rect x="943.5" y="437" width="4.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="946.49" y="447.5" ></text>
</g>
<g >
<title>operator new (7,753,610 samples, 0.10%)</title><rect x="578.4" y="357" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="581.40" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,659,367 samples, 0.02%)</title><rect x="945.6" y="405" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="948.56" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,181,335 samples, 0.09%)</title><rect x="579.5" y="357" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="582.55" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (694,841 samples, 0.01%)</title><rect x="985.7" y="405" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="988.70" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,408,006 samples, 0.02%)</title><rect x="740.1" y="229" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="743.08" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (1,239,927 samples, 0.02%)</title><rect x="426.3" y="421" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="429.30" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,365,956 samples, 0.02%)</title><rect x="853.8" y="293" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="856.77" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (37,294,970 samples, 0.47%)</title><rect x="1156.7" y="421" width="5.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1159.68" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,810,646 samples, 0.07%)</title><rect x="856.8" y="325" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="859.81" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (701,810 samples, 0.01%)</title><rect x="704.0" y="229" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="707.01" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (2,383,643 samples, 0.03%)</title><rect x="854.3" y="341" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="857.29" y="351.5" ></text>
</g>
<g >
<title>choose_next_point (833,528 samples, 0.01%)</title><rect x="622.2" y="421" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="625.15" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (21,253,554 samples, 0.27%)</title><rect x="743.6" y="181" width="3.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="746.57" y="191.5" ></text>
</g>
<g >
<title>choose_next_point (1,638,051,389 samples, 20.56%)</title><rect x="661.8" y="453" width="242.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="664.81" y="463.5" >choose_next_point</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,971,420 samples, 0.06%)</title><rect x="944.7" y="373" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="947.70" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (20,878,462 samples, 0.26%)</title><rect x="930.2" y="437" width="3.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="933.25" y="447.5" ></text>
</g>
<g >
<title>decltype  (697,936 samples, 0.01%)</title><rect x="1189.9" y="405" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.89" y="415.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (16,733,424 samples, 0.21%)</title><rect x="188.7" y="453" width="2.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="191.74" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (891,838 samples, 0.01%)</title><rect x="863.8" y="69" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="866.80" y="79.5" ></text>
</g>
<g >
<title>gen_all_points (15,321,516 samples, 0.19%)</title><rect x="845.5" y="421" width="2.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="848.55" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (8,030,478 samples, 0.10%)</title><rect x="380.8" y="405" width="1.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="383.78" y="415.5" ></text>
</g>
<g >
<title>decltype  (1,587,981 samples, 0.02%)</title><rect x="408.5" y="405" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="411.46" y="415.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (16,733,424 samples, 0.21%)</title><rect x="188.7" y="437" width="2.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="191.74" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,345,781 samples, 0.04%)</title><rect x="578.9" y="325" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="581.91" y="335.5" ></text>
</g>
<g >
<title>cfree (1,370,747 samples, 0.02%)</title><rect x="672.4" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="675.36" y="271.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,056,430 samples, 0.01%)</title><rect x="984.0" y="341" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="987.00" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,507,387 samples, 0.04%)</title><rect x="402.7" y="405" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="405.68" y="415.5" ></text>
</g>
<g >
<title>choose_next_point (1,067,888 samples, 0.01%)</title><rect x="622.0" y="421" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="624.99" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (11,241,787 samples, 0.14%)</title><rect x="809.3" y="101" width="1.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="812.33" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,113,821 samples, 0.01%)</title><rect x="844.9" y="277" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="847.92" y="287.5" ></text>
</g>
<g >
<title>malloc (1,983,743 samples, 0.02%)</title><rect x="744.1" y="133" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="747.13" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (9,959,598 samples, 0.13%)</title><rect x="1121.7" y="485" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1124.65" y="495.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,891,789 samples, 0.07%)</title><rect x="76.4" y="421" width="0.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="79.43" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,668,171 samples, 0.02%)</title><rect x="939.5" y="405" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="942.51" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (9,736,631 samples, 0.12%)</title><rect x="79.2" y="437" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="82.15" y="447.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,470,636 samples, 0.03%)</title><rect x="560.0" y="469" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="562.97" y="479.5" ></text>
</g>
<g >
<title>get_inbetween_points (19,075,483 samples, 0.24%)</title><rect x="814.4" y="373" width="2.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="817.36" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (46,617,630 samples, 0.59%)</title><rect x="887.1" y="357" width="6.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="890.10" y="367.5" ></text>
</g>
<g >
<title>operator delete (1,926,913 samples, 0.02%)</title><rect x="690.9" y="389" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="693.87" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (968,879 samples, 0.01%)</title><rect x="809.4" y="69" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="812.37" y="79.5" ></text>
</g>
<g >
<title>cfree (1,821,447 samples, 0.02%)</title><rect x="768.0" y="213" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="771.02" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (6,641,755 samples, 0.08%)</title><rect x="935.3" y="405" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="938.30" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,473,329 samples, 0.02%)</title><rect x="718.7" y="261" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="721.67" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,207,637 samples, 0.03%)</title><rect x="1189.7" y="469" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1192.67" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (22,590,043 samples, 0.28%)</title><rect x="668.7" y="277" width="3.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="671.65" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (891,838 samples, 0.01%)</title><rect x="863.8" y="117" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="866.80" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (51,152,730 samples, 0.64%)</title><rect x="818.1" y="309" width="7.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="821.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,163,604 samples, 0.13%)</title><rect x="1188.5" y="501" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1191.49" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (22,509,306 samples, 0.28%)</title><rect x="901.1" y="357" width="3.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="904.12" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (14,828,579 samples, 0.19%)</title><rect x="675.9" y="293" width="2.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="678.86" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (4,232,827 samples, 0.05%)</title><rect x="693.7" y="357" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="696.67" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (21,253,554 samples, 0.27%)</title><rect x="743.6" y="229" width="3.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="746.57" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (4,736,688 samples, 0.06%)</title><rect x="425.6" y="421" width="0.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="428.60" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,449,814 samples, 0.07%)</title><rect x="781.6" y="133" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="784.62" y="143.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,544,584 samples, 0.02%)</title><rect x="932.5" y="389" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="935.49" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,648,061 samples, 0.03%)</title><rect x="978.9" y="421" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="981.86" y="431.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (3,678,760 samples, 0.05%)</title><rect x="969.5" y="469" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="972.53" y="479.5" ></text>
</g>
<g >
<title>choose_next_point (833,528 samples, 0.01%)</title><rect x="622.2" y="437" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="625.15" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (26,696,204 samples, 0.34%)</title><rect x="933.3" y="469" width="4.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="936.34" y="479.5" ></text>
</g>
<g >
<title>decltype  (902,691 samples, 0.01%)</title><rect x="932.6" y="357" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="935.58" y="367.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,668,367 samples, 0.02%)</title><rect x="376.9" y="389" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="379.94" y="399.5" ></text>
</g>
<g >
<title>malloc (4,155,546 samples, 0.05%)</title><rect x="722.3" y="373" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="725.31" y="383.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,787,712 samples, 0.02%)</title><rect x="782.4" y="133" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="785.42" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (19,760,851 samples, 0.25%)</title><rect x="901.1" y="309" width="3.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="904.12" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,490,728 samples, 0.03%)</title><rect x="985.3" y="373" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="988.33" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,282,073 samples, 0.03%)</title><rect x="886.3" y="373" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="889.34" y="383.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (10,819,098 samples, 0.14%)</title><rect x="751.6" y="293" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="754.64" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (16,492,851 samples, 0.21%)</title><rect x="522.1" y="453" width="2.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="525.13" y="463.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (852,313 samples, 0.01%)</title><rect x="732.0" y="261" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="735.04" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,818,347 samples, 0.04%)</title><rect x="692.1" y="293" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="695.11" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,513,495 samples, 0.02%)</title><rect x="864.3" y="181" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="867.28" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (13,355,307 samples, 0.17%)</title><rect x="981.6" y="469" width="2.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="984.57" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (4,971,943 samples, 0.06%)</title><rect x="884.0" y="309" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="887.01" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (686,099 samples, 0.01%)</title><rect x="787.7" y="85" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="790.69" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (823,053 samples, 0.01%)</title><rect x="834.8" y="245" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="837.80" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (60,984,276 samples, 0.77%)</title><rect x="67.4" y="437" width="9.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="70.40" y="447.5" ></text>
</g>
<g >
<title>get_inbetween_points (127,119,936 samples, 1.60%)</title><rect x="408.7" y="485" width="18.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="411.69" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (97,026,870 samples, 1.22%)</title><rect x="732.3" y="277" width="14.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="735.35" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (964,250 samples, 0.01%)</title><rect x="92.2" y="389" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="95.24" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,091,479 samples, 0.01%)</title><rect x="856.1" y="309" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="859.08" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (15,638,220 samples, 0.20%)</title><rect x="883.2" y="325" width="2.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="886.23" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (2,918,495 samples, 0.04%)</title><rect x="80.9" y="405" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="83.90" y="415.5" ></text>
</g>
<g >
<title>choose_next_point (149,334,271 samples, 1.87%)</title><rect x="865.0" y="389" width="22.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="867.98" y="399.5" >c..</text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (850,856 samples, 0.01%)</title><rect x="834.2" y="197" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="837.23" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (11,959,027 samples, 0.15%)</title><rect x="375.4" y="405" width="1.8" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="378.42" y="415.5" ></text>
</g>
<g >
<title>cfree (213,739,726 samples, 2.68%)</title><rect x="622.3" y="485" width="31.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="625.28" y="495.5" >cf..</text>
</g>
<g >
<title>local_Rb_tree_decrement (1,241,155 samples, 0.02%)</title><rect x="1183.2" y="469" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1186.23" y="479.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,085,536 samples, 0.01%)</title><rect x="838.2" y="165" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="841.18" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,880,097 samples, 0.04%)</title><rect x="881.7" y="309" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="884.74" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (14,633,708 samples, 0.18%)</title><rect x="691.5" y="389" width="2.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="694.50" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (25,106,312 samples, 0.32%)</title><rect x="929.6" y="469" width="3.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="932.62" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (1,081,081 samples, 0.01%)</title><rect x="983.6" y="421" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="986.55" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (11,241,787 samples, 0.14%)</title><rect x="809.3" y="165" width="1.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="812.33" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,475,310 samples, 0.03%)</title><rect x="937.6" y="453" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="940.59" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (844,312 samples, 0.01%)</title><rect x="804.8" y="37" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="807.75" y="47.5" ></text>
</g>
<g >
<title>cfree (1,082,386 samples, 0.01%)</title><rect x="677.4" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="680.40" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (3,238,159 samples, 0.04%)</title><rect x="864.5" y="229" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="867.50" y="239.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,411,212 samples, 0.03%)</title><rect x="78.7" y="389" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="81.70" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,207,637 samples, 0.03%)</title><rect x="1189.7" y="453" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1192.67" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (12,170,818 samples, 0.15%)</title><rect x="1090.0" y="453" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1093.00" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,854,195 samples, 0.02%)</title><rect x="804.6" y="117" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="807.62" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (819,756 samples, 0.01%)</title><rect x="845.4" y="277" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="848.43" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,827,868 samples, 0.02%)</title><rect x="761.6" y="325" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="764.63" y="335.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (715,957 samples, 0.01%)</title><rect x="578.2" y="261" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="581.21" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (15,321,516 samples, 0.19%)</title><rect x="845.5" y="405" width="2.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="848.55" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,507,387 samples, 0.04%)</title><rect x="402.7" y="389" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="405.68" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,753,797 samples, 0.03%)</title><rect x="984.8" y="293" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="987.76" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,484,837 samples, 0.03%)</title><rect x="838.5" y="293" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="841.47" y="303.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (73,023,869 samples, 0.92%)</title><rect x="543.8" y="437" width="10.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="546.79" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (24,427,886 samples, 0.31%)</title><rect x="834.7" y="309" width="3.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="837.72" y="319.5" ></text>
</g>
<g >
<title>cfree (914,160 samples, 0.01%)</title><rect x="724.5" y="341" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="727.50" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,360,110 samples, 0.07%)</title><rect x="1096.1" y="437" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1099.07" y="447.5" ></text>
</g>
<g >
<title>roundf32x (15,710,325 samples, 0.20%)</title><rect x="1079.4" y="485" width="2.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1082.39" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,521,114 samples, 0.11%)</title><rect x="540.3" y="469" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="543.33" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,183,689 samples, 0.01%)</title><rect x="518.7" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="521.67" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,222,842 samples, 0.03%)</title><rect x="686.1" y="389" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="689.07" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (26,988,817 samples, 0.34%)</title><rect x="218.8" y="405" width="4.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="221.80" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (26,802,775 samples, 0.34%)</title><rect x="742.7" y="261" width="4.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="745.75" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (70,557,695 samples, 0.89%)</title><rect x="894.0" y="373" width="10.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="897.01" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (35,296,193 samples, 0.44%)</title><rect x="555.2" y="485" width="5.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="558.19" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,412,950 samples, 0.07%)</title><rect x="807.9" y="101" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="810.92" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (51,152,730 samples, 0.64%)</title><rect x="818.1" y="325" width="7.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="821.07" y="335.5" ></text>
</g>
<g >
<title>malloc (17,058,954 samples, 0.21%)</title><rect x="820.3" y="277" width="2.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="823.31" y="287.5" ></text>
</g>
<g >
<title>attempt7_cpp (7,965,767,805 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >attempt7_cpp</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (20,690,590 samples, 0.26%)</title><rect x="882.9" y="357" width="3.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="885.94" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (15,402,475 samples, 0.19%)</title><rect x="79.1" y="453" width="2.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="82.05" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (1,183,689 samples, 0.01%)</title><rect x="518.7" y="405" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="521.67" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (685,491 samples, 0.01%)</title><rect x="555.0" y="453" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="557.96" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (2,238,382 samples, 0.03%)</title><rect x="79.6" y="389" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="82.63" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (10,731,125 samples, 0.13%)</title><rect x="422.7" y="453" width="1.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="425.66" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (15,178,067 samples, 0.19%)</title><rect x="845.6" y="309" width="2.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="848.57" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (86,829,537 samples, 1.09%)</title><rect x="706.0" y="357" width="12.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="709.03" y="367.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (49,190,934 samples, 0.62%)</title><rect x="668.6" y="293" width="7.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="671.55" y="303.5" ></text>
</g>
<g >
<title>operator new (2,139,687 samples, 0.03%)</title><rect x="811.7" y="181" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="814.74" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,072,343 samples, 0.01%)</title><rect x="795.0" y="181" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="798.00" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (150,210,042 samples, 1.89%)</title><rect x="1081.7" y="485" width="22.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1084.71" y="495.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (82,182,823 samples, 1.03%)</title><rect x="1123.1" y="485" width="12.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1126.13" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (180,941,773 samples, 2.27%)</title><rect x="721.1" y="389" width="26.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="724.11" y="399.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (9,353,220 samples, 0.12%)</title><rect x="384.1" y="421" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="387.06" y="431.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (1,689,771 samples, 0.02%)</title><rect x="559.7" y="469" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="562.72" y="479.5" ></text>
</g>
<g >
<title>gen_all_points (67,329,749 samples, 0.85%)</title><rect x="668.3" y="405" width="9.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="671.27" y="415.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (9,461,247 samples, 0.12%)</title><rect x="377.2" y="389" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="380.19" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,925,843 samples, 0.02%)</title><rect x="854.0" y="309" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="857.01" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (4,232,827 samples, 0.05%)</title><rect x="693.7" y="389" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="696.67" y="399.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (843,857 samples, 0.01%)</title><rect x="1189.9" y="421" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.87" y="431.5" ></text>
</g>
<g >
<title>operator new (25,584,278 samples, 0.32%)</title><rect x="860.3" y="197" width="3.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="863.28" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,249,181 samples, 0.08%)</title><rect x="579.6" y="309" width="0.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="582.59" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (3,629,167 samples, 0.05%)</title><rect x="385.4" y="469" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="388.44" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,243,965 samples, 0.02%)</title><rect x="805.8" y="181" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="808.77" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,097,106 samples, 0.01%)</title><rect x="80.6" y="437" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="83.60" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (54,517,989 samples, 0.68%)</title><rect x="573.5" y="469" width="8.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="576.47" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (40,436,834 samples, 0.51%)</title><rect x="372.6" y="437" width="6.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="375.60" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (46,617,630 samples, 0.59%)</title><rect x="887.1" y="325" width="6.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="890.10" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,245,703 samples, 0.03%)</title><rect x="881.7" y="277" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="884.74" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,516,520 samples, 0.03%)</title><rect x="900.7" y="245" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="903.73" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,776,510 samples, 0.02%)</title><rect x="585.1" y="421" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="588.08" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (45,717,814 samples, 0.57%)</title><rect x="857.7" y="245" width="6.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="860.73" y="255.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (842,059 samples, 0.01%)</title><rect x="742.5" y="181" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="745.50" y="191.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (180,767,650 samples, 2.27%)</title><rect x="339.6" y="421" width="26.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="342.58" y="431.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (173,748,896 samples, 2.18%)</title><rect x="762.1" y="229" width="25.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="765.14" y="239.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,598,677 samples, 0.02%)</title><rect x="893.8" y="261" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="896.77" y="271.5" ></text>
</g>
<g >
<title>get_inbetween_points (239,209,829 samples, 3.00%)</title><rect x="948.3" y="485" width="35.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="951.28" y="495.5" >get..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (985,201 samples, 0.01%)</title><rect x="904.3" y="197" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="907.31" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1,053,720 samples, 0.01%)</title><rect x="686.2" y="277" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="689.21" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (8,748,916 samples, 0.11%)</title><rect x="751.7" y="229" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="754.66" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (4,090,442 samples, 0.05%)</title><rect x="816.4" y="341" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="819.43" y="351.5" ></text>
</g>
<g >
<title>operator delete (2,050,211 samples, 0.03%)</title><rect x="822.8" y="277" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="825.84" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (51,152,730 samples, 0.64%)</title><rect x="818.1" y="357" width="7.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="821.07" y="367.5" ></text>
</g>
<g >
<title>decltype  (3,889,744 samples, 0.05%)</title><rect x="947.5" y="341" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="950.51" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,205,674 samples, 0.10%)</title><rect x="519.0" y="437" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="522.02" y="447.5" ></text>
</g>
<g >
<title>malloc (698,923 samples, 0.01%)</title><rect x="751.7" y="213" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="754.74" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (9,773,773 samples, 0.12%)</title><rect x="938.3" y="453" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="941.31" y="463.5" ></text>
</g>
<g >
<title>malloc (8,143,729 samples, 0.10%)</title><rect x="583.2" y="485" width="1.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="586.22" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (89,559,845 samples, 1.12%)</title><rect x="851.7" y="405" width="13.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="854.71" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,468,121 samples, 0.02%)</title><rect x="856.2" y="325" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="859.24" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (36,808,416 samples, 0.46%)</title><rect x="575.2" y="389" width="5.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="578.16" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (3,488,872 samples, 0.04%)</title><rect x="92.7" y="421" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="95.74" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (169,865,210 samples, 2.13%)</title><rect x="904.5" y="469" width="25.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="907.46" y="479.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,467,602 samples, 0.13%)</title><rect x="781.1" y="181" width="1.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="784.14" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,824,255 samples, 0.02%)</title><rect x="182.8" y="453" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="185.81" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (990,977 samples, 0.01%)</title><rect x="817.0" y="357" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="820.03" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (694,841 samples, 0.01%)</title><rect x="985.7" y="389" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="988.70" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,463,793 samples, 0.04%)</title><rect x="838.3" y="325" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="841.34" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,737,809 samples, 0.02%)</title><rect x="893.7" y="277" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="896.75" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (1,081,081 samples, 0.01%)</title><rect x="983.6" y="469" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="986.55" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,113,821 samples, 0.01%)</title><rect x="844.9" y="293" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="847.92" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (35,710,313 samples, 0.45%)</title><rect x="976.3" y="453" width="5.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="979.28" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (5,826,408 samples, 0.07%)</title><rect x="855.2" y="325" width="0.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="858.22" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (174,309,034 samples, 2.19%)</title><rect x="762.1" y="309" width="25.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="765.14" y="319.5" >s..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (51,450,982 samples, 0.65%)</title><rect x="1114.0" y="437" width="7.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1117.03" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (821,849 samples, 0.01%)</title><rect x="841.1" y="389" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="844.07" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,313,632 samples, 0.09%)</title><rect x="757.8" y="325" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="760.81" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,893,033 samples, 0.05%)</title><rect x="180.6" y="405" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="183.57" y="415.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (2,110,147 samples, 0.03%)</title><rect x="1188.1" y="485" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,388,334 samples, 0.14%)</title><rect x="832.7" y="261" width="1.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="835.67" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,235,985 samples, 0.02%)</title><rect x="984.4" y="277" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="987.40" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (855,266 samples, 0.01%)</title><rect x="837.3" y="245" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="840.30" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,288,501 samples, 0.04%)</title><rect x="179.0" y="453" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="181.97" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (910,806 samples, 0.01%)</title><rect x="856.3" y="277" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="859.26" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (23,949,553 samples, 0.30%)</title><rect x="879.4" y="373" width="3.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="882.39" y="383.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,800,102 samples, 0.04%)</title><rect x="1167.2" y="405" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1170.23" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (910,806 samples, 0.01%)</title><rect x="856.3" y="293" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="859.26" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (49,190,934 samples, 0.62%)</title><rect x="668.6" y="325" width="7.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="671.55" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,236,504 samples, 0.02%)</title><rect x="864.3" y="133" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="867.29" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,338,117 samples, 0.03%)</title><rect x="78.3" y="341" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="81.33" y="351.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,289,292 samples, 0.08%)</title><rect x="580.6" y="421" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="583.61" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (74,580,079 samples, 0.94%)</title><rect x="1153.0" y="469" width="11.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1155.97" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (8,243,861 samples, 0.10%)</title><rect x="401.3" y="389" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="404.27" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (9,183,571 samples, 0.12%)</title><rect x="401.1" y="421" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="404.13" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,633,231 samples, 0.23%)</title><rect x="933.5" y="421" width="2.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="936.52" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (5,383,884 samples, 0.07%)</title><rect x="884.7" y="293" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="887.75" y="303.5" ></text>
</g>
<g >
<title>[anon] (2,414,041,765 samples, 30.31%)</title><rect x="224.1" y="501" width="357.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="227.12" y="511.5" >[anon]</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (690,840 samples, 0.01%)</title><rect x="985.2" y="229" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="988.16" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,332,148 samples, 0.04%)</title><rect x="863.6" y="165" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="866.57" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,062,929 samples, 0.03%)</title><rect x="585.1" y="437" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="588.08" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (20,690,590 samples, 0.26%)</title><rect x="882.9" y="373" width="3.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="885.94" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (53,788,379 samples, 0.68%)</title><rect x="216.2" y="469" width="7.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="219.16" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,154,601 samples, 0.01%)</title><rect x="581.5" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="584.54" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (173,748,896 samples, 2.18%)</title><rect x="762.1" y="245" width="25.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="765.14" y="255.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,210,950 samples, 0.02%)</title><rect x="92.5" y="421" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="95.48" y="431.5" ></text>
</g>
<g >
<title>operator new (196,721,955 samples, 2.47%)</title><rect x="1050.0" y="485" width="29.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1053.04" y="495.5" >op..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (2,777,465 samples, 0.03%)</title><rect x="1113.3" y="469" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1116.25" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (1,081,081 samples, 0.01%)</title><rect x="983.6" y="453" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="986.55" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (1,233,676 samples, 0.02%)</title><rect x="1168.7" y="485" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1171.66" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,791,549 samples, 0.02%)</title><rect x="753.0" y="229" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="755.95" y="239.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,411,212 samples, 0.03%)</title><rect x="78.7" y="405" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="81.70" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (12,221,567 samples, 0.15%)</title><rect x="1162.2" y="405" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1165.21" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,884,331 samples, 0.04%)</title><rect x="833.8" y="181" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="836.80" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (15,178,067 samples, 0.19%)</title><rect x="845.6" y="357" width="2.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="848.57" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (781,610 samples, 0.01%)</title><rect x="1135.2" y="469" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1138.18" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,363,780 samples, 0.02%)</title><rect x="1189.7" y="437" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1192.67" y="447.5" ></text>
</g>
<g >
<title>is_close_int (18,662,196 samples, 0.23%)</title><rect x="421.7" y="469" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="424.69" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (824,517 samples, 0.01%)</title><rect x="427.4" y="437" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="430.40" y="447.5" ></text>
</g>
<g >
<title>decltype  (3,580,587 samples, 0.04%)</title><rect x="943.0" y="421" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="945.96" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (4,232,827 samples, 0.05%)</title><rect x="693.7" y="341" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="696.67" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (7,174,273 samples, 0.09%)</title><rect x="852.7" y="293" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="855.70" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (25,186,655 samples, 0.32%)</title><rect x="335.8" y="421" width="3.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="338.85" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (947,844 samples, 0.01%)</title><rect x="854.8" y="341" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="857.79" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (18,282,360 samples, 0.23%)</title><rect x="405.7" y="405" width="2.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="408.75" y="415.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (6,289,292 samples, 0.08%)</title><rect x="580.6" y="405" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="583.61" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (370,483,600 samples, 4.65%)</title><rect x="757.3" y="341" width="54.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="760.35" y="351.5" >std::..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (25,877,080 samples, 0.32%)</title><rect x="784.0" y="133" width="3.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="786.96" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (21,527,864 samples, 0.27%)</title><rect x="743.5" y="245" width="3.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="746.53" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (836,498 samples, 0.01%)</title><rect x="84.1" y="421" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="87.11" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,923,436 samples, 0.02%)</title><rect x="823.8" y="277" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="826.76" y="287.5" ></text>
</g>
<g >
<title>operator new (2,114,338 samples, 0.03%)</title><rect x="739.6" y="245" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="742.62" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,245,361 samples, 0.02%)</title><rect x="903.9" y="133" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="906.87" y="143.5" ></text>
</g>
<g >
<title>choose_next_point (141,909,700 samples, 1.78%)</title><rect x="61.4" y="485" width="21.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="64.38" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (8,215,495 samples, 0.10%)</title><rect x="731.1" y="357" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="734.13" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (4,633,580 samples, 0.06%)</title><rect x="692.7" y="341" width="0.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="695.74" y="351.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (828,458 samples, 0.01%)</title><rect x="90.6" y="469" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="93.61" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (29,397,426 samples, 0.37%)</title><rect x="841.2" y="389" width="4.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="844.19" y="399.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (908,316 samples, 0.01%)</title><rect x="863.9" y="101" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="866.93" y="111.5" ></text>
</g>
<g >
<title>get_inbetween_points (823,997 samples, 0.01%)</title><rect x="795.5" y="181" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="798.53" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,564,577 samples, 0.03%)</title><rect x="825.3" y="229" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="828.27" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (39,871,090 samples, 0.50%)</title><rect x="872.5" y="325" width="5.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="875.46" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,668,171 samples, 0.02%)</title><rect x="939.5" y="389" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="942.51" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (985,201 samples, 0.01%)</title><rect x="904.3" y="149" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="907.31" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,212,759 samples, 0.05%)</title><rect x="978.2" y="405" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="981.23" y="415.5" ></text>
</g>
<g >
<title>operator new (8,151,432 samples, 0.10%)</title><rect x="795.8" y="181" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="798.84" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,757,045 samples, 0.05%)</title><rect x="389.6" y="405" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="392.60" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (4,176,257 samples, 0.05%)</title><rect x="91.1" y="453" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="94.09" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (4,971,420 samples, 0.06%)</title><rect x="944.7" y="405" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="947.70" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,746,502 samples, 0.02%)</title><rect x="425.9" y="405" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="428.88" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (17,335,289 samples, 0.22%)</title><rect x="387.6" y="453" width="2.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="390.59" y="463.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (70,723,912 samples, 0.89%)</title><rect x="398.2" y="437" width="10.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="401.22" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (11,217,462 samples, 0.14%)</title><rect x="83.0" y="453" width="1.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="86.02" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (143,786,513 samples, 1.81%)</title><rect x="560.4" y="485" width="21.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="563.41" y="495.5" >s..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,236,504 samples, 0.02%)</title><rect x="864.3" y="101" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="867.29" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (35,965,002 samples, 0.45%)</title><rect x="218.8" y="453" width="5.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="221.80" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_mbegin (1,533,587 samples, 0.02%)</title><rect x="540.1" y="453" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="543.10" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,733,537 samples, 0.02%)</title><rect x="825.3" y="197" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="828.27" y="207.5" ></text>
</g>
<g >
<title>malloc (3,270,798 samples, 0.04%)</title><rect x="789.0" y="309" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="791.96" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,755,216 samples, 0.02%)</title><rect x="718.6" y="309" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="721.63" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,381,972 samples, 0.02%)</title><rect x="864.3" y="149" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="867.29" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,130,930 samples, 0.08%)</title><rect x="741.7" y="229" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="744.72" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,207,669 samples, 0.02%)</title><rect x="83.9" y="373" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="86.93" y="383.5" ></text>
</g>
<g >
<title>decltype  (1,331,263 samples, 0.02%)</title><rect x="83.3" y="421" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="86.32" y="431.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (6,897,372 samples, 0.09%)</title><rect x="878.4" y="309" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="881.37" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,854,195 samples, 0.02%)</title><rect x="804.6" y="133" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="807.62" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,009,714 samples, 0.04%)</title><rect x="837.9" y="197" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="840.89" y="207.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,211,110 samples, 0.05%)</title><rect x="932.7" y="389" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="935.72" y="399.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (5,179,822 samples, 0.07%)</title><rect x="882.2" y="309" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="885.17" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,954,369 samples, 0.02%)</title><rect x="686.1" y="309" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="689.07" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,212,759 samples, 0.05%)</title><rect x="978.2" y="373" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="981.23" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (816,952 samples, 0.01%)</title><rect x="577.9" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="580.94" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (139,765,102 samples, 1.75%)</title><rect x="727.0" y="373" width="20.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="729.95" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (25,106,312 samples, 0.32%)</title><rect x="929.6" y="453" width="3.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="932.62" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,974,186 samples, 0.02%)</title><rect x="578.4" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="581.40" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,211,110 samples, 0.05%)</title><rect x="932.7" y="421" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="935.72" y="431.5" ></text>
</g>
<g >
<title>decltype  (838,225 samples, 0.01%)</title><rect x="981.4" y="405" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="984.45" y="415.5" ></text>
</g>
<g >
<title>choose_next_point (1,240,377,146 samples, 15.57%)</title><rect x="661.8" y="421" width="183.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="664.81" y="431.5" >choose_next_point</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (703,956 samples, 0.01%)</title><rect x="721.0" y="293" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="724.01" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (9,976,887 samples, 0.13%)</title><rect x="852.3" y="309" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="855.29" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (54,756,355 samples, 0.69%)</title><rect x="826.2" y="293" width="8.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="829.25" y="303.5" ></text>
</g>
<g >
<title>malloc (1,104,738 samples, 0.01%)</title><rect x="694.3" y="405" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="697.32" y="415.5" ></text>
</g>
<g >
<title>cfree (13,497,062 samples, 0.17%)</title><rect x="818.3" y="277" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="821.27" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,617,817 samples, 0.02%)</title><rect x="904.1" y="229" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="907.05" y="239.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,787,712 samples, 0.02%)</title><rect x="782.4" y="117" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="785.42" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (54,756,355 samples, 0.69%)</title><rect x="826.2" y="325" width="8.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="829.25" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,545,292 samples, 0.02%)</title><rect x="579.1" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="582.07" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,748,782 samples, 0.03%)</title><rect x="984.2" y="389" width="0.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="987.18" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (11,959,027 samples, 0.15%)</title><rect x="375.4" y="421" width="1.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="378.42" y="431.5" ></text>
</g>
<g >
<title>operator new (4,402,495 samples, 0.06%)</title><rect x="783.3" y="197" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="786.29" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (24,473,471 samples, 0.31%)</title><rect x="847.8" y="341" width="3.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="850.82" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,408,534 samples, 0.02%)</title><rect x="703.9" y="309" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="706.95" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,381,972 samples, 0.02%)</title><rect x="864.3" y="165" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="867.29" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,972,818 samples, 0.02%)</title><rect x="383.8" y="437" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="386.76" y="447.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (2,188,903 samples, 0.03%)</title><rect x="1182.5" y="453" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1185.53" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (24,694,663 samples, 0.31%)</title><rect x="841.9" y="357" width="3.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="844.89" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (36,520,999 samples, 0.46%)</title><rect x="1091.8" y="453" width="5.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1094.81" y="463.5" ></text>
</g>
<g >
<title>operator delete (985,968 samples, 0.01%)</title><rect x="797.5" y="197" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="800.47" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,199,672 samples, 0.03%)</title><rect x="854.0" y="341" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="856.97" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (4,451,470 samples, 0.06%)</title><rect x="1182.9" y="501" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1185.86" y="511.5" ></text>
</g>
<g >
<title>choose_next_point (14,104,215 samples, 0.18%)</title><rect x="983.7" y="421" width="2.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="986.71" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (13,552,181 samples, 0.17%)</title><rect x="424.5" y="453" width="2.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="427.50" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (11,241,787 samples, 0.14%)</title><rect x="809.3" y="85" width="1.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="812.33" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,260,480 samples, 0.02%)</title><rect x="732.0" y="341" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="735.00" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,222,842 samples, 0.03%)</title><rect x="686.1" y="373" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="689.07" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (2,562,281 samples, 0.03%)</title><rect x="886.7" y="373" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="889.72" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (73,023,869 samples, 0.92%)</title><rect x="543.8" y="453" width="10.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="546.79" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (1,184,328 samples, 0.01%)</title><rect x="84.5" y="421" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="87.50" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (6,742,250 samples, 0.08%)</title><rect x="945.8" y="421" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="948.81" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,598,677 samples, 0.02%)</title><rect x="893.8" y="165" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="896.77" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (20,439,274 samples, 0.26%)</title><rect x="1099.6" y="469" width="3.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1102.58" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,102,129 samples, 0.01%)</title><rect x="784.0" y="85" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="787.00" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (6,165,038 samples, 0.08%)</title><rect x="1095.2" y="437" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1098.16" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (89,559,845 samples, 1.12%)</title><rect x="851.7" y="421" width="13.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="854.71" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (45,717,814 samples, 0.57%)</title><rect x="857.7" y="213" width="6.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="860.73" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (703,956 samples, 0.01%)</title><rect x="721.0" y="325" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="724.01" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,959,170 samples, 0.07%)</title><rect x="1086.4" y="405" width="0.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1089.42" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,096,625 samples, 0.03%)</title><rect x="777.7" y="133" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="780.71" y="143.5" ></text>
</g>
<g >
<title>operator new (1,996,020 samples, 0.03%)</title><rect x="859.9" y="181" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="862.88" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,022,356 samples, 0.01%)</title><rect x="581.5" y="341" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="584.54" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,311,590 samples, 0.02%)</title><rect x="1168.0" y="469" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1170.95" y="479.5" ></text>
</g>
<g >
<title>malloc (1,098,028 samples, 0.01%)</title><rect x="784.7" y="85" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="787.66" y="95.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,238,159 samples, 0.04%)</title><rect x="864.5" y="197" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="867.50" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (675,964 samples, 0.01%)</title><rect x="818.0" y="309" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="820.97" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (173,748,896 samples, 2.18%)</title><rect x="762.1" y="261" width="25.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="765.14" y="271.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,005,518 samples, 0.01%)</title><rect x="578.2" y="325" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="581.16" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,753,797 samples, 0.03%)</title><rect x="984.8" y="325" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="987.76" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (21,253,554 samples, 0.27%)</title><rect x="743.6" y="165" width="3.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="746.57" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,350,577 samples, 0.19%)</title><rect x="901.1" y="245" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="904.12" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (25,877,080 samples, 0.32%)</title><rect x="784.0" y="149" width="3.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="786.96" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,151,469 samples, 0.17%)</title><rect x="857.7" y="197" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="860.73" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (690,840 samples, 0.01%)</title><rect x="985.2" y="293" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="988.16" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (6,249,181 samples, 0.08%)</title><rect x="579.6" y="293" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="582.59" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (6,641,755 samples, 0.08%)</title><rect x="935.3" y="389" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="938.30" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (26,696,204 samples, 0.34%)</title><rect x="933.3" y="453" width="4.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="936.34" y="463.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (977,108 samples, 0.01%)</title><rect x="1169.3" y="453" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1172.34" y="463.5" ></text>
</g>
<g >
<title>error_entry (1,392,873 samples, 0.02%)</title><rect x="1168.4" y="501" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1171.35" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (35,981,057 samples, 0.45%)</title><rect x="524.6" y="469" width="5.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="527.57" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (73,705,046 samples, 0.93%)</title><rect x="868.5" y="373" width="10.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="871.47" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (973,746 samples, 0.01%)</title><rect x="743.7" y="133" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="746.74" y="143.5" ></text>
</g>
<g >
<title>cfree (2,888,943 samples, 0.04%)</title><rect x="903.4" y="245" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="906.40" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,116,663 samples, 0.01%)</title><rect x="304.0" y="453" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="307.05" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,081,090 samples, 0.01%)</title><rect x="808.7" y="101" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="811.72" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (4,298,286 samples, 0.05%)</title><rect x="812.4" y="373" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="815.41" y="383.5" ></text>
</g>
<g >
<title>operator new (1,609,630 samples, 0.02%)</title><rect x="864.7" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="867.70" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (5,810,646 samples, 0.07%)</title><rect x="856.8" y="293" width="0.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="859.81" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,798,253 samples, 0.05%)</title><rect x="742.1" y="197" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="745.06" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (710,326 samples, 0.01%)</title><rect x="839.0" y="325" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="841.99" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,801,155 samples, 0.02%)</title><rect x="813.0" y="389" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="816.05" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (15,019,956 samples, 0.19%)</title><rect x="503.7" y="453" width="2.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="506.72" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,268,831 samples, 0.02%)</title><rect x="387.1" y="453" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="390.09" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (6,350,928 samples, 0.08%)</title><rect x="1094.2" y="437" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1097.22" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (21,253,554 samples, 0.27%)</title><rect x="743.6" y="197" width="3.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="746.57" y="207.5" ></text>
</g>
<g >
<title>decltype  (1,787,712 samples, 0.02%)</title><rect x="782.4" y="101" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="785.42" y="111.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (6,091,087 samples, 0.08%)</title><rect x="91.8" y="453" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="94.84" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (710,378 samples, 0.01%)</title><rect x="182.3" y="373" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="185.31" y="383.5" ></text>
</g>
<g >
<title>cfree (5,418,732 samples, 0.07%)</title><rect x="759.0" y="325" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="761.98" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (971,053 samples, 0.01%)</title><rect x="678.1" y="325" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="681.10" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (4,480,531 samples, 0.06%)</title><rect x="978.2" y="421" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="981.19" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (688,049 samples, 0.01%)</title><rect x="823.7" y="277" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="826.66" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (711,408 samples, 0.01%)</title><rect x="304.0" y="421" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="307.05" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (4,090,442 samples, 0.05%)</title><rect x="816.4" y="357" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="819.43" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (4,519,259 samples, 0.06%)</title><rect x="1182.2" y="501" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1185.19" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,800,154 samples, 0.02%)</title><rect x="863.8" y="133" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="866.80" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (961,109 samples, 0.01%)</title><rect x="755.3" y="309" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="758.29" y="319.5" ></text>
</g>
<g >
<title>cfree (15,178,067 samples, 0.19%)</title><rect x="845.6" y="293" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="848.57" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,714,448 samples, 0.05%)</title><rect x="188.0" y="469" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="190.97" y="479.5" ></text>
</g>
<g >
<title>choose_next_point (14,667,118 samples, 0.18%)</title><rect x="983.7" y="469" width="2.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="986.71" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,207,669 samples, 0.02%)</title><rect x="83.9" y="405" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="86.93" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,535,385 samples, 0.02%)</title><rect x="979.0" y="405" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="982.02" y="415.5" ></text>
</g>
<g >
<title>cfree (6,845,201 samples, 0.09%)</title><rect x="735.2" y="245" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="738.19" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (3,292,507 samples, 0.04%)</title><rect x="81.9" y="437" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="84.92" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (1,069,063 samples, 0.01%)</title><rect x="81.5" y="469" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="84.47" y="479.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (1,262,737 samples, 0.02%)</title><rect x="686.5" y="389" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="689.49" y="399.5" ></text>
</g>
<g >
<title>get_inbetween_points (965,641 samples, 0.01%)</title><rect x="304.2" y="469" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="307.23" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,484,837 samples, 0.03%)</title><rect x="838.5" y="309" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="841.47" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,601,709 samples, 0.11%)</title><rect x="749.1" y="341" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="752.13" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (979,655 samples, 0.01%)</title><rect x="1167.8" y="469" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1170.81" y="479.5" ></text>
</g>
<g >
<title>operator delete (698,960 samples, 0.01%)</title><rect x="768.9" y="213" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="771.88" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,079,445 samples, 0.01%)</title><rect x="1168.2" y="485" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.19" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (2,748,455 samples, 0.03%)</title><rect x="904.1" y="309" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="907.05" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,239,927 samples, 0.02%)</title><rect x="426.3" y="405" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="429.30" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (48,572,216 samples, 0.61%)</title><rect x="371.4" y="469" width="7.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="374.39" y="479.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (9,461,247 samples, 0.12%)</title><rect x="377.2" y="405" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="380.19" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,100,262 samples, 0.01%)</title><rect x="864.5" y="181" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="867.50" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,245,361 samples, 0.02%)</title><rect x="903.9" y="165" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="906.87" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,954,369 samples, 0.02%)</title><rect x="686.1" y="325" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="689.07" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,533,587 samples, 0.02%)</title><rect x="540.1" y="469" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="543.10" y="479.5" ></text>
</g>
<g >
<title>cfree (1,920,517 samples, 0.02%)</title><rect x="728.6" y="357" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="731.57" y="367.5" ></text>
</g>
<g >
<title>operator delete (915,973 samples, 0.01%)</title><rect x="836.9" y="245" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="839.94" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (21,253,554 samples, 0.27%)</title><rect x="743.6" y="149" width="3.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="746.57" y="159.5" ></text>
</g>
<g >
<title>cfree (977,808 samples, 0.01%)</title><rect x="851.5" y="293" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="854.48" y="303.5" ></text>
</g>
<g >
<title>timekeeping_advance (686,058 samples, 0.01%)</title><rect x="686.1" y="261" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="689.11" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,598,677 samples, 0.02%)</title><rect x="893.8" y="213" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="896.77" y="223.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (8,976,185 samples, 0.11%)</title><rect x="222.8" y="405" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="225.79" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,238,159 samples, 0.04%)</title><rect x="864.5" y="293" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="867.50" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,822,524 samples, 0.02%)</title><rect x="182.5" y="437" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="185.46" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,753,797 samples, 0.03%)</title><rect x="984.8" y="261" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="987.76" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,733,537 samples, 0.02%)</title><rect x="825.3" y="181" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="828.27" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (26,988,817 samples, 0.34%)</title><rect x="218.8" y="421" width="4.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="221.80" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,318,951 samples, 0.02%)</title><rect x="690.3" y="325" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="693.28" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,333,999 samples, 0.03%)</title><rect x="984.2" y="373" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="987.24" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,757,045 samples, 0.05%)</title><rect x="389.6" y="421" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="392.60" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,365,956 samples, 0.02%)</title><rect x="853.8" y="309" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="856.77" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (142,825,557 samples, 1.79%)</title><rect x="789.8" y="213" width="21.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="792.84" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (143,380,031 samples, 1.80%)</title><rect x="202.9" y="485" width="21.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="205.88" y="495.5" ></text>
</g>
<g >
<title>decltype  (7,613,691 samples, 0.10%)</title><rect x="223.0" y="389" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="226.00" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,567,384 samples, 0.06%)</title><rect x="579.6" y="229" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="582.59" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,338,117 samples, 0.03%)</title><rect x="78.3" y="373" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="81.33" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (2,818,347 samples, 0.04%)</title><rect x="692.1" y="309" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="695.11" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (17,230,711 samples, 0.22%)</title><rect x="403.2" y="421" width="2.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="406.20" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,880,097 samples, 0.04%)</title><rect x="881.7" y="325" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="884.74" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (7,174,273 samples, 0.09%)</title><rect x="852.7" y="277" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="855.70" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (690,840 samples, 0.01%)</title><rect x="985.2" y="213" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="988.16" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,114,006 samples, 0.01%)</title><rect x="732.0" y="277" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="735.00" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (831,040 samples, 0.01%)</title><rect x="825.5" y="197" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="828.52" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,791,549 samples, 0.02%)</title><rect x="753.0" y="277" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="755.95" y="287.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (715,957 samples, 0.01%)</title><rect x="578.2" y="277" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="581.21" y="287.5" ></text>
</g>
<g >
<title>cfree (961,581 samples, 0.01%)</title><rect x="809.5" y="69" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="812.51" y="79.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (73,023,869 samples, 0.92%)</title><rect x="543.8" y="469" width="10.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="546.79" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,001,244 samples, 0.05%)</title><rect x="984.7" y="341" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="987.72" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (703,956 samples, 0.01%)</title><rect x="721.0" y="261" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="724.01" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (972,654 samples, 0.01%)</title><rect x="81.7" y="469" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="84.69" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (6,043,120 samples, 0.08%)</title><rect x="426.5" y="437" width="0.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="429.51" y="447.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,889,744 samples, 0.05%)</title><rect x="947.5" y="373" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="950.51" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,363,780 samples, 0.02%)</title><rect x="1189.7" y="405" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1192.67" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (426,661,104 samples, 5.36%)</title><rect x="224.1" y="485" width="63.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="227.12" y="495.5" >[libc...</text>
</g>
<g >
<title>hrtimer_interrupt (1,142,695 samples, 0.01%)</title><rect x="892.5" y="213" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="895.47" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,235,985 samples, 0.02%)</title><rect x="984.4" y="293" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="987.40" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (17,335,289 samples, 0.22%)</title><rect x="387.6" y="469" width="2.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="390.59" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,005,518 samples, 0.01%)</title><rect x="578.2" y="309" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="581.16" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (1,836,578 samples, 0.02%)</title><rect x="938.0" y="469" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="941.04" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (186,819,488 samples, 2.35%)</title><rect x="813.3" y="405" width="27.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="816.31" y="415.5" >s..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,139,636 samples, 0.06%)</title><rect x="811.4" y="197" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="814.40" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,778,114 samples, 0.02%)</title><rect x="747.7" y="373" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="750.65" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,430,052 samples, 0.02%)</title><rect x="892.4" y="261" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="895.42" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,564,577 samples, 0.03%)</title><rect x="825.3" y="245" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="828.27" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (7,506,191 samples, 0.09%)</title><rect x="386.0" y="453" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="388.98" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (9,461,247 samples, 0.12%)</title><rect x="377.2" y="421" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="380.19" y="431.5" ></text>
</g>
<g >
<title>operator new (224,729,755 samples, 2.82%)</title><rect x="141.2" y="485" width="33.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="144.18" y="495.5" >op..</text>
</g>
<g >
<title>operator new (2,643,216 samples, 0.03%)</title><rect x="694.7" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="697.73" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (8,626,669 samples, 0.11%)</title><rect x="946.8" y="421" width="1.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="949.81" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (25,805,188 samples, 0.32%)</title><rect x="723.1" y="373" width="3.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="726.09" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,753,797 samples, 0.03%)</title><rect x="984.8" y="309" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="987.76" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,233,003 samples, 0.03%)</title><rect x="777.7" y="149" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="780.69" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (13,355,307 samples, 0.17%)</title><rect x="981.6" y="437" width="2.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="984.57" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,479,199 samples, 0.03%)</title><rect x="78.3" y="405" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="81.33" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (710,379 samples, 0.01%)</title><rect x="862.9" y="181" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="865.87" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (10,794,299 samples, 0.14%)</title><rect x="824.0" y="277" width="1.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="827.05" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,002,646 samples, 0.04%)</title><rect x="840.1" y="357" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="843.15" y="367.5" ></text>
</g>
<g >
<title>operator delete (1,673,302 samples, 0.02%)</title><rect x="694.5" y="405" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="697.48" y="415.5" ></text>
</g>
<g >
<title>operator new (1,352,192 samples, 0.02%)</title><rect x="844.7" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="847.71" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (6,897,372 samples, 0.09%)</title><rect x="878.4" y="341" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="881.37" y="351.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (838,225 samples, 0.01%)</title><rect x="981.4" y="421" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="984.45" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,928,736 samples, 0.06%)</title><rect x="1152.2" y="469" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1155.24" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (855,562 samples, 0.01%)</title><rect x="518.9" y="421" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="521.89" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,956,194 samples, 0.04%)</title><rect x="742.1" y="149" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="745.06" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (675,964 samples, 0.01%)</title><rect x="818.0" y="357" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="820.97" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (6,091,087 samples, 0.08%)</title><rect x="91.8" y="469" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="94.84" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (12,170,818 samples, 0.15%)</title><rect x="1090.0" y="405" width="1.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1093.00" y="415.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (11,909,544 samples, 0.15%)</title><rect x="852.2" y="341" width="1.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="855.20" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (979,655 samples, 0.01%)</title><rect x="1167.8" y="485" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1170.81" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (15,178,067 samples, 0.19%)</title><rect x="845.6" y="325" width="2.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="848.57" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,516,520 samples, 0.03%)</title><rect x="900.7" y="261" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="903.73" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,688,987 samples, 0.03%)</title><rect x="845.2" y="309" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="848.15" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,053,720 samples, 0.01%)</title><rect x="686.2" y="293" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="689.21" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,235,985 samples, 0.02%)</title><rect x="984.4" y="341" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="987.40" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,987,833 samples, 0.02%)</title><rect x="804.6" y="149" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="807.60" y="159.5" ></text>
</g>
<g >
<title>operator new (1,370,501 samples, 0.02%)</title><rect x="753.0" y="213" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="756.02" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (12,877,742 samples, 0.16%)</title><rect x="809.1" y="197" width="1.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="812.08" y="207.5" ></text>
</g>
<g >
<title>roundf32x (4,857,357 samples, 0.06%)</title><rect x="496.4" y="485" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="499.37" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,256,100 samples, 0.07%)</title><rect x="931.7" y="357" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="934.71" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,288,501 samples, 0.04%)</title><rect x="179.0" y="421" width="0.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="181.97" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (6,897,372 samples, 0.09%)</title><rect x="878.4" y="325" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="881.37" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (7,782,883 samples, 0.10%)</title><rect x="811.1" y="309" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="814.07" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (142,746,099 samples, 1.79%)</title><rect x="697.7" y="373" width="21.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="700.75" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (1,268,831 samples, 0.02%)</title><rect x="387.1" y="469" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="390.09" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (690,840 samples, 0.01%)</title><rect x="985.2" y="277" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="988.16" y="287.5" ></text>
</g>
<g >
<title>asm_common_interrupt (709,799 samples, 0.01%)</title><rect x="690.2" y="357" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="693.15" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,433,100 samples, 0.02%)</title><rect x="181.8" y="389" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="184.78" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (8,978,698 samples, 0.11%)</title><rect x="517.7" y="437" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="520.69" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,269,095 samples, 0.02%)</title><rect x="692.6" y="293" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="695.55" y="303.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (3,580,587 samples, 0.04%)</title><rect x="943.0" y="437" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="945.96" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,810,646 samples, 0.07%)</title><rect x="856.8" y="245" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="859.81" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (8,372,482 samples, 0.11%)</title><rect x="520.9" y="453" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="523.89" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (856,032 samples, 0.01%)</title><rect x="899.1" y="245" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="902.14" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (2,238,382 samples, 0.03%)</title><rect x="79.6" y="405" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="82.63" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,113,821 samples, 0.01%)</title><rect x="844.9" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="847.92" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,113,821 samples, 0.01%)</title><rect x="844.9" y="245" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="847.92" y="255.5" ></text>
</g>
<g >
<title>operator delete (154,223,893 samples, 1.94%)</title><rect x="1027.2" y="485" width="22.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1030.19" y="495.5" >o..</text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (3,707,406 samples, 0.05%)</title><rect x="855.4" y="261" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="858.45" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (985,201 samples, 0.01%)</title><rect x="904.3" y="165" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="907.31" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (5,959,170 samples, 0.07%)</title><rect x="1086.4" y="453" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1089.42" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (985,201 samples, 0.01%)</title><rect x="904.3" y="133" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="907.31" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (37,357,466 samples, 0.47%)</title><rect x="887.1" y="277" width="5.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="890.10" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (19,760,851 samples, 0.25%)</title><rect x="901.1" y="293" width="3.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="904.12" y="303.5" ></text>
</g>
<g >
<title>operator delete (707,448 samples, 0.01%)</title><rect x="677.8" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="680.85" y="287.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (14,994,160 samples, 0.19%)</title><rect x="718.9" y="341" width="2.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="721.89" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (193,877,154 samples, 2.43%)</title><rect x="1135.3" y="485" width="28.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1138.30" y="495.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,249,181 samples, 0.08%)</title><rect x="579.6" y="341" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="582.59" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,235,985 samples, 0.02%)</title><rect x="984.4" y="309" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="987.40" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,164,364 samples, 0.04%)</title><rect x="584.9" y="469" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="587.91" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (681,431 samples, 0.01%)</title><rect x="845.4" y="197" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="848.43" y="207.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (9,768,928 samples, 0.12%)</title><rect x="725.5" y="341" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="728.46" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (19,977,165 samples, 0.25%)</title><rect x="529.9" y="469" width="3.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="532.90" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (91,382,392 samples, 1.15%)</title><rect x="913.8" y="389" width="13.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="916.75" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,154,601 samples, 0.01%)</title><rect x="581.5" y="389" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="584.54" y="399.5" ></text>
</g>
<g >
<title>cfree (1,681,797 samples, 0.02%)</title><rect x="580.3" y="229" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="583.26" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (974,649 samples, 0.01%)</title><rect x="985.2" y="325" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="988.16" y="335.5" ></text>
</g>
<g >
<title>malloc (1,959,433 samples, 0.02%)</title><rect x="734.7" y="261" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="737.67" y="271.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (15,739,810 samples, 0.20%)</title><rect x="927.3" y="421" width="2.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="930.29" y="431.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (2,645,386 samples, 0.03%)</title><rect x="1183.1" y="485" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1186.06" y="495.5" ></text>
</g>
<g >
<title>cfree (13,618,958 samples, 0.17%)</title><rect x="798.4" y="181" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="801.42" y="191.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,365,956 samples, 0.02%)</title><rect x="853.8" y="277" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="856.77" y="287.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (911,703 samples, 0.01%)</title><rect x="81.3" y="469" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="84.33" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (985,201 samples, 0.01%)</title><rect x="904.3" y="213" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="907.31" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (45,717,814 samples, 0.57%)</title><rect x="857.7" y="261" width="6.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="860.73" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (24,694,663 samples, 0.31%)</title><rect x="841.9" y="325" width="3.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="844.89" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (8,030,478 samples, 0.10%)</title><rect x="380.8" y="389" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="383.78" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,659,367 samples, 0.02%)</title><rect x="945.6" y="373" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="948.56" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,245,703 samples, 0.03%)</title><rect x="881.7" y="261" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="884.74" y="271.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (1,311,590 samples, 0.02%)</title><rect x="1168.0" y="485" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1170.95" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,668,171 samples, 0.02%)</title><rect x="939.5" y="421" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="942.51" y="431.5" ></text>
</g>
<g >
<title>cfree (2,748,455 samples, 0.03%)</title><rect x="904.1" y="245" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="907.05" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (46,617,630 samples, 0.59%)</title><rect x="887.1" y="309" width="6.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="890.10" y="319.5" ></text>
</g>
<g >
<title>do_exit (720,798 samples, 0.01%)</title><rect x="1168.2" y="437" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1171.23" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,625,130 samples, 0.03%)</title><rect x="985.3" y="405" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="988.31" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (994,718 samples, 0.01%)</title><rect x="782.7" y="213" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="785.73" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (6,494,040 samples, 0.08%)</title><rect x="807.9" y="149" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="810.92" y="159.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (13,278,214 samples, 0.17%)</title><rect x="424.5" y="437" width="2.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="427.54" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,459,114 samples, 0.02%)</title><rect x="690.3" y="341" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="693.26" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,338,117 samples, 0.03%)</title><rect x="78.3" y="357" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="81.33" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (347,095,242 samples, 4.36%)</title><rect x="320.0" y="453" width="51.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="322.98" y="463.5" >std::..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,598,677 samples, 0.02%)</title><rect x="893.8" y="229" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="896.77" y="239.5" ></text>
</g>
<g >
<title>malloc (1,621,046 samples, 0.02%)</title><rect x="797.2" y="197" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="800.23" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (16,906,519 samples, 0.21%)</title><rect x="688.0" y="373" width="2.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="690.97" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (720,798 samples, 0.01%)</title><rect x="1168.2" y="469" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1171.23" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (770,396 samples, 0.01%)</title><rect x="667.9" y="405" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="670.88" y="415.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (39,871,090 samples, 0.50%)</title><rect x="872.5" y="293" width="5.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="875.46" y="303.5" ></text>
</g>
<g >
<title>cfree (3,627,759 samples, 0.05%)</title><rect x="859.7" y="197" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="862.68" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (701,810 samples, 0.01%)</title><rect x="704.0" y="261" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="707.01" y="271.5" ></text>
</g>
<g >
<title>update_process_times (1,270,419 samples, 0.02%)</title><rect x="804.7" y="53" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="807.69" y="63.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,979,500 samples, 0.02%)</title><rect x="937.3" y="469" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="940.29" y="479.5" ></text>
</g>
<g >
<title>cfree (1,956,956 samples, 0.02%)</title><rect x="582.9" y="485" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="585.89" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (439,668,347 samples, 5.52%)</title><rect x="747.9" y="389" width="65.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="750.92" y="399.5" >std::_R..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,917,545 samples, 0.12%)</title><rect x="1098.1" y="453" width="1.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1101.11" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (8,243,861 samples, 0.10%)</title><rect x="401.3" y="405" width="1.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="404.27" y="415.5" ></text>
</g>
<g >
<title>decltype  (806,281 samples, 0.01%)</title><rect x="838.2" y="149" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="841.22" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (706,562 samples, 0.01%)</title><rect x="1167.8" y="453" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1170.85" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (2,622,646 samples, 0.03%)</title><rect x="386.7" y="437" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="389.70" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,884,331 samples, 0.04%)</title><rect x="833.8" y="149" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="836.80" y="159.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,099,710 samples, 0.01%)</title><rect x="746.7" y="325" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="749.72" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,862,795 samples, 0.14%)</title><rect x="732.8" y="261" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="735.77" y="271.5" ></text>
</g>
<g >
<title>choose_next_point (1,638,051,389 samples, 20.56%)</title><rect x="661.8" y="469" width="242.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="664.81" y="479.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (4,274,102 samples, 0.05%)</title><rect x="80.0" y="405" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.96" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,776,510 samples, 0.02%)</title><rect x="585.1" y="373" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="588.08" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,989,733 samples, 0.08%)</title><rect x="833.5" y="245" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="836.47" y="255.5" ></text>
</g>
<g >
<title>update_wall_time (686,058 samples, 0.01%)</title><rect x="686.1" y="277" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="689.11" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (3,864,164 samples, 0.05%)</title><rect x="81.8" y="469" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="84.83" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (1,537,656 samples, 0.02%)</title><rect x="854.3" y="309" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="857.32" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (807,354 samples, 0.01%)</title><rect x="809.0" y="197" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="811.97" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,154,601 samples, 0.01%)</title><rect x="581.5" y="437" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="584.54" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (824,517 samples, 0.01%)</title><rect x="427.4" y="453" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="430.40" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,659,367 samples, 0.02%)</title><rect x="945.6" y="389" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="948.56" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (38,910,647 samples, 0.49%)</title><rect x="185.5" y="485" width="5.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="188.46" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,891,789 samples, 0.07%)</title><rect x="76.4" y="437" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="79.43" y="447.5" ></text>
</g>
<g >
<title>is_close_int (2,783,796 samples, 0.03%)</title><rect x="816.0" y="357" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="819.00" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,537,656 samples, 0.02%)</title><rect x="854.3" y="293" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="857.32" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (680,103 samples, 0.01%)</title><rect x="857.5" y="85" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="860.46" y="95.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (837,486 samples, 0.01%)</title><rect x="695.3" y="389" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="698.31" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (46,261,958 samples, 0.58%)</title><rect x="378.6" y="453" width="6.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="381.59" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (18,553,445 samples, 0.23%)</title><rect x="510.6" y="437" width="2.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="513.61" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,475,785 samples, 0.03%)</title><rect x="1189.6" y="485" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1192.63" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (4,899,612 samples, 0.06%)</title><rect x="984.6" y="373" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="987.58" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (9,353,220 samples, 0.12%)</title><rect x="384.1" y="437" width="1.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="387.06" y="447.5" ></text>
</g>
<g >
<title>operator new (14,543,713 samples, 0.18%)</title><rect x="744.4" y="133" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="747.42" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,733,537 samples, 0.02%)</title><rect x="825.3" y="165" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="828.27" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (15,178,067 samples, 0.19%)</title><rect x="845.6" y="277" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="848.57" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,238,159 samples, 0.04%)</title><rect x="864.5" y="277" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="867.50" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,549,877 samples, 0.02%)</title><rect x="703.9" y="357" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="706.93" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,363,780 samples, 0.02%)</title><rect x="1189.7" y="421" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.67" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,459,114 samples, 0.02%)</title><rect x="690.3" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="693.26" y="367.5" ></text>
</g>
<g >
<title>malloc (29,274,847 samples, 0.37%)</title><rect x="800.6" y="181" width="4.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="803.56" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (25,877,080 samples, 0.32%)</title><rect x="784.0" y="181" width="3.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="786.96" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,884,331 samples, 0.04%)</title><rect x="833.8" y="197" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="836.80" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (821,849 samples, 0.01%)</title><rect x="841.1" y="405" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="844.07" y="415.5" ></text>
</g>
<g >
<title>is_close_int (7,315,693 samples, 0.09%)</title><rect x="90.7" y="469" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="93.73" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (3,111,687 samples, 0.04%)</title><rect x="182.0" y="437" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="185.00" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (680,393 samples, 0.01%)</title><rect x="723.9" y="357" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="726.88" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (5,383,884 samples, 0.07%)</title><rect x="884.7" y="309" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="887.75" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (691,197 samples, 0.01%)</title><rect x="769.7" y="117" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="772.68" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,300,677 samples, 0.03%)</title><rect x="886.0" y="357" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="889.00" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,800,102 samples, 0.04%)</title><rect x="1167.2" y="437" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1170.23" y="447.5" ></text>
</g>
<g >
<title>is_close_int (26,119,413 samples, 0.33%)</title><rect x="687.0" y="389" width="3.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="689.98" y="399.5" ></text>
</g>
<g >
<title>decltype  (831,040 samples, 0.01%)</title><rect x="825.5" y="181" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="828.52" y="191.5" ></text>
</g>
<g >
<title>operator new (993,436 samples, 0.01%)</title><rect x="817.3" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="820.26" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (117,175,325 samples, 1.47%)</title><rect x="887.1" y="389" width="17.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="890.10" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,300,677 samples, 0.03%)</title><rect x="886.0" y="373" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="889.00" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (2,562,281 samples, 0.03%)</title><rect x="886.7" y="357" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="889.72" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (2,383,643 samples, 0.03%)</title><rect x="854.3" y="325" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="857.29" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (3,488,872 samples, 0.04%)</title><rect x="92.7" y="453" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="95.74" y="463.5" ></text>
</g>
<g >
<title>cfree (1,261,177 samples, 0.02%)</title><rect x="668.0" y="405" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="671.00" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (826,357 samples, 0.01%)</title><rect x="857.5" y="165" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="860.46" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (972,654 samples, 0.01%)</title><rect x="81.7" y="453" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="84.69" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (37,294,970 samples, 0.47%)</title><rect x="1156.7" y="373" width="5.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1159.68" y="383.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (2,053,151 samples, 0.03%)</title><rect x="686.7" y="389" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="689.67" y="399.5" ></text>
</g>
<g >
<title>decltype  (8,148,802 samples, 0.10%)</title><rect x="407.2" y="341" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="410.25" y="351.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (3,952,962 samples, 0.05%)</title><rect x="816.4" y="325" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="819.45" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (985,513 samples, 0.01%)</title><rect x="833.3" y="245" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="836.32" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,598,677 samples, 0.02%)</title><rect x="893.8" y="197" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="896.77" y="207.5" ></text>
</g>
<g >
<title>round@plt (1,519,263 samples, 0.02%)</title><rect x="174.5" y="485" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="177.47" y="495.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (15,739,810 samples, 0.20%)</title><rect x="927.3" y="405" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="930.29" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (2,586,203 samples, 0.03%)</title><rect x="697.4" y="373" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="700.36" y="383.5" ></text>
</g>
<g >
<title>cfree (10,137,393 samples, 0.13%)</title><rect x="842.2" y="309" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="845.18" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,005,518 samples, 0.01%)</title><rect x="578.2" y="341" width="0.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="581.16" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (1,233,433 samples, 0.02%)</title><rect x="693.4" y="341" width="0.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="696.42" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,515,356 samples, 0.03%)</title><rect x="777.6" y="181" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="780.65" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (3,905,700 samples, 0.05%)</title><rect x="1167.1" y="453" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1170.07" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (73,705,046 samples, 0.93%)</title><rect x="868.5" y="357" width="10.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="871.47" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (45,717,814 samples, 0.57%)</title><rect x="857.7" y="277" width="6.8" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="860.73" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,821,256 samples, 0.12%)</title><rect x="77.6" y="437" width="1.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="80.60" y="447.5" ></text>
</g>
<g >
<title>cfree (2,207,679 samples, 0.03%)</title><rect x="795.2" y="181" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="798.16" y="191.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,072,840 samples, 0.01%)</title><rect x="1167.6" y="437" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1170.65" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (2,748,782 samples, 0.03%)</title><rect x="984.2" y="405" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="987.18" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (691,197 samples, 0.01%)</title><rect x="769.7" y="181" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="772.68" y="191.5" ></text>
</g>
<g >
<title>cfree (9,975,687 samples, 0.13%)</title><rect x="673.1" y="261" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="676.10" y="271.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,072,840 samples, 0.01%)</title><rect x="1167.6" y="421" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1170.65" y="431.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (7,174,273 samples, 0.09%)</title><rect x="852.7" y="261" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="855.70" y="271.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,665,165 samples, 0.02%)</title><rect x="192.0" y="453" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="194.97" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,893,033 samples, 0.05%)</title><rect x="180.6" y="389" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="183.57" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,154,601 samples, 0.01%)</title><rect x="581.5" y="405" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="584.54" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (11,217,462 samples, 0.14%)</title><rect x="83.0" y="469" width="1.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="86.02" y="479.5" ></text>
</g>
<g >
<title>common_interrupt (709,799 samples, 0.01%)</title><rect x="690.2" y="341" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="693.15" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (175,130,262 samples, 2.20%)</title><rect x="762.0" y="325" width="26.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="765.02" y="335.5" >s..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (842,059 samples, 0.01%)</title><rect x="742.5" y="165" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="745.50" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,180,543 samples, 0.01%)</title><rect x="690.3" y="293" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="693.28" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,633,313 samples, 0.02%)</title><rect x="740.3" y="245" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="743.31" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,735,187 samples, 0.05%)</title><rect x="833.8" y="229" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="836.80" y="239.5" ></text>
</g>
<g >
<title>operator delete (6,594,846 samples, 0.08%)</title><rect x="729.1" y="357" width="1.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="732.15" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,238,159 samples, 0.04%)</title><rect x="864.5" y="261" width="0.5" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="867.50" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,318,951 samples, 0.02%)</title><rect x="690.3" y="309" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="693.28" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (990,977 samples, 0.01%)</title><rect x="817.0" y="325" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="820.03" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,127,519 samples, 0.01%)</title><rect x="703.9" y="277" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="706.95" y="287.5" ></text>
</g>
<g >
<title>int const&amp; std::min&lt;int&gt; (2,349,138 samples, 0.03%)</title><rect x="421.3" y="469" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="424.34" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (26,988,817 samples, 0.34%)</title><rect x="218.8" y="389" width="4.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="221.80" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (11,237,555 samples, 0.14%)</title><rect x="181.1" y="453" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="184.15" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,331,263 samples, 0.02%)</title><rect x="83.3" y="437" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="86.32" y="447.5" ></text>
</g>
<g >
<title>decltype  (820,175 samples, 0.01%)</title><rect x="746.8" y="293" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="749.76" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,755,216 samples, 0.02%)</title><rect x="718.6" y="293" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="721.63" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (48,048,389 samples, 0.60%)</title><rect x="894.0" y="325" width="7.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="897.01" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,139,636 samples, 0.06%)</title><rect x="811.4" y="213" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="814.40" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,663,794 samples, 0.02%)</title><rect x="777.7" y="117" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="780.71" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,408,534 samples, 0.02%)</title><rect x="703.9" y="325" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="706.95" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (18,553,445 samples, 0.23%)</title><rect x="510.6" y="421" width="2.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="513.61" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (39,871,090 samples, 0.50%)</title><rect x="872.5" y="309" width="5.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="875.46" y="319.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,686,989 samples, 0.02%)</title><rect x="1122.8" y="453" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1125.76" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (24,427,886 samples, 0.31%)</title><rect x="834.7" y="325" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="837.72" y="335.5" ></text>
</g>
<g >
<title>operator new (5,708,792 samples, 0.07%)</title><rect x="892.9" y="261" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="895.86" y="271.5" ></text>
</g>
<g >
<title>cfree (1,119,222 samples, 0.01%)</title><rect x="788.8" y="309" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="791.75" y="319.5" ></text>
</g>
<g >
<title>cfree (1,243,957 samples, 0.02%)</title><rect x="577.9" y="357" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="580.94" y="367.5" ></text>
</g>
<g >
<title>operator new (828,189 samples, 0.01%)</title><rect x="903.9" y="117" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="906.91" y="127.5" ></text>
</g>
<g >
<title>malloc (278,875,724 samples, 3.50%)</title><rect x="985.9" y="485" width="41.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="988.88" y="495.5" >mal..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (138,593,435 samples, 1.74%)</title><rect x="906.8" y="437" width="20.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="909.76" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (14,828,579 samples, 0.19%)</title><rect x="675.9" y="325" width="2.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="678.86" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,369,057 samples, 0.02%)</title><rect x="845.3" y="293" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="848.35" y="303.5" ></text>
</g>
<g >
<title>[unknown] (3,906,047,040 samples, 49.04%)</title><rect x="585.4" y="501" width="578.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="588.40" y="511.5" >[unknown]</text>
</g>
<g >
<title>tick_nohz_highres_handler (1,328,997 samples, 0.02%)</title><rect x="718.7" y="229" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="721.70" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (710,378 samples, 0.01%)</title><rect x="182.3" y="389" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="185.31" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (18,633,231 samples, 0.23%)</title><rect x="933.5" y="437" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="936.52" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (171,357,893 samples, 2.15%)</title><rect x="695.7" y="389" width="25.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="698.73" y="399.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (13,552,181 samples, 0.17%)</title><rect x="424.5" y="469" width="2.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="427.50" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (266,509,596 samples, 3.35%)</title><rect x="865.0" y="405" width="39.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="867.98" y="415.5" >std..</text>
</g>
<g >
<title>choose_next_point (1,253,684 samples, 0.02%)</title><rect x="304.0" y="469" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="307.05" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,387,942 samples, 0.02%)</title><rect x="425.3" y="389" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="428.25" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (9,500,807 samples, 0.12%)</title><rect x="516.3" y="373" width="1.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="519.28" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (9,768,928 samples, 0.12%)</title><rect x="725.5" y="357" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="728.46" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (186,819,488 samples, 2.35%)</title><rect x="813.3" y="389" width="27.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="816.31" y="399.5" >s..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (1,408,006 samples, 0.02%)</title><rect x="740.1" y="197" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="743.08" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (26,988,817 samples, 0.34%)</title><rect x="218.8" y="373" width="4.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="221.80" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,847,159 samples, 0.06%)</title><rect x="215.4" y="469" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="218.44" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (86,829,537 samples, 1.09%)</title><rect x="706.0" y="325" width="12.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="709.03" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,809,815 samples, 0.02%)</title><rect x="851.4" y="341" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="854.44" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,494,040 samples, 0.08%)</title><rect x="807.9" y="133" width="1.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="810.92" y="143.5" ></text>
</g>
<g >
<title>cfree (1,361,833 samples, 0.02%)</title><rect x="743.9" y="133" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="746.88" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,241,691 samples, 0.02%)</title><rect x="812.2" y="373" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="815.23" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,611,040 samples, 0.02%)</title><rect x="718.7" y="277" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="721.65" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (4,971,943 samples, 0.06%)</title><rect x="884.0" y="293" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="887.01" y="303.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,044,967 samples, 0.01%)</title><rect x="585.5" y="453" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="588.48" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,687,316 samples, 0.02%)</title><rect x="721.9" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="724.92" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (911,703 samples, 0.01%)</title><rect x="81.3" y="453" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="84.33" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,183,689 samples, 0.01%)</title><rect x="518.7" y="373" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="521.67" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (4,994,108 samples, 0.06%)</title><rect x="1181.4" y="501" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1184.45" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,147,173 samples, 0.11%)</title><rect x="1102.6" y="469" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1105.61" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (947,844 samples, 0.01%)</title><rect x="854.8" y="325" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="857.79" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,516,520 samples, 0.03%)</title><rect x="900.7" y="229" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="903.73" y="239.5" ></text>
</g>
<g >
<title>choose_next_point (10,815,292 samples, 0.14%)</title><rect x="1166.6" y="501" width="1.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1169.59" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,154,601 samples, 0.01%)</title><rect x="581.5" y="373" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="584.54" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,809,815 samples, 0.02%)</title><rect x="851.4" y="325" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="854.44" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (985,201 samples, 0.01%)</title><rect x="904.3" y="181" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="907.31" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,412,950 samples, 0.07%)</title><rect x="807.9" y="85" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="810.92" y="95.5" ></text>
</g>
<g >
<title>operator new (5,488,917 samples, 0.07%)</title><rect x="730.1" y="357" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="733.13" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (686,056 samples, 0.01%)</title><rect x="840.9" y="373" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="843.89" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,818,347 samples, 0.04%)</title><rect x="692.1" y="325" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="695.11" y="335.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (3,549,361 samples, 0.04%)</title><rect x="1133.7" y="469" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1136.66" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (710,378 samples, 0.01%)</title><rect x="182.3" y="357" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="185.31" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,079,445 samples, 0.01%)</title><rect x="1168.2" y="501" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1171.19" y="511.5" ></text>
</g>
<g >
<title>malloc (5,253,338 samples, 0.07%)</title><rect x="849.9" y="277" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="852.95" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,473,329 samples, 0.02%)</title><rect x="718.7" y="245" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="721.67" y="255.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (2,195,065 samples, 0.03%)</title><rect x="585.4" y="485" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="588.40" y="495.5" ></text>
</g>
<g >
<title>choose_next_point (10,747,268 samples, 0.13%)</title><rect x="854.9" y="341" width="1.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="857.93" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (18,282,360 samples, 0.23%)</title><rect x="405.7" y="421" width="2.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="408.75" y="431.5" ></text>
</g>
<g >
<title>malloc (853,118 samples, 0.01%)</title><rect x="899.5" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="902.47" y="255.5" ></text>
</g>
<g >
<title>decltype  (1,275,719 samples, 0.02%)</title><rect x="948.1" y="405" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="951.09" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,884,331 samples, 0.04%)</title><rect x="833.8" y="165" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="836.80" y="175.5" ></text>
</g>
<g >
<title>malloc (12,421,775 samples, 0.16%)</title><rect x="1169.5" y="501" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1172.50" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,924,178 samples, 0.02%)</title><rect x="837.9" y="165" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="840.89" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (45,801,074 samples, 0.57%)</title><rect x="941.5" y="469" width="6.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="944.49" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (2,852,744 samples, 0.04%)</title><rect x="573.0" y="469" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="576.04" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (43,097,708 samples, 0.54%)</title><rect x="575.2" y="453" width="6.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="578.16" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (4,899,612 samples, 0.06%)</title><rect x="984.6" y="389" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="987.58" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,170,509 samples, 0.01%)</title><rect x="788.5" y="309" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="791.50" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,260,480 samples, 0.02%)</title><rect x="732.0" y="293" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="735.00" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,113,821 samples, 0.01%)</title><rect x="844.9" y="229" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="847.92" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,122,706 samples, 0.01%)</title><rect x="1182.0" y="485" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1184.96" y="495.5" ></text>
</g>
<g >
<title>get_inbetween_points (4,435,617 samples, 0.06%)</title><rect x="1168.8" y="501" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1171.84" y="511.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (2,085,113 samples, 0.03%)</title><rect x="405.4" y="405" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="408.44" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (35,965,002 samples, 0.45%)</title><rect x="218.8" y="437" width="5.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="221.80" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (2,501,183 samples, 0.03%)</title><rect x="543.4" y="469" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="546.42" y="479.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (4,874,912 samples, 0.06%)</title><rect x="201.4" y="469" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="204.44" y="479.5" ></text>
</g>
<g >
<title>cfree (1,081,699 samples, 0.01%)</title><rect x="985.0" y="197" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="987.96" y="207.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (12,221,567 samples, 0.15%)</title><rect x="1162.2" y="421" width="1.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1165.21" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,930,669 samples, 0.06%)</title><rect x="824.9" y="261" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="827.92" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,270,419 samples, 0.02%)</title><rect x="804.7" y="69" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="807.69" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (143,372,975 samples, 1.80%)</title><rect x="789.8" y="277" width="21.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="792.84" y="287.5" ></text>
</g>
<g >
<title>operator new (8,119,695 samples, 0.10%)</title><rect x="809.7" y="69" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="812.70" y="79.5" ></text>
</g>
<g >
<title>malloc (10,761,320 samples, 0.14%)</title><rect x="759.9" y="325" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="762.87" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (431,953,676 samples, 5.42%)</title><rect x="748.2" y="357" width="64.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="751.24" y="367.5" >std::_R..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (3,629,167 samples, 0.05%)</title><rect x="385.4" y="453" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="388.44" y="463.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (3,889,744 samples, 0.05%)</title><rect x="947.5" y="357" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="950.51" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::_Vector_impl (3,488,872 samples, 0.04%)</title><rect x="92.7" y="437" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="95.74" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,748,455 samples, 0.03%)</title><rect x="904.1" y="277" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="907.05" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (29,397,426 samples, 0.37%)</title><rect x="841.2" y="405" width="4.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="844.19" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (988,479 samples, 0.01%)</title><rect x="869.2" y="341" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="872.20" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (37,294,970 samples, 0.47%)</title><rect x="1156.7" y="405" width="5.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1159.68" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (14,965,480 samples, 0.19%)</title><rect x="675.8" y="341" width="2.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="678.84" y="351.5" ></text>
</g>
<g >
<title>cfree (19,760,851 samples, 0.25%)</title><rect x="901.1" y="261" width="3.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="904.12" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,136,321 samples, 0.01%)</title><rect x="187.8" y="469" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="190.80" y="479.5" ></text>
</g>
<g >
<title>operator delete (969,301 samples, 0.01%)</title><rect x="672.9" y="277" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="675.87" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (6,350,928 samples, 0.08%)</title><rect x="1094.2" y="421" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1097.22" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (3,488,872 samples, 0.04%)</title><rect x="92.7" y="469" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="95.74" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,776,510 samples, 0.02%)</title><rect x="585.1" y="405" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="588.08" y="415.5" ></text>
</g>
<g >
<title>operator new (1,446,792 samples, 0.02%)</title><rect x="672.6" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="675.60" y="271.5" ></text>
</g>
<g >
<title>operator new (966,121 samples, 0.01%)</title><rect x="864.3" y="69" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="867.31" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (2,848,570 samples, 0.04%)</title><rect x="946.3" y="405" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="949.28" y="415.5" ></text>
</g>
<g >
<title>operator delete (1,945,735 samples, 0.02%)</title><rect x="724.7" y="341" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="727.74" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (837,486 samples, 0.01%)</title><rect x="695.3" y="357" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="698.31" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (824,517 samples, 0.01%)</title><rect x="427.4" y="469" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="430.40" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (16,733,424 samples, 0.21%)</title><rect x="188.7" y="469" width="2.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="191.74" y="479.5" ></text>
</g>
<g >
<title>operator new (1,670,513 samples, 0.02%)</title><rect x="900.8" y="133" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="903.83" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (4,995,902 samples, 0.06%)</title><rect x="936.6" y="437" width="0.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="939.55" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,801,155 samples, 0.02%)</title><rect x="813.0" y="405" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="816.05" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (703,956 samples, 0.01%)</title><rect x="721.0" y="309" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="724.01" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,589,007 samples, 0.02%)</title><rect x="695.5" y="405" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="698.49" y="415.5" ></text>
</g>
<g >
<title>operator new (3,184,687 samples, 0.04%)</title><rect x="743.1" y="245" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="746.06" y="255.5" ></text>
</g>
<g >
<title>cfree (16,545,376 samples, 0.21%)</title><rect x="1164.1" y="501" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1167.14" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree (1,468,121 samples, 0.02%)</title><rect x="856.2" y="309" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="859.24" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,122,515 samples, 0.11%)</title><rect x="807.5" y="165" width="1.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="810.53" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (985,201 samples, 0.01%)</title><rect x="904.3" y="229" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="907.31" y="239.5" ></text>
</g>
<g >
<title>is_close_int (41,095,162 samples, 0.52%)</title><rect x="970.1" y="469" width="6.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="973.07" y="479.5" ></text>
</g>
<g >
<title>operator delete (59,530,968 samples, 0.75%)</title><rect x="452.7" y="485" width="8.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="455.65" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,235,985 samples, 0.02%)</title><rect x="984.4" y="357" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="987.40" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (4,207,597 samples, 0.05%)</title><rect x="839.5" y="357" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="842.52" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,753,797 samples, 0.03%)</title><rect x="984.8" y="277" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="987.76" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,236,504 samples, 0.02%)</title><rect x="864.3" y="85" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="867.29" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (828,536 samples, 0.01%)</title><rect x="1095.8" y="421" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1098.85" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (939,989 samples, 0.01%)</title><rect x="851.3" y="293" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="854.31" y="303.5" ></text>
</g>
<g >
<title>operator new (2,560,616 samples, 0.03%)</title><rect x="831.9" y="261" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="834.86" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (18,553,445 samples, 0.23%)</title><rect x="510.6" y="405" width="2.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="513.61" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (976,511 samples, 0.01%)</title><rect x="839.1" y="341" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="842.10" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (24,427,886 samples, 0.31%)</title><rect x="834.7" y="277" width="3.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="837.72" y="287.5" ></text>
</g>
<g >
<title>main (1,067,888 samples, 0.01%)</title><rect x="622.0" y="469" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="624.99" y="479.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (10,290,660 samples, 0.13%)</title><rect x="375.4" y="341" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="378.42" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,524,582 samples, 0.02%)</title><rect x="777.7" y="101" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="780.73" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,350,928 samples, 0.08%)</title><rect x="1094.2" y="373" width="1.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1097.22" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (3,714,197 samples, 0.05%)</title><rect x="837.8" y="229" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="840.79" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,019,956 samples, 0.19%)</title><rect x="503.7" y="405" width="2.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="506.72" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,078,590 samples, 0.01%)</title><rect x="755.5" y="325" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="758.49" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (4,733,524 samples, 0.06%)</title><rect x="755.7" y="325" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="758.72" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,245,361 samples, 0.02%)</title><rect x="903.9" y="197" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="906.87" y="207.5" ></text>
</g>
<g >
<title>operator new (76,040,874 samples, 0.95%)</title><rect x="797.6" y="197" width="11.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="800.61" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (1,474,358 samples, 0.02%)</title><rect x="984.0" y="405" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="986.96" y="415.5" ></text>
</g>
<g >
<title>operator delete (35,614,418 samples, 0.45%)</title><rect x="1171.3" y="501" width="5.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1174.34" y="511.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (15,321,516 samples, 0.19%)</title><rect x="845.5" y="373" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="848.55" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (180,767,650 samples, 2.27%)</title><rect x="339.6" y="405" width="26.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="342.58" y="415.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (54,756,355 samples, 0.69%)</title><rect x="826.2" y="341" width="8.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="829.25" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (36,808,416 samples, 0.46%)</title><rect x="575.2" y="373" width="5.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="578.16" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (14,994,160 samples, 0.19%)</title><rect x="718.9" y="357" width="2.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="721.89" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (7,237,526 samples, 0.09%)</title><rect x="781.6" y="149" width="1.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="784.62" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (12,170,818 samples, 0.15%)</title><rect x="1090.0" y="389" width="1.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1093.00" y="399.5" ></text>
</g>
<g >
<title>cfree (176,566,620 samples, 2.22%)</title><rect x="35.2" y="485" width="26.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="38.23" y="495.5" >c..</text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (38,420,108 samples, 0.48%)</title><rect x="70.7" y="389" width="5.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="73.74" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,748,455 samples, 0.03%)</title><rect x="904.1" y="293" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="907.05" y="303.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (91,382,392 samples, 1.15%)</title><rect x="913.8" y="421" width="13.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="916.75" y="431.5" ></text>
</g>
<g >
<title>decltype  (4,912,640 samples, 0.06%)</title><rect x="580.8" y="389" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="583.81" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (180,941,773 samples, 2.27%)</title><rect x="721.1" y="405" width="26.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="724.11" y="415.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,625,130 samples, 0.03%)</title><rect x="985.3" y="389" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="988.31" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (28,301,827 samples, 0.36%)</title><rect x="841.4" y="373" width="4.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="844.36" y="383.5" ></text>
</g>
<g >
<title>choose_next_point (578,572,255 samples, 7.26%)</title><rect x="304.4" y="485" width="85.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="307.45" y="495.5" >choose_nex..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (4,837,109 samples, 0.06%)</title><rect x="855.3" y="293" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="858.28" y="303.5" ></text>
</g>
<g >
<title>__libc_start_main (833,528 samples, 0.01%)</title><rect x="622.2" y="485" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="625.15" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (11,757,648 samples, 0.15%)</title><rect x="979.2" y="421" width="1.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="982.25" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (701,284 samples, 0.01%)</title><rect x="985.5" y="277" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="988.51" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,791,549 samples, 0.02%)</title><rect x="753.0" y="245" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="755.95" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,516,520 samples, 0.03%)</title><rect x="900.7" y="181" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="903.73" y="191.5" ></text>
</g>
<g >
<title>operator new (704,726 samples, 0.01%)</title><rect x="761.5" y="325" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="764.52" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,379,186 samples, 0.03%)</title><rect x="777.7" y="165" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="780.67" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (5,959,170 samples, 0.07%)</title><rect x="1086.4" y="469" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1089.42" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (3,899,485 samples, 0.05%)</title><rect x="554.6" y="485" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="557.61" y="495.5" ></text>
</g>
<g >
<title>operator new (13,171,498 samples, 0.17%)</title><rect x="849.3" y="293" width="2.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="852.33" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (30,739,497 samples, 0.39%)</title><rect x="379.2" y="437" width="4.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="382.21" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (828,536 samples, 0.01%)</title><rect x="1095.8" y="357" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1098.85" y="367.5" ></text>
</g>
<g >
<title>malloc (1,221,125 samples, 0.02%)</title><rect x="838.6" y="229" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="841.61" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (25,877,080 samples, 0.32%)</title><rect x="784.0" y="117" width="3.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="786.96" y="127.5" ></text>
</g>
<g >
<title>operator delete (3,306,197 samples, 0.04%)</title><rect x="675.1" y="261" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="678.10" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (24,694,663 samples, 0.31%)</title><rect x="841.9" y="341" width="3.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="844.89" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (826,357 samples, 0.01%)</title><rect x="857.5" y="149" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="860.46" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::~allocator (2,622,646 samples, 0.03%)</title><rect x="386.7" y="421" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="389.70" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (19,760,851 samples, 0.25%)</title><rect x="901.1" y="277" width="3.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="904.12" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (102,573,382 samples, 1.29%)</title><rect x="393.5" y="453" width="15.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="396.50" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (675,210 samples, 0.01%)</title><rect x="984.4" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="987.40" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (245,884,505 samples, 3.09%)</title><rect x="585.7" y="485" width="36.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="588.73" y="495.5" >[li..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (13,355,307 samples, 0.17%)</title><rect x="981.6" y="421" width="2.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="984.57" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (66,780,319 samples, 0.84%)</title><rect x="668.3" y="389" width="9.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="671.35" y="399.5" ></text>
</g>
<g >
<title>all (7,965,782,167 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (908,316 samples, 0.01%)</title><rect x="863.9" y="117" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="866.93" y="127.5" ></text>
</g>
<g >
<title>malloc (1,554,512 samples, 0.02%)</title><rect x="728.9" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="731.92" y="367.5" ></text>
</g>
<g >
<title>get_inbetween_points (4,042,527 samples, 0.05%)</title><rect x="856.8" y="197" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="859.82" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,154,601 samples, 0.01%)</title><rect x="581.5" y="421" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="584.54" y="431.5" ></text>
</g>
<g >
<title>operator delete (2,414,153 samples, 0.03%)</title><rect x="831.5" y="261" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="834.50" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,142,695 samples, 0.01%)</title><rect x="892.5" y="229" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="895.47" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (49,516,537 samples, 0.62%)</title><rect x="1156.7" y="437" width="7.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1159.68" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (4,170,121 samples, 0.05%)</title><rect x="979.9" y="405" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="982.92" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (691,197 samples, 0.01%)</title><rect x="769.7" y="165" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="772.68" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,855,425 samples, 0.06%)</title><rect x="184.7" y="469" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="187.74" y="479.5" ></text>
</g>
<g >
<title>operator new (1,479,518 samples, 0.02%)</title><rect x="677.6" y="261" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="680.60" y="271.5" ></text>
</g>
<g >
<title>malloc (169,646,928 samples, 2.13%)</title><rect x="427.5" y="485" width="25.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="430.52" y="495.5" >m..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,275,719 samples, 0.02%)</title><rect x="948.1" y="421" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="951.09" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (2,479,272 samples, 0.03%)</title><rect x="1113.7" y="469" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1116.66" y="479.5" ></text>
</g>
<g >
<title>operator delete (2,473,395 samples, 0.03%)</title><rect x="739.3" y="245" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="742.26" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (173,748,896 samples, 2.18%)</title><rect x="762.1" y="277" width="25.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="765.14" y="287.5" >s..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (9,563,428 samples, 0.12%)</title><rect x="396.8" y="437" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="399.80" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (3,735,187 samples, 0.05%)</title><rect x="833.8" y="213" width="0.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="836.80" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (34,651,490 samples, 0.44%)</title><rect x="894.0" y="261" width="5.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="897.01" y="271.5" ></text>
</g>
<g >
<title>cfree (1,380,686 samples, 0.02%)</title><rect x="899.3" y="245" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="902.27" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (19,760,851 samples, 0.25%)</title><rect x="901.1" y="341" width="3.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="904.12" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,062,929 samples, 0.03%)</title><rect x="585.1" y="453" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="588.08" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (33,743,585 samples, 0.42%)</title><rect x="782.9" y="213" width="5.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="785.88" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (689,744 samples, 0.01%)</title><rect x="188.5" y="469" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="191.52" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (21,253,554 samples, 0.27%)</title><rect x="743.6" y="213" width="3.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="746.57" y="223.5" ></text>
</g>
<g >
<title>operator new (5,810,646 samples, 0.07%)</title><rect x="856.8" y="213" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="859.81" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,113,821 samples, 0.01%)</title><rect x="844.9" y="261" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="847.92" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,114,717 samples, 0.01%)</title><rect x="984.8" y="213" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="987.76" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (12,170,818 samples, 0.15%)</title><rect x="1090.0" y="421" width="1.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1093.00" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (703,956 samples, 0.01%)</title><rect x="721.0" y="277" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="724.01" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (26,283,286 samples, 0.33%)</title><rect x="847.8" y="405" width="3.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="850.82" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (24,473,471 samples, 0.31%)</title><rect x="847.8" y="357" width="3.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="850.82" y="367.5" ></text>
</g>
<g >
<title>operator delete (1,116,027 samples, 0.01%)</title><rect x="862.5" y="181" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="865.53" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (2,506,183 samples, 0.03%)</title><rect x="945.4" y="421" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="948.44" y="431.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (73,836,710 samples, 0.93%)</title><rect x="66.4" y="469" width="10.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="69.36" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (12,086,962 samples, 0.15%)</title><rect x="382.0" y="405" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="384.97" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,598,677 samples, 0.02%)</title><rect x="893.8" y="181" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="896.77" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (10,290,660 samples, 0.13%)</title><rect x="375.4" y="373" width="1.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="378.42" y="383.5" ></text>
</g>
<g >
<title>cfree (4,764,328 samples, 0.06%)</title><rect x="834.9" y="245" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="837.93" y="255.5" ></text>
</g>
<g >
<title>get_inbetween_points (58,329,477 samples, 0.73%)</title><rect x="84.7" y="485" width="8.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="87.68" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (48,572,216 samples, 0.61%)</title><rect x="371.4" y="453" width="7.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="374.39" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (9,500,807 samples, 0.12%)</title><rect x="516.3" y="405" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="519.28" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (89,559,845 samples, 1.12%)</title><rect x="851.7" y="389" width="13.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="854.71" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,873,148 samples, 0.02%)</title><rect x="886.8" y="341" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="889.82" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,971,420 samples, 0.06%)</title><rect x="944.7" y="389" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="947.70" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (9,736,631 samples, 0.12%)</title><rect x="79.2" y="421" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="82.15" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (15,178,067 samples, 0.19%)</title><rect x="845.6" y="341" width="2.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="848.57" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (5,959,170 samples, 0.07%)</title><rect x="1086.4" y="437" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1089.42" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (971,053 samples, 0.01%)</title><rect x="678.1" y="309" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="681.10" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (1,433,100 samples, 0.02%)</title><rect x="181.8" y="437" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="184.78" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (10,819,098 samples, 0.14%)</title><rect x="751.6" y="309" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="754.64" y="319.5" ></text>
</g>
<g >
<title>get_inbetween_points (26,283,286 samples, 0.33%)</title><rect x="847.8" y="421" width="3.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="850.82" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (13,355,307 samples, 0.17%)</title><rect x="981.6" y="453" width="2.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="984.57" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,794,095 samples, 0.02%)</title><rect x="816.7" y="309" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="819.73" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum (5,762,537 samples, 0.07%)</title><rect x="934.4" y="389" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="937.44" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (11,817,030 samples, 0.15%)</title><rect x="77.3" y="453" width="1.8" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="80.30" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (6,584,559 samples, 0.08%)</title><rect x="404.5" y="405" width="0.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="407.46" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (8,795,697 samples, 0.11%)</title><rect x="541.6" y="469" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="544.59" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,249,181 samples, 0.08%)</title><rect x="579.6" y="261" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="582.59" y="271.5" ></text>
</g>
<g >
<title>main (14,667,118 samples, 0.18%)</title><rect x="983.7" y="485" width="2.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="986.71" y="495.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (6,706,236 samples, 0.08%)</title><rect x="1134.2" y="469" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1137.19" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (1,233,676 samples, 0.02%)</title><rect x="1168.7" y="469" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1171.66" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,472,481 samples, 0.02%)</title><rect x="667.6" y="405" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="670.65" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,994,985 samples, 0.03%)</title><rect x="851.0" y="277" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="853.99" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::~_Rb_tree_impl (1,267,781 samples, 0.02%)</title><rect x="840.6" y="373" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="843.61" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (937,175 samples, 0.01%)</title><rect x="202.7" y="469" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="205.74" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (49,190,934 samples, 0.62%)</title><rect x="668.6" y="309" width="7.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="671.55" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,245,703 samples, 0.03%)</title><rect x="881.7" y="245" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="884.74" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (819,756 samples, 0.01%)</title><rect x="845.4" y="261" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="848.43" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,893,033 samples, 0.05%)</title><rect x="180.6" y="421" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="183.57" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_check_len (1,815,389 samples, 0.02%)</title><rect x="84.2" y="421" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="87.23" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (1,836,578 samples, 0.02%)</title><rect x="938.0" y="453" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="941.04" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (2,748,455 samples, 0.03%)</title><rect x="904.1" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="907.05" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,516,520 samples, 0.03%)</title><rect x="900.7" y="149" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="903.73" y="159.5" ></text>
</g>
<g >
<title>void std::__relocate_object_a&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (8,148,802 samples, 0.10%)</title><rect x="407.2" y="373" width="1.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="410.25" y="383.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (51,450,982 samples, 0.65%)</title><rect x="1114.0" y="453" width="7.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1117.03" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,139,636 samples, 0.06%)</title><rect x="811.4" y="229" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="814.40" y="239.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (1,117,583 samples, 0.01%)</title><rect x="426.1" y="405" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="429.14" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,924,178 samples, 0.02%)</title><rect x="837.9" y="181" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="840.89" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (46,617,630 samples, 0.59%)</title><rect x="887.1" y="341" width="6.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="890.10" y="351.5" ></text>
</g>
<g >
<title>update_process_times (701,810 samples, 0.01%)</title><rect x="704.0" y="245" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="707.01" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (964,250 samples, 0.01%)</title><rect x="92.2" y="405" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="95.24" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (6,800,684 samples, 0.09%)</title><rect x="931.7" y="421" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="934.71" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (770,396 samples, 0.01%)</title><rect x="667.9" y="373" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="670.88" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (6,893,713 samples, 0.09%)</title><rect x="938.7" y="437" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="941.73" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (32,003,729 samples, 0.40%)</title><rect x="834.4" y="341" width="4.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="837.36" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,233,433 samples, 0.02%)</title><rect x="693.4" y="309" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="696.42" y="319.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (171,357,893 samples, 2.15%)</title><rect x="695.7" y="405" width="25.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="698.73" y="415.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,791,549 samples, 0.02%)</title><rect x="753.0" y="261" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="755.95" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (15,321,516 samples, 0.19%)</title><rect x="845.5" y="389" width="2.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="848.55" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,837,263 samples, 0.05%)</title><rect x="871.9" y="325" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="874.89" y="335.5" ></text>
</g>
<g >
<title>operator delete (3,375,134 samples, 0.04%)</title><rect x="804.9" y="181" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="807.90" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (48,048,389 samples, 0.60%)</title><rect x="894.0" y="293" width="7.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="897.01" y="303.5" ></text>
</g>
<g >
<title>round@plt (1,371,992 samples, 0.02%)</title><rect x="1079.2" y="485" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1082.18" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,288,501 samples, 0.04%)</title><rect x="179.0" y="469" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="181.97" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,180,836 samples, 0.07%)</title><rect x="754.9" y="341" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="757.94" y="351.5" ></text>
</g>
<g >
<title>malloc (1,641,414 samples, 0.02%)</title><rect x="857.4" y="197" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="860.42" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_minimum (6,099,329 samples, 0.08%)</title><rect x="756.4" y="341" width="0.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="759.42" y="351.5" ></text>
</g>
<g >
<title>cfree (848,698 samples, 0.01%)</title><rect x="838.5" y="229" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="841.49" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,353,028 samples, 0.03%)</title><rect x="1096.9" y="437" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1099.87" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (841,564 samples, 0.01%)</title><rect x="892.6" y="261" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="895.63" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,269,095 samples, 0.02%)</title><rect x="692.6" y="309" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="695.55" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (97,026,870 samples, 1.22%)</title><rect x="732.3" y="309" width="14.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="735.35" y="319.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (764,713 samples, 0.01%)</title><rect x="686.1" y="293" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="689.09" y="303.5" ></text>
</g>
<g >
<title>cfree (2,485,188 samples, 0.03%)</title><rect x="848.8" y="293" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="851.76" y="303.5" ></text>
</g>
<g >
<title>operator delete (1,072,648 samples, 0.01%)</title><rect x="850.7" y="277" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="853.73" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (1,587,981 samples, 0.02%)</title><rect x="408.5" y="421" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="411.46" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,269,095 samples, 0.02%)</title><rect x="692.6" y="325" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="695.55" y="335.5" ></text>
</g>
<g >
<title>decltype  (842,059 samples, 0.01%)</title><rect x="742.5" y="149" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="745.50" y="159.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (703,956 samples, 0.01%)</title><rect x="721.0" y="245" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="724.01" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (347,095,242 samples, 4.36%)</title><rect x="320.0" y="469" width="51.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="322.98" y="479.5" >std::..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,183,689 samples, 0.01%)</title><rect x="518.7" y="389" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="521.67" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (701,284 samples, 0.01%)</title><rect x="985.5" y="341" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="988.51" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (2,479,199 samples, 0.03%)</title><rect x="78.3" y="421" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="81.33" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (50,865,048 samples, 0.64%)</title><rect x="513.4" y="453" width="7.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="516.35" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,338,117 samples, 0.03%)</title><rect x="78.3" y="389" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="81.33" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (14,828,579 samples, 0.19%)</title><rect x="675.9" y="309" width="2.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="678.86" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (82,891,968 samples, 1.04%)</title><rect x="1087.3" y="469" width="12.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1090.30" y="479.5" ></text>
</g>
<g >
<title>malloc (36,640,643 samples, 0.46%)</title><rect x="772.6" y="197" width="5.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="775.61" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (146,795,167 samples, 1.84%)</title><rect x="532.9" y="485" width="21.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="535.86" y="495.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (1,542,139 samples, 0.02%)</title><rect x="695.2" y="405" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="698.20" y="415.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_right (3,954,419 samples, 0.05%)</title><rect x="202.2" y="469" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="205.16" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (1,899,869 samples, 0.02%)</title><rect x="839.2" y="341" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="842.24" y="351.5" ></text>
</g>
<g >
<title>decltype  (9,563,428 samples, 0.12%)</title><rect x="396.8" y="421" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="399.80" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (990,977 samples, 0.01%)</title><rect x="817.0" y="309" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="820.03" y="319.5" ></text>
</g>
<g >
<title>operator new (708,564 samples, 0.01%)</title><rect x="862.7" y="181" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="865.70" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (49,190,934 samples, 0.62%)</title><rect x="668.6" y="341" width="7.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="671.55" y="351.5" ></text>
</g>
<g >
<title>operator new (18,484,005 samples, 0.23%)</title><rect x="673.0" y="277" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="676.02" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (45,717,814 samples, 0.57%)</title><rect x="857.7" y="309" width="6.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="860.73" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::~allocator (824,517 samples, 0.01%)</title><rect x="427.4" y="421" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="430.40" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (38,420,108 samples, 0.48%)</title><rect x="70.7" y="405" width="5.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="73.74" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,088,630 samples, 0.01%)</title><rect x="857.4" y="181" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="860.42" y="191.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,179,822 samples, 0.07%)</title><rect x="882.2" y="293" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="885.17" y="303.5" ></text>
</g>
<g >
<title>malloc (1,272,548 samples, 0.02%)</title><rect x="795.6" y="181" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="798.65" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (26,283,286 samples, 0.33%)</title><rect x="847.8" y="389" width="3.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="850.82" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (7,032,467 samples, 0.09%)</title><rect x="724.4" y="357" width="1.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="727.42" y="367.5" ></text>
</g>
<g >
<title>operator new (683,417 samples, 0.01%)</title><rect x="820.1" y="261" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="823.09" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (5,826,408 samples, 0.07%)</title><rect x="855.2" y="309" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="858.22" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (681,431 samples, 0.01%)</title><rect x="845.4" y="213" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="848.43" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,733,537 samples, 0.02%)</title><rect x="825.3" y="213" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="828.27" y="223.5" ></text>
</g>
<g >
<title>operator new (1,390,555 samples, 0.02%)</title><rect x="805.4" y="181" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="808.40" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (710,378 samples, 0.01%)</title><rect x="182.3" y="405" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="185.31" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (35,710,313 samples, 0.45%)</title><rect x="976.3" y="469" width="5.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="979.28" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (70,232,071 samples, 0.88%)</title><rect x="192.5" y="485" width="10.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="195.48" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,183,689 samples, 0.01%)</title><rect x="518.7" y="357" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="521.67" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (54,756,355 samples, 0.69%)</title><rect x="826.2" y="309" width="8.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="829.25" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (7,838,590 samples, 0.10%)</title><rect x="183.6" y="469" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="186.58" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (4,298,286 samples, 0.05%)</title><rect x="812.4" y="357" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="815.41" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,072,840 samples, 0.01%)</title><rect x="1167.6" y="453" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1170.65" y="463.5" ></text>
</g>
<g >
<title>operator new (845,225 samples, 0.01%)</title><rect x="904.3" y="101" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="907.31" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,956,194 samples, 0.04%)</title><rect x="742.1" y="181" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="745.06" y="191.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (51,450,982 samples, 0.65%)</title><rect x="1114.0" y="469" width="7.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1117.03" y="479.5" ></text>
</g>
<g >
<title>malloc (185,930,049 samples, 2.33%)</title><rect x="93.3" y="485" width="27.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="96.32" y="495.5" >m..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (6,800,684 samples, 0.09%)</title><rect x="931.7" y="405" width="1.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="934.71" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,516,520 samples, 0.03%)</title><rect x="900.7" y="213" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="903.73" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (968,859 samples, 0.01%)</title><rect x="425.5" y="421" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="428.46" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (142,825,557 samples, 1.79%)</title><rect x="789.8" y="245" width="21.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="792.84" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (11,375,617 samples, 0.14%)</title><rect x="809.3" y="181" width="1.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="812.31" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (25,877,080 samples, 0.32%)</title><rect x="784.0" y="197" width="3.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="786.96" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (49,516,537 samples, 0.62%)</title><rect x="1156.7" y="453" width="7.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1159.68" y="463.5" ></text>
</g>
<g >
<title>operator new (92,524,723 samples, 1.16%)</title><rect x="769.0" y="213" width="13.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="771.98" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (93,690,888 samples, 1.18%)</title><rect x="825.6" y="357" width="13.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="828.65" y="367.5" ></text>
</g>
<g >
<title>malloc (1,391,066 samples, 0.02%)</title><rect x="849.1" y="293" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="852.13" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,430,052 samples, 0.02%)</title><rect x="892.4" y="245" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="895.42" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (5,834,002 samples, 0.07%)</title><rect x="1111.0" y="469" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1113.96" y="479.5" ></text>
</g>
<g >
<title>cfree (16,187,773 samples, 0.20%)</title><rect x="794.8" y="197" width="2.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="797.77" y="207.5" ></text>
</g>
<g >
<title>operator new (7,215,441 samples, 0.09%)</title><rect x="751.8" y="213" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="754.84" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (4,212,759 samples, 0.05%)</title><rect x="978.2" y="389" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="981.23" y="399.5" ></text>
</g>
<g >
<title>malloc (8,847,699 samples, 0.11%)</title><rect x="835.6" y="245" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="838.63" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,810,646 samples, 0.07%)</title><rect x="856.8" y="277" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="859.81" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,208,216 samples, 0.08%)</title><rect x="584.5" y="485" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="587.46" y="495.5" ></text>
</g>
<g >
<title>operator delete (137,138,032 samples, 1.72%)</title><rect x="120.9" y="485" width="20.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="123.86" y="495.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,188,903 samples, 0.03%)</title><rect x="1182.5" y="469" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1185.53" y="479.5" ></text>
</g>
<g >
<title>choose_next_point (1,929,466,870 samples, 24.22%)</title><rect x="653.9" y="485" width="285.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="656.94" y="495.5" >choose_next_point</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (985,200 samples, 0.01%)</title><rect x="761.6" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="764.65" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (4,436,018 samples, 0.06%)</title><rect x="520.2" y="437" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="523.23" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (3,883,192 samples, 0.05%)</title><rect x="80.8" y="421" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="83.76" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,245,361 samples, 0.02%)</title><rect x="903.9" y="213" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="906.87" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (6,043,120 samples, 0.08%)</title><rect x="426.5" y="421" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="429.51" y="431.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (34,573,423 samples, 0.43%)</title><rect x="976.5" y="437" width="5.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="979.45" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,956,194 samples, 0.04%)</title><rect x="742.1" y="133" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="745.06" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (6,249,181 samples, 0.08%)</title><rect x="579.6" y="277" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="582.59" y="287.5" ></text>
</g>
<g >
<title>decltype  (1,267,506 samples, 0.02%)</title><rect x="377.0" y="357" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="380.00" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,111,584 samples, 0.01%)</title><rect x="690.3" y="277" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="693.28" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (12,086,962 samples, 0.15%)</title><rect x="382.0" y="389" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="384.97" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,207,669 samples, 0.02%)</title><rect x="83.9" y="421" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="86.93" y="431.5" ></text>
</g>
<g >
<title>std::abs (4,140,071 samples, 0.05%)</title><rect x="975.5" y="453" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="978.55" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,091,479 samples, 0.01%)</title><rect x="856.1" y="293" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="859.08" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (675,964 samples, 0.01%)</title><rect x="818.0" y="325" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="820.97" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,810,646 samples, 0.07%)</title><rect x="856.8" y="261" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="859.81" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (24,089,237 samples, 0.30%)</title><rect x="581.8" y="501" width="3.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="584.81" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (690,840 samples, 0.01%)</title><rect x="985.2" y="309" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="988.16" y="319.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (950,775 samples, 0.01%)</title><rect x="421.2" y="469" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="424.20" y="479.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (26,283,286 samples, 0.33%)</title><rect x="847.8" y="373" width="3.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="850.82" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (2,484,837 samples, 0.03%)</title><rect x="838.5" y="277" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="841.47" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (15,019,956 samples, 0.19%)</title><rect x="503.7" y="469" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="506.72" y="479.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (711,750 samples, 0.01%)</title><rect x="946.7" y="405" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="949.70" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (15,638,220 samples, 0.20%)</title><rect x="883.2" y="341" width="2.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="886.23" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (837,515 samples, 0.01%)</title><rect x="555.1" y="469" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="558.06" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,245,361 samples, 0.02%)</title><rect x="903.9" y="229" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="906.87" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (25,877,080 samples, 0.32%)</title><rect x="784.0" y="165" width="3.8" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="786.96" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (891,838 samples, 0.01%)</title><rect x="863.8" y="101" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="866.80" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,994,172 samples, 0.03%)</title><rect x="804.6" y="165" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="807.60" y="175.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,638,916 samples, 0.06%)</title><rect x="747.0" y="341" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="749.97" y="351.5" ></text>
</g>
<g >
<title>operator new (1,217,772 samples, 0.02%)</title><rect x="985.0" y="213" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="987.96" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (4,232,827 samples, 0.05%)</title><rect x="693.7" y="373" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="696.67" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,748,455 samples, 0.03%)</title><rect x="904.1" y="341" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="907.05" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (6,350,928 samples, 0.08%)</title><rect x="1094.2" y="389" width="1.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1097.22" y="399.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (34,007,817 samples, 0.43%)</title><rect x="366.4" y="421" width="5.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="369.36" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (36,808,416 samples, 0.46%)</title><rect x="575.2" y="421" width="5.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="578.16" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (891,838 samples, 0.01%)</title><rect x="863.8" y="85" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="866.80" y="95.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (1,056,430 samples, 0.01%)</title><rect x="984.0" y="357" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="987.00" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (9,500,807 samples, 0.12%)</title><rect x="516.3" y="421" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="519.28" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (11,241,787 samples, 0.14%)</title><rect x="809.3" y="117" width="1.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="812.33" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1,081,081 samples, 0.01%)</title><rect x="983.6" y="437" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="986.55" y="447.5" ></text>
</g>
<g >
<title>operator new (949,874 samples, 0.01%)</title><rect x="893.9" y="149" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="896.85" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (143,372,975 samples, 1.80%)</title><rect x="789.8" y="293" width="21.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="792.84" y="303.5" ></text>
</g>
<g >
<title>cfree (47,901,870 samples, 0.60%)</title><rect x="894.0" y="277" width="7.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="897.01" y="287.5" ></text>
</g>
<g >
<title>operator delete (5,085,754 samples, 0.06%)</title><rect x="778.0" y="197" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="781.04" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (98,126,580 samples, 1.23%)</title><rect x="732.3" y="357" width="14.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="735.35" y="367.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (14,205,733 samples, 0.18%)</title><rect x="691.6" y="357" width="2.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="694.57" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (770,396 samples, 0.01%)</title><rect x="667.9" y="389" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="670.88" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (3,813,232 samples, 0.05%)</title><rect x="812.5" y="341" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="815.48" y="351.5" ></text>
</g>
<g >
<title>malloc (3,297,809 samples, 0.04%)</title><rect x="768.4" y="213" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="771.39" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,127,519 samples, 0.01%)</title><rect x="703.9" y="293" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="706.95" y="303.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (5,425,537 samples, 0.07%)</title><rect x="1122.3" y="469" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1125.25" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (14,031,486 samples, 0.18%)</title><rect x="740.5" y="245" width="2.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="743.55" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_root (1,856,516 samples, 0.02%)</title><rect x="936.3" y="437" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="939.28" y="447.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; &gt; (8,148,802 samples, 0.10%)</title><rect x="407.2" y="357" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="410.25" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,243,805 samples, 0.12%)</title><rect x="912.4" y="421" width="1.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="915.38" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (144,469,509 samples, 1.81%)</title><rect x="789.7" y="309" width="21.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="792.67" y="319.5" >s..</text>
</g>
<g >
<title>gen_all_points (125,143,644 samples, 1.57%)</title><rect x="390.2" y="485" width="18.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="393.15" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,412,950 samples, 0.07%)</title><rect x="807.9" y="117" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="810.92" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (24,427,886 samples, 0.31%)</title><rect x="834.7" y="293" width="3.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="837.72" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (2,282,073 samples, 0.03%)</title><rect x="886.3" y="357" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="889.34" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (700,532 samples, 0.01%)</title><rect x="725.2" y="341" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="728.21" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (1,334,872 samples, 0.02%)</title><rect x="984.0" y="373" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="986.96" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (985,201 samples, 0.01%)</title><rect x="904.3" y="117" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="907.31" y="127.5" ></text>
</g>
<g >
<title>choose_next_point (1,638,051,389 samples, 20.56%)</title><rect x="661.8" y="437" width="242.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="664.81" y="447.5" >choose_next_point</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (4,899,612 samples, 0.06%)</title><rect x="984.6" y="405" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="987.58" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~vector (9,773,773 samples, 0.12%)</title><rect x="938.3" y="469" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="941.31" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,914,257 samples, 0.05%)</title><rect x="813.7" y="373" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="816.69" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (1,053,720 samples, 0.01%)</title><rect x="686.2" y="261" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="689.21" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (97,026,870 samples, 1.22%)</title><rect x="732.3" y="325" width="14.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="735.35" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,149,233 samples, 0.08%)</title><rect x="837.4" y="245" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="840.43" y="255.5" ></text>
</g>
<g >
<title>operator new (51,487,407 samples, 0.65%)</title><rect x="735.0" y="261" width="7.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="738.00" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::vector (6,043,120 samples, 0.08%)</title><rect x="426.5" y="469" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="429.51" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,516,520 samples, 0.03%)</title><rect x="900.7" y="197" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="903.73" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (710,378 samples, 0.01%)</title><rect x="182.3" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="185.31" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,101,304 samples, 0.04%)</title><rect x="981.0" y="389" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="983.99" y="399.5" ></text>
</g>
<g >
<title>operator delete (2,197,706 samples, 0.03%)</title><rect x="844.4" y="309" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="847.38" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (826,357 samples, 0.01%)</title><rect x="857.5" y="133" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="860.46" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (8,626,669 samples, 0.11%)</title><rect x="946.8" y="389" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="949.81" y="399.5" ></text>
</g>
<g >
<title>do_group_exit (720,798 samples, 0.01%)</title><rect x="1168.2" y="453" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1171.23" y="463.5" ></text>
</g>
<g >
<title>cfree (18,074,209 samples, 0.23%)</title><rect x="769.8" y="197" width="2.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="772.78" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,809,815 samples, 0.02%)</title><rect x="851.4" y="309" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="854.44" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (24,473,471 samples, 0.31%)</title><rect x="847.8" y="325" width="3.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="850.82" y="335.5" ></text>
</g>
<g >
<title>std::abs (692,545 samples, 0.01%)</title><rect x="91.7" y="453" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="94.71" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,810,646 samples, 0.07%)</title><rect x="856.8" y="309" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="859.81" y="319.5" ></text>
</g>
<g >
<title>cfree (10,733,860 samples, 0.13%)</title><rect x="899.1" y="261" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="902.14" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (977,108 samples, 0.01%)</title><rect x="1169.3" y="469" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1172.34" y="479.5" ></text>
</g>
<g >
<title>operator new (2,218,495 samples, 0.03%)</title><rect x="903.5" y="229" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="906.48" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (21,523,558 samples, 0.27%)</title><rect x="779.5" y="197" width="3.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="782.50" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,549,877 samples, 0.02%)</title><rect x="703.9" y="341" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="706.93" y="351.5" ></text>
</g>
<g >
<title>get_inbetween_points (108,521,488 samples, 1.36%)</title><rect x="678.2" y="405" width="16.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="681.24" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,400,985 samples, 0.02%)</title><rect x="985.5" y="357" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="988.49" y="367.5" ></text>
</g>
<g >
<title>roundf32x (6,984,380 samples, 0.09%)</title><rect x="174.7" y="485" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="177.69" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (9,610,200 samples, 0.12%)</title><rect x="1111.8" y="469" width="1.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1114.83" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (690,840 samples, 0.01%)</title><rect x="985.2" y="261" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="988.16" y="271.5" ></text>
</g>
<g >
<title>gen_all_points (57,517,290 samples, 0.72%)</title><rect x="939.8" y="485" width="8.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="942.76" y="495.5" ></text>
</g>
<g >
<title>std::abs (2,251,136 samples, 0.03%)</title><rect x="690.5" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="693.51" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (24,427,886 samples, 0.31%)</title><rect x="834.7" y="261" width="3.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="837.72" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,516,520 samples, 0.03%)</title><rect x="900.7" y="165" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="903.73" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (170,314,212 samples, 2.14%)</title><rect x="10.0" y="485" width="25.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >[..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (98,126,580 samples, 1.23%)</title><rect x="732.3" y="341" width="14.6" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="735.35" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,411,212 samples, 0.03%)</title><rect x="78.7" y="421" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="81.70" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (1,207,669 samples, 0.02%)</title><rect x="83.9" y="389" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="86.93" y="399.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (5,947,179 samples, 0.07%)</title><rect x="91.9" y="437" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="94.86" y="447.5" ></text>
</g>
<g >
<title>choose_next_point (1,067,888 samples, 0.01%)</title><rect x="622.0" y="453" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="624.99" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (2,818,347 samples, 0.04%)</title><rect x="692.1" y="341" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="695.11" y="351.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (4,638,916 samples, 0.06%)</title><rect x="747.0" y="325" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="749.97" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;int, int&gt; const&amp;, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (18,380,768 samples, 0.23%)</title><rect x="880.2" y="341" width="2.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="883.21" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (1,085,710 samples, 0.01%)</title><rect x="92.2" y="421" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="95.22" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,245,361 samples, 0.02%)</title><rect x="903.9" y="245" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="906.87" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;::operator-- (806,643 samples, 0.01%)</title><rect x="188.6" y="469" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="191.62" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (1,116,663 samples, 0.01%)</title><rect x="304.0" y="437" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="307.05" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,240,242 samples, 0.08%)</title><rect x="675.9" y="277" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="678.88" y="287.5" ></text>
</g>
<g >
<title>operator new (1,535,401 samples, 0.02%)</title><rect x="580.3" y="213" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="583.29" y="223.5" ></text>
</g>
<g >
<title>operator new (19,212,755 samples, 0.24%)</title><rect x="784.8" y="85" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="787.83" y="95.5" ></text>
</g>
<g >
<title>cfree (5,760,075 samples, 0.07%)</title><rect x="672.0" y="277" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="675.00" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (18,553,445 samples, 0.23%)</title><rect x="510.6" y="389" width="2.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="513.61" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,535,385 samples, 0.02%)</title><rect x="979.0" y="389" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="982.02" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,139,636 samples, 0.06%)</title><rect x="811.4" y="245" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="814.40" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (102,573,382 samples, 1.29%)</title><rect x="393.5" y="469" width="15.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="396.50" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (3,707,406 samples, 0.05%)</title><rect x="855.4" y="277" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="858.45" y="287.5" ></text>
</g>
<g >
<title>operator new (30,106,781 samples, 0.38%)</title><rect x="1176.6" y="501" width="4.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1179.62" y="511.5" ></text>
</g>
<g >
<title>cfree (10,486,561 samples, 0.13%)</title><rect x="826.8" y="261" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="829.78" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (23,919,449 samples, 0.30%)</title><rect x="972.0" y="453" width="3.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="975.00" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Vector_base (3,864,164 samples, 0.05%)</title><rect x="81.8" y="453" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="84.83" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,802,967 samples, 0.02%)</title><rect x="832.4" y="261" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="835.40" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (681,517 samples, 0.01%)</title><rect x="731.0" y="357" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="734.03" y="367.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (850,856 samples, 0.01%)</title><rect x="834.2" y="181" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="837.23" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (3,009,714 samples, 0.04%)</title><rect x="837.9" y="213" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="840.89" y="223.5" ></text>
</g>
<g >
<title>[[stack]] (1,445,472,473 samples, 18.15%)</title><rect x="10.0" y="501" width="214.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[[stack]]</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (6,290,695 samples, 0.08%)</title><rect x="69.8" y="421" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="72.81" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (19,749,169 samples, 0.25%)</title><rect x="806.0" y="181" width="2.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="808.95" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (45,717,814 samples, 0.57%)</title><rect x="857.7" y="293" width="6.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="860.73" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;::pair&lt;int, double&gt; (841,848 samples, 0.01%)</title><rect x="976.2" y="469" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="979.16" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (8,489,311 samples, 0.11%)</title><rect x="191.2" y="485" width="1.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="194.22" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,776,510 samples, 0.02%)</title><rect x="585.1" y="389" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="588.08" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,484,837 samples, 0.03%)</title><rect x="838.5" y="261" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="841.47" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,709,126 samples, 0.02%)</title><rect x="804.6" y="101" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="807.62" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (828,536 samples, 0.01%)</title><rect x="1095.8" y="405" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1098.85" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (10,290,660 samples, 0.13%)</title><rect x="375.4" y="357" width="1.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="378.42" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (6,046,241 samples, 0.08%)</title><rect x="1097.2" y="453" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1100.22" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (8,748,916 samples, 0.11%)</title><rect x="751.7" y="277" width="1.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="754.66" y="287.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (1,408,006 samples, 0.02%)</title><rect x="740.1" y="213" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="743.08" y="223.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (715,957 samples, 0.01%)</title><rect x="578.2" y="293" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="581.21" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (847,610 samples, 0.01%)</title><rect x="67.3" y="437" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="70.27" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (11,909,544 samples, 0.15%)</title><rect x="852.2" y="325" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="855.20" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (5,762,537 samples, 0.07%)</title><rect x="934.4" y="405" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="937.44" y="415.5" ></text>
</g>
<g >
<title>cfree (5,961,600 samples, 0.07%)</title><rect x="750.4" y="341" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="753.41" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (990,977 samples, 0.01%)</title><rect x="817.0" y="341" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="820.03" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (2,117,151 samples, 0.03%)</title><rect x="885.7" y="341" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="888.69" y="351.5" ></text>
</g>
<g >
<title>malloc (19,587,792 samples, 0.25%)</title><rect x="736.4" y="245" width="2.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="739.35" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::end (2,063,583 samples, 0.03%)</title><rect x="387.3" y="469" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="390.28" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (3,288,501 samples, 0.04%)</title><rect x="179.0" y="437" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="181.97" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (1,099,212 samples, 0.01%)</title><rect x="192.3" y="469" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="195.32" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~_Rb_tree (1,069,063 samples, 0.01%)</title><rect x="81.5" y="453" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="84.47" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (14,994,160 samples, 0.19%)</title><rect x="718.9" y="373" width="2.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="721.89" y="383.5" ></text>
</g>
<g >
<title>cfree (2,223,925 samples, 0.03%)</title><rect x="784.2" y="85" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="787.16" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1,717,117 samples, 0.02%)</title><rect x="779.2" y="197" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="782.25" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (8,748,916 samples, 0.11%)</title><rect x="751.7" y="261" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="754.66" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,387,942 samples, 0.02%)</title><rect x="425.3" y="405" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="428.25" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,249,775 samples, 0.02%)</title><rect x="826.6" y="261" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="829.56" y="271.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (1,935,086 samples, 0.02%)</title><rect x="554.8" y="469" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="557.77" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (97,026,870 samples, 1.22%)</title><rect x="732.3" y="293" width="14.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="735.35" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (2,399,888 samples, 0.03%)</title><rect x="724.0" y="357" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="726.98" y="367.5" ></text>
</g>
<g >
<title>operator new (2,781,625 samples, 0.03%)</title><rect x="823.1" y="277" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="826.15" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,184,328 samples, 0.01%)</title><rect x="84.5" y="405" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="87.50" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (119,399,603 samples, 1.50%)</title><rect x="1104.0" y="485" width="17.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1106.96" y="495.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (65,825,488 samples, 0.83%)</title><rect x="668.5" y="357" width="9.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="671.49" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (67,850,261 samples, 0.85%)</title><rect x="854.9" y="357" width="10.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="857.93" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (1,479,320 samples, 0.02%)</title><rect x="906.5" y="437" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="909.54" y="447.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (837,486 samples, 0.01%)</title><rect x="695.3" y="373" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="698.31" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (36,808,416 samples, 0.46%)</title><rect x="575.2" y="405" width="5.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="578.16" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (15,739,810 samples, 0.20%)</title><rect x="927.3" y="437" width="2.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="930.29" y="447.5" ></text>
</g>
<g >
<title>operator new (978,140 samples, 0.01%)</title><rect x="848.9" y="277" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="851.94" y="287.5" ></text>
</g>
<g >
<title>malloc (10,808,316 samples, 0.14%)</title><rect x="753.3" y="341" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="756.30" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (2,199,672 samples, 0.03%)</title><rect x="854.0" y="325" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="856.97" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_insert_unique_pos (2,363,515 samples, 0.03%)</title><rect x="739.9" y="245" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="742.93" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (1,400,812 samples, 0.02%)</title><rect x="692.5" y="341" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="695.53" y="351.5" ></text>
</g>
<g >
<title>std::abs (1,405,772 samples, 0.02%)</title><rect x="424.2" y="453" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="427.25" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy (431,953,676 samples, 5.42%)</title><rect x="748.2" y="373" width="64.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="751.24" y="383.5" >std::_R..</text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (2,188,903 samples, 0.03%)</title><rect x="1182.5" y="485" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1185.53" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,598,677 samples, 0.02%)</title><rect x="893.8" y="245" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="896.77" y="255.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (2,800,102 samples, 0.04%)</title><rect x="1167.2" y="421" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1170.23" y="431.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (86,829,537 samples, 1.09%)</title><rect x="706.0" y="341" width="12.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="709.03" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,154,601 samples, 0.01%)</title><rect x="581.5" y="357" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="584.54" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (4,638,916 samples, 0.06%)</title><rect x="747.0" y="357" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="749.97" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (65,702,735 samples, 0.82%)</title><rect x="175.7" y="485" width="9.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="178.73" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (1,522,638 samples, 0.02%)</title><rect x="807.3" y="165" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="810.30" y="175.5" ></text>
</g>
<g >
<title>choose_next_point (14,667,118 samples, 0.18%)</title><rect x="983.7" y="453" width="2.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="986.71" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (51,152,730 samples, 0.64%)</title><rect x="818.1" y="293" width="7.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="821.07" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,245,361 samples, 0.02%)</title><rect x="903.9" y="149" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="906.87" y="159.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (3,707,406 samples, 0.05%)</title><rect x="855.4" y="245" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="858.45" y="255.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (34,007,817 samples, 0.43%)</title><rect x="366.4" y="405" width="5.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="369.36" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,260,480 samples, 0.02%)</title><rect x="732.0" y="309" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="735.00" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (125,743,614 samples, 1.58%)</title><rect x="505.9" y="469" width="18.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="508.95" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (11,817,030 samples, 0.15%)</title><rect x="77.3" y="469" width="1.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="80.30" y="479.5" ></text>
</g>
<g >
<title>operator new (234,780,547 samples, 2.95%)</title><rect x="461.5" y="485" width="34.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="464.47" y="495.5" >op..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (15,402,475 samples, 0.19%)</title><rect x="79.1" y="469" width="2.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="82.05" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (3,893,033 samples, 0.05%)</title><rect x="180.6" y="453" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="183.57" y="463.5" ></text>
</g>
<g >
<title>cfree (3,742,356 samples, 0.05%)</title><rect x="849.4" y="277" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="852.37" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__promote_2&lt;decltype  (1,859,845 samples, 0.02%)</title><rect x="816.1" y="341" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="819.11" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (142,825,557 samples, 1.79%)</title><rect x="789.8" y="261" width="21.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="792.84" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,412,950 samples, 0.07%)</title><rect x="807.9" y="69" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="810.92" y="79.5" ></text>
</g>
<g >
<title>get_inbetween_points (693,315 samples, 0.01%)</title><rect x="856.5" y="341" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="859.52" y="351.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (1,085,536 samples, 0.01%)</title><rect x="838.2" y="181" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="841.18" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (1,236,504 samples, 0.02%)</title><rect x="864.3" y="117" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="867.29" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (943,667 samples, 0.01%)</title><rect x="838.9" y="325" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="841.85" y="335.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (4,211,110 samples, 0.05%)</title><rect x="932.7" y="405" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="935.72" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (4,899,612 samples, 0.06%)</title><rect x="984.6" y="357" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="987.58" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (12,170,818 samples, 0.15%)</title><rect x="1090.0" y="437" width="1.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1093.00" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (3,101,304 samples, 0.04%)</title><rect x="981.0" y="405" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="983.99" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (701,284 samples, 0.01%)</title><rect x="985.5" y="325" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="988.51" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (12,657,818 samples, 0.16%)</title><rect x="704.2" y="357" width="1.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="707.16" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (833,528 samples, 0.01%)</title><rect x="622.2" y="469" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="625.15" y="479.5" ></text>
</g>
<g >
<title>roundf32x (2,203,060 samples, 0.03%)</title><rect x="1181.1" y="501" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.12" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (2,640,493 samples, 0.03%)</title><rect x="864.1" y="197" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="867.11" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,753,797 samples, 0.03%)</title><rect x="984.8" y="229" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="987.76" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (56,022,980 samples, 0.70%)</title><rect x="856.7" y="341" width="8.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="859.68" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (11,241,787 samples, 0.14%)</title><rect x="809.3" y="133" width="1.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="812.33" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (828,536 samples, 0.01%)</title><rect x="1095.8" y="373" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1098.85" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (680,103 samples, 0.01%)</title><rect x="857.5" y="101" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="860.46" y="111.5" ></text>
</g>
<g >
<title>cfree (115,300,649 samples, 1.45%)</title><rect x="287.4" y="485" width="17.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="290.37" y="495.5" ></text>
</g>
<g >
<title>gen_all_points (15,336,190 samples, 0.19%)</title><rect x="82.4" y="485" width="2.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="85.41" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (4,752,329 samples, 0.06%)</title><rect x="402.5" y="421" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="405.49" y="431.5" ></text>
</g>
<g >
<title>choose_next_point (14,667,118 samples, 0.18%)</title><rect x="983.7" y="437" width="2.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="986.71" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (14,633,708 samples, 0.18%)</title><rect x="691.5" y="373" width="2.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="694.50" y="383.5" ></text>
</g>
<g >
<title>get_inbetween_points (695,913 samples, 0.01%)</title><rect x="983.8" y="405" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="986.84" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (48,048,389 samples, 0.60%)</title><rect x="894.0" y="341" width="7.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="897.01" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (5,363,734 samples, 0.07%)</title><rect x="578.8" y="341" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="581.75" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (156,371,008 samples, 1.96%)</title><rect x="817.4" y="373" width="23.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="820.43" y="383.5" >s..</text>
</g>
<g >
<title>gen_all_points (1,940,063 samples, 0.02%)</title><rect x="1168.6" y="501" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1171.56" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (66,780,319 samples, 0.84%)</title><rect x="668.3" y="373" width="9.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="671.35" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,449,814 samples, 0.07%)</title><rect x="781.6" y="101" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="784.62" y="111.5" ></text>
</g>
<g >
<title>round@plt (818,121 samples, 0.01%)</title><rect x="496.3" y="485" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="499.25" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (3,893,033 samples, 0.05%)</title><rect x="180.6" y="437" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="183.57" y="447.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (976,656 samples, 0.01%)</title><rect x="693.3" y="325" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="696.28" y="335.5" ></text>
</g>
<g >
<title>int const&amp; std::max&lt;int&gt; (2,431,374 samples, 0.03%)</title><rect x="969.2" y="469" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="972.17" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (19,760,851 samples, 0.25%)</title><rect x="901.1" y="325" width="3.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="904.12" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (9,500,807 samples, 0.12%)</title><rect x="516.3" y="437" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="519.28" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (1,433,100 samples, 0.02%)</title><rect x="181.8" y="373" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="184.78" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;int, int&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;int, int&gt; const&amp;&gt; (23,949,553 samples, 0.30%)</title><rect x="879.4" y="357" width="3.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="882.39" y="367.5" ></text>
</g>
<g >
<title>decltype  (940,086 samples, 0.01%)</title><rect x="808.7" y="85" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="811.74" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (681,431 samples, 0.01%)</title><rect x="845.4" y="245" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="848.43" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,339,497 samples, 0.08%)</title><rect x="847.8" y="293" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="850.82" y="303.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,363,780 samples, 0.02%)</title><rect x="1189.7" y="389" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1192.67" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,484,837 samples, 0.03%)</title><rect x="838.5" y="245" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="841.47" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,256,100 samples, 0.07%)</title><rect x="931.7" y="341" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="934.71" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,810,646 samples, 0.07%)</title><rect x="856.8" y="229" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="859.81" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (6,249,181 samples, 0.08%)</title><rect x="579.6" y="325" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="582.59" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (38,420,108 samples, 0.48%)</title><rect x="70.7" y="421" width="5.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="73.74" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_drop_node (18,553,445 samples, 0.23%)</title><rect x="510.6" y="453" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="513.61" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (33,602,816 samples, 0.42%)</title><rect x="1183.5" y="501" width="5.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1186.51" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,699,783 samples, 0.02%)</title><rect x="585.5" y="469" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="588.47" y="479.5" ></text>
</g>
<g >
<title>operator new (2,066,008 samples, 0.03%)</title><rect x="653.5" y="469" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="656.53" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (10,819,098 samples, 0.14%)</title><rect x="751.6" y="325" width="1.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="754.64" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_left (703,014 samples, 0.01%)</title><rect x="579.4" y="325" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="582.40" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (3,238,159 samples, 0.04%)</title><rect x="864.5" y="213" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="867.50" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (2,245,703 samples, 0.03%)</title><rect x="881.7" y="293" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="884.74" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (18,282,360 samples, 0.23%)</title><rect x="405.7" y="389" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="408.75" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (283,911,737 samples, 3.56%)</title><rect x="324.3" y="437" width="42.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="327.30" y="447.5" >std..</text>
</g>
<g >
<title>operator new (1,246,458 samples, 0.02%)</title><rect x="725.0" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="728.03" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,924,178 samples, 0.02%)</title><rect x="837.9" y="149" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="840.89" y="159.5" ></text>
</g>
<g >
<title>malloc (10,492,185 samples, 0.13%)</title><rect x="861.0" y="181" width="1.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="863.98" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (38,132,886 samples, 0.48%)</title><rect x="762.4" y="213" width="5.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="765.37" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (5,384,759 samples, 0.07%)</title><rect x="1167.0" y="469" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1170.01" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,475,229 samples, 0.09%)</title><rect x="842.5" y="293" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="845.53" y="303.5" ></text>
</g>
<g >
<title>choose_next_point (1,067,888 samples, 0.01%)</title><rect x="622.0" y="437" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="624.99" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,507,387 samples, 0.04%)</title><rect x="402.7" y="373" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="405.68" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (2,748,455 samples, 0.03%)</title><rect x="904.1" y="261" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="907.05" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (6,350,928 samples, 0.08%)</title><rect x="1094.2" y="405" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1097.22" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (1,924,178 samples, 0.02%)</title><rect x="837.9" y="133" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="840.89" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (681,431 samples, 0.01%)</title><rect x="845.4" y="229" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="848.43" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_right (3,360,826 samples, 0.04%)</title><rect x="183.1" y="453" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="186.08" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (7,257,620 samples, 0.09%)</title><rect x="384.4" y="405" width="1.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="387.37" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (828,536 samples, 0.01%)</title><rect x="1095.8" y="389" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1098.85" y="399.5" ></text>
</g>
<g >
<title>malloc (20,951,558 samples, 0.26%)</title><rect x="828.4" y="261" width="3.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="831.40" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,562,924 samples, 0.02%)</title><rect x="804.6" y="85" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="807.65" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_maximum (4,733,524 samples, 0.06%)</title><rect x="755.7" y="341" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="758.72" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (691,197 samples, 0.01%)</title><rect x="769.7" y="133" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="772.68" y="143.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::insert (1,091,479 samples, 0.01%)</title><rect x="856.1" y="325" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="859.08" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (691,197 samples, 0.01%)</title><rect x="769.7" y="197" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="772.68" y="207.5" ></text>
</g>
<g >
<title>cfree (1,669,162 samples, 0.02%)</title><rect x="734.4" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="737.40" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::size (1,979,500 samples, 0.02%)</title><rect x="937.3" y="453" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="940.29" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (5,449,814 samples, 0.07%)</title><rect x="781.6" y="85" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="784.62" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (1,154,601 samples, 0.01%)</title><rect x="581.5" y="469" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="584.54" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (45,717,814 samples, 0.57%)</title><rect x="857.7" y="229" width="6.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="860.73" y="239.5" ></text>
</g>
<g >
<title>choose_next_point (21,709,584 samples, 0.27%)</title><rect x="851.7" y="357" width="3.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="854.71" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_lower_bound (60,907,425 samples, 0.76%)</title><rect x="869.3" y="341" width="9.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="872.35" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (4,025,631 samples, 0.05%)</title><rect x="936.7" y="405" width="0.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="939.70" y="415.5" ></text>
</g>
<g >
<title>malloc (3,296,220 samples, 0.04%)</title><rect x="674.6" y="261" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="677.62" y="271.5" ></text>
</g>
<g >
<title>choose_next_point (1,424,626 samples, 0.02%)</title><rect x="578.1" y="357" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="581.12" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (30,739,497 samples, 0.39%)</title><rect x="379.2" y="421" width="4.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="382.21" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (8,626,669 samples, 0.11%)</title><rect x="946.8" y="405" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="949.81" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (2,956,194 samples, 0.04%)</title><rect x="742.1" y="165" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="745.06" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (163,823,051 samples, 2.06%)</title><rect x="788.0" y="325" width="24.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="790.96" y="335.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (5,569,695 samples, 0.07%)</title><rect x="811.4" y="277" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="814.40" y="287.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt; const&amp;&gt; (1,099,710 samples, 0.01%)</title><rect x="746.7" y="309" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="749.72" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (1,433,100 samples, 0.02%)</title><rect x="181.8" y="405" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="184.78" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (1,800,154 samples, 0.02%)</title><rect x="863.8" y="149" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="866.80" y="159.5" ></text>
</g>
<g >
<title>operator new (2,117,788 samples, 0.03%)</title><rect x="778.8" y="197" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="781.79" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (169,865,210 samples, 2.13%)</title><rect x="904.5" y="453" width="25.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="907.46" y="463.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::push_back (977,108 samples, 0.01%)</title><rect x="1169.3" y="485" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1172.34" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::deallocate (701,284 samples, 0.01%)</title><rect x="985.5" y="309" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="988.51" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (1,535,385 samples, 0.02%)</title><rect x="979.0" y="373" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="982.02" y="383.5" ></text>
</g>
<g >
<title>cfree (3,888,147 samples, 0.05%)</title><rect x="860.3" y="181" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="863.33" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (3,101,304 samples, 0.04%)</title><rect x="981.0" y="421" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="983.99" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, int&gt; &gt;::operator (5,179,822 samples, 0.07%)</title><rect x="882.2" y="325" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="885.17" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,233,433 samples, 0.02%)</title><rect x="693.4" y="325" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="696.42" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;&amp; std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::emplace_back&lt;std::pair&lt;int, int&gt; &gt; (45,801,074 samples, 0.57%)</title><rect x="941.5" y="453" width="6.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="944.49" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::deallocate (3,757,045 samples, 0.05%)</title><rect x="389.6" y="389" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="392.60" y="399.5" ></text>
</g>
<g >
<title>operator new (1,114,894 samples, 0.01%)</title><rect x="837.1" y="245" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="840.08" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,449,814 samples, 0.07%)</title><rect x="781.6" y="117" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="784.62" y="127.5" ></text>
</g>
<g >
<title>get_inbetween_points (12,878,398 samples, 0.16%)</title><rect x="751.4" y="341" width="1.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="754.39" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_put_node (51,152,730 samples, 0.64%)</title><rect x="818.1" y="341" width="7.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="821.07" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (6,249,181 samples, 0.08%)</title><rect x="579.6" y="245" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="582.59" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;int, int&gt;*, std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::__normal_iterator (2,063,583 samples, 0.03%)</title><rect x="387.3" y="453" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="390.28" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (30,911,151 samples, 0.39%)</title><rect x="790.2" y="197" width="4.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="793.17" y="207.5" ></text>
</g>
<g >
<title>cfree (7,378,507 samples, 0.09%)</title><rect x="892.6" y="277" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="895.63" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,184,328 samples, 0.01%)</title><rect x="84.5" y="389" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="87.50" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (770,396 samples, 0.01%)</title><rect x="667.9" y="357" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="670.88" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt; &gt;::allocate (5,256,100 samples, 0.07%)</title><rect x="931.7" y="373" width="0.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="934.71" y="383.5" ></text>
</g>
<g >
<title>operator new (7,217,478 samples, 0.09%)</title><rect x="899.6" y="245" width="1.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="902.60" y="255.5" ></text>
</g>
<g >
<title>cfree (6,856,505 samples, 0.09%)</title><rect x="676.8" y="277" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="679.80" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (823,809 samples, 0.01%)</title><rect x="797.0" y="181" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="800.05" y="191.5" ></text>
</g>
<g >
<title>malloc (4,419,704 samples, 0.06%)</title><rect x="843.7" y="309" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="846.72" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (49,366,123 samples, 0.62%)</title><rect x="857.7" y="325" width="7.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="860.67" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (1,324,420 samples, 0.02%)</title><rect x="1181.8" y="485" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1184.76" y="495.5" ></text>
</g>
<g >
<title>decltype  (10,234,554 samples, 0.13%)</title><rect x="1162.5" y="389" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1165.50" y="399.5" ></text>
</g>
<g >
<title>local_Rb_tree_decrement (5,457,125 samples, 0.07%)</title><rect x="191.5" y="469" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="194.51" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_S_relocate (971,053 samples, 0.01%)</title><rect x="678.1" y="341" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="681.10" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum (6,099,329 samples, 0.08%)</title><rect x="756.4" y="325" width="0.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="759.42" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node::operator (7,237,526 samples, 0.09%)</title><rect x="781.6" y="165" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="784.62" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (964,461 samples, 0.01%)</title><rect x="725.3" y="341" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="728.32" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (3,238,159 samples, 0.04%)</title><rect x="864.5" y="245" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="867.50" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (1,235,985 samples, 0.02%)</title><rect x="984.4" y="325" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="987.40" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,222,842 samples, 0.03%)</title><rect x="686.1" y="341" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="689.07" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Vector_base (6,043,120 samples, 0.08%)</title><rect x="426.5" y="453" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="429.51" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (8,243,861 samples, 0.10%)</title><rect x="401.3" y="373" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="404.27" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (9,500,807 samples, 0.12%)</title><rect x="516.3" y="389" width="1.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="519.28" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (5,959,170 samples, 0.07%)</title><rect x="1086.4" y="421" width="0.9" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1089.42" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (48,048,389 samples, 0.60%)</title><rect x="894.0" y="309" width="7.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="897.01" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (25,877,080 samples, 0.32%)</title><rect x="784.0" y="101" width="3.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="786.96" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_begin (3,841,898 samples, 0.05%)</title><rect x="323.7" y="437" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="326.73" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::begin (3,573,029 samples, 0.04%)</title><rect x="542.9" y="469" width="0.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="545.89" y="479.5" ></text>
</g>
<g >
<title>auto std::__detail::_Synth3way::operator (5,891,789 samples, 0.07%)</title><rect x="76.4" y="405" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="79.43" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (6,992,512 samples, 0.09%)</title><rect x="863.0" y="181" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="866.03" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::pair&lt;int, int&gt; &gt;, true&gt;::_Rb_tree_impl (3,883,192 samples, 0.05%)</title><rect x="80.8" y="437" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="83.76" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,142,695 samples, 0.01%)</title><rect x="892.5" y="181" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="895.47" y="191.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (266,509,596 samples, 3.35%)</title><rect x="865.0" y="421" width="39.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="867.98" y="431.5" >std..</text>
</g>
<g >
<title>unsigned long const&amp; std::max&lt;unsigned long&gt; (3,063,604 samples, 0.04%)</title><rect x="980.5" y="405" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="983.54" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (675,964 samples, 0.01%)</title><rect x="818.0" y="341" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="820.97" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (37,294,970 samples, 0.47%)</title><rect x="1156.7" y="389" width="5.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1159.68" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_deallocate (13,988,063 samples, 0.18%)</title><rect x="388.1" y="437" width="2.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="391.08" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_allocate (5,254,841 samples, 0.07%)</title><rect x="944.7" y="421" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="947.66" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (691,197 samples, 0.01%)</title><rect x="769.7" y="149" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="772.68" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (3,288,501 samples, 0.04%)</title><rect x="179.0" y="405" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="181.97" y="415.5" ></text>
</g>
<g >
<title>void std::vector&lt;std::pair&lt;int, int&gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;int, int&gt; &gt; (7,812,667 samples, 0.10%)</title><rect x="83.5" y="437" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="86.52" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;int, int&gt;* std::__relocate_a_1&lt;std::pair&lt;int, int&gt;*, std::pair&lt;int, int&gt;*, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt; (1,239,927 samples, 0.02%)</title><rect x="426.3" y="389" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="429.30" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (5,256,100 samples, 0.07%)</title><rect x="931.7" y="389" width="0.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="934.71" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_clone_node&lt;false, std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_Alloc_node&gt; (5,840,926 samples, 0.07%)</title><rect x="811.4" y="293" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="814.36" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::find (73,836,710 samples, 0.93%)</title><rect x="66.4" y="453" width="10.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="69.36" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (2,117,151 samples, 0.03%)</title><rect x="885.7" y="325" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="888.69" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,260,480 samples, 0.02%)</title><rect x="732.0" y="325" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="735.00" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (701,284 samples, 0.01%)</title><rect x="985.5" y="293" width="0.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="988.51" y="303.5" ></text>
</g>
<g >
<title>std::common_comparison_category&lt;decltype  (91,382,392 samples, 1.15%)</title><rect x="913.8" y="405" width="13.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="916.75" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (964,250 samples, 0.01%)</title><rect x="92.2" y="373" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="95.24" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::allocate (2,753,797 samples, 0.03%)</title><rect x="984.8" y="245" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="987.76" y="255.5" ></text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (8,976,185 samples, 0.11%)</title><rect x="222.8" y="421" width="1.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="225.79" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_get_node (10,290,660 samples, 0.13%)</title><rect x="375.4" y="389" width="1.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="378.42" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, int&gt; const&amp;&gt; (43,097,708 samples, 0.54%)</title><rect x="575.2" y="437" width="6.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="578.16" y="447.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::set (46,261,958 samples, 0.58%)</title><rect x="378.6" y="469" width="6.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="381.59" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (241,478,920 samples, 3.03%)</title><rect x="497.1" y="485" width="35.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="500.09" y="495.5" >std..</text>
</g>
<g >
<title>hrtimer_interrupt (826,357 samples, 0.01%)</title><rect x="857.5" y="117" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="860.46" y="127.5" ></text>
</g>
<g >
<title>operator new (696,194 samples, 0.01%)</title><rect x="691.2" y="389" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="694.15" y="399.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::contains (5,384,759 samples, 0.07%)</title><rect x="1167.0" y="485" width="0.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1170.01" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int, int&gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::~set (2,475,310 samples, 0.03%)</title><rect x="937.6" y="469" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="940.59" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (8,748,916 samples, 0.11%)</title><rect x="751.7" y="245" width="1.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="754.66" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int, int&gt; &gt;::allocate (24,473,471 samples, 0.31%)</title><rect x="847.8" y="309" width="3.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="850.82" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (2,475,689 samples, 0.03%)</title><rect x="755.1" y="325" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="758.12" y="335.5" ></text>
</g>
<g >
<title>cfree (46,617,630 samples, 0.59%)</title><rect x="887.1" y="293" width="6.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="890.10" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,142,695 samples, 0.01%)</title><rect x="892.5" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="895.47" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int, int&gt; &gt; &gt;::deallocate (54,756,355 samples, 0.69%)</title><rect x="826.2" y="277" width="8.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="829.25" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, int&gt;, std::pair&lt;int, int&gt;, std::_Identity&lt;std::pair&lt;int, int&gt; &gt;, std::less&lt;std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;int, int&gt; &gt; &gt;::_M_erase (27,800,269 samples, 0.35%)</title><rect x="179.5" y="469" width="4.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="182.46" y="479.5" ></text>
</g>
<g >
<title>local_Rb_tree_rotate_left (693,869 samples, 0.01%)</title><rect x="1188.0" y="485" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1191.01" y="495.5" ></text>
</g>
</g>
</svg>
