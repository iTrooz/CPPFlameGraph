<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (15 samples, 0.80%)</title><rect x="999.3" y="229" width="9.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1002.31" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1172.4" y="245" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1175.38" y="255.5" ></text>
</g>
<g >
<title>operator   (6 samples, 0.32%)</title><rect x="1039.0" y="181" width="3.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1041.96" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1179.9" y="165" width="3.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1182.93" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (44 samples, 2.35%)</title><rect x="1011.3" y="245" width="27.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1014.27" y="255.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance   (31 samples, 1.65%)</title><rect x="906.2" y="245" width="19.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="909.17" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="101.9" y="229" width="4.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="104.88" y="239.5" ></text>
</g>
<g >
<title>std::endl&lt;char   (2 samples, 0.11%)</title><rect x="1188.7" y="373" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1191.74" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="439.2" y="69" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="442.21" y="79.5" ></text>
</g>
<g >
<title>free   (16 samples, 0.85%)</title><rect x="1130.2" y="133" width="10.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1133.21" y="143.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1172.4" y="197" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1175.38" y="207.5" ></text>
</g>
<g >
<title>operator   (3 samples, 0.16%)</title><rect x="1040.8" y="165" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1043.85" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (110 samples, 5.87%)</title><rect x="930.1" y="213" width="69.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="933.09" y="223.5" >std::__..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="617.9" y="165" width="3.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="620.94" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (38 samples, 2.03%)</title><rect x="1091.8" y="197" width="23.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1094.82" y="207.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (38 samples, 2.03%)</title><rect x="1091.8" y="181" width="23.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1094.82" y="191.5" >s..</text>
</g>
<g >
<title>operator   (46 samples, 2.45%)</title><rect x="72.9" y="165" width="29.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="75.93" y="175.5" >op..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (25 samples, 1.33%)</title><rect x="1124.5" y="197" width="15.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1127.55" y="207.5" ></text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="658.8" y="149" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="661.84" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1187.5" y="245" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1190.48" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (213 samples, 11.36%)</title><rect x="658.8" y="181" width="134.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="661.84" y="191.5" >std::allocator&lt;s..</text>
</g>
<g >
<title>??   (1 samples, 0.05%)</title><rect x="1042.1" y="133" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1045.11" y="143.5" ></text>
</g>
<g >
<title>??   (1 samples, 0.05%)</title><rect x="1188.1" y="165" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.11" y="175.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1186.2" y="277" width="1.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1189.22" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1187.5" y="229" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.48" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="237.8" y="229" width="2.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="240.82" y="239.5" ></text>
</g>
<g >
<title>operator   (5 samples, 0.27%)</title><rect x="256.1" y="149" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="259.07" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1,149 samples, 61.28%)</title><rect x="276.2" y="261" width="723.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="279.21" y="271.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="439.2" y="117" width="1.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="442.21" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (124 samples, 6.61%)</title><rect x="463.7" y="117" width="78.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="466.75" y="127.5" >std::allo..</text>
</g>
<g >
<title>write   (2 samples, 0.11%)</title><rect x="1188.7" y="229" width="1.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1191.74" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1039.0" y="293" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1041.96" y="303.5" ></text>
</g>
<g >
<title>??   (88 samples, 4.69%)</title><rect x="850.2" y="117" width="55.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="853.16" y="127.5" >??  </text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1172.4" y="277" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1175.38" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (14 samples, 0.75%)</title><rect x="1115.7" y="181" width="8.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1118.74" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (109 samples, 5.81%)</title><rect x="1083.6" y="245" width="68.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1086.64" y="255.5" >std::_R..</text>
</g>
<g >
<title>malloc   (1 samples, 0.05%)</title><rect x="1172.4" y="181" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1175.38" y="191.5" ></text>
</g>
<g >
<title>operator   (23 samples, 1.23%)</title><rect x="244.7" y="165" width="14.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="247.74" y="175.5" ></text>
</g>
<g >
<title>operator   (6 samples, 0.32%)</title><rect x="1168.0" y="213" width="3.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1170.97" y="223.5" ></text>
</g>
<g >
<title>_IO_do_write   (2 samples, 0.11%)</title><rect x="1188.7" y="277" width="1.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1191.74" y="287.5" ></text>
</g>
<g >
<title>malloc   (17 samples, 0.91%)</title><rect x="1105.0" y="101" width="10.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1108.04" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (49 samples, 2.61%)</title><rect x="71.0" y="181" width="30.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="74.05" y="191.5" >st..</text>
</g>
<g >
<title>choose_next_point   (1,627 samples, 86.77%)</title><rect x="15.0" y="309" width="1024.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="18.03" y="319.5" >choose_next_point  </text>
</g>
<g >
<title>malloc   (1 samples, 0.05%)</title><rect x="1187.5" y="197" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1190.48" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance   (1 samples, 0.05%)</title><rect x="1185.6" y="277" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1188.59" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (59 samples, 3.15%)</title><rect x="621.7" y="165" width="37.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="624.71" y="175.5" >std..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1172.4" y="213" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1175.38" y="223.5" ></text>
</g>
<g >
<title>??   (2 samples, 0.11%)</title><rect x="1093.1" y="53" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1096.08" y="63.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1173.0" y="245" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1176.01" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (612 samples, 32.64%)</title><rect x="407.7" y="213" width="385.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="410.74" y="223.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1039.0" y="245" width="3.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1041.96" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (39 samples, 2.08%)</title><rect x="439.2" y="133" width="24.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="442.21" y="143.5" >s..</text>
</g>
<g >
<title>free   (18 samples, 0.96%)</title><rect x="1140.9" y="149" width="11.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1143.91" y="159.5" ></text>
</g>
<g >
<title>operator   (13 samples, 0.69%)</title><rect x="93.7" y="149" width="8.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="96.70" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1173.0" y="229" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1176.01" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1187.5" y="309" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.48" y="319.5" ></text>
</g>
<g >
<title>operator   (5 samples, 0.27%)</title><rect x="618.6" y="101" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="621.57" y="111.5" ></text>
</g>
<g >
<title>free   (13 samples, 0.69%)</title><rect x="1116.4" y="117" width="8.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1119.37" y="127.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_rotate_left   (2 samples, 0.11%)</title><rect x="921.9" y="229" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="924.90" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1179.9" y="229" width="3.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.93" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (213 samples, 11.36%)</title><rect x="658.8" y="197" width="134.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="661.84" y="207.5" >std::allocator_t..</text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (2 samples, 0.11%)</title><rect x="1186.2" y="261" width="1.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1189.22" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (12 samples, 0.64%)</title><rect x="798.6" y="213" width="7.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="801.55" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (26 samples, 1.39%)</title><rect x="242.9" y="197" width="16.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="245.85" y="207.5" ></text>
</g>
<g >
<title>choose_next_point   (1,873 samples, 99.89%)</title><rect x="10.0" y="389" width="1178.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >choose_next_point  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (21 samples, 1.12%)</title><rect x="1174.3" y="293" width="13.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1177.27" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.96%)</title><rect x="1104.4" y="149" width="11.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1107.41" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (213 samples, 11.36%)</title><rect x="658.8" y="165" width="134.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="661.84" y="175.5" >std::__new_alloc..</text>
</g>
<g >
<title>malloc   (2 samples, 0.11%)</title><rect x="1183.7" y="165" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1186.71" y="175.5" ></text>
</g>
<g >
<title>get_inbetween_points   (246 samples, 13.12%)</title><rect x="106.3" y="293" width="154.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="109.29" y="303.5" >get_inbetween_point..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.96%)</title><rect x="1140.9" y="213" width="11.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1143.91" y="223.5" ></text>
</g>
<g >
<title>gen_all_points   (3 samples, 0.16%)</title><rect x="1171.7" y="325" width="1.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1174.75" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (66 samples, 3.52%)</title><rect x="64.8" y="245" width="41.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="67.75" y="255.5" >std..</text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (15 samples, 0.80%)</title><rect x="999.3" y="245" width="9.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1002.31" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (59 samples, 3.15%)</title><rect x="621.7" y="181" width="37.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="624.71" y="191.5" >std..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.96%)</title><rect x="1104.4" y="165" width="11.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1107.41" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (1,188 samples, 63.36%)</title><rect x="261.1" y="293" width="747.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="264.10" y="303.5" >std::set&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1173.0" y="261" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1176.01" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header   (1 samples, 0.05%)</title><rect x="905.5" y="245" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="908.54" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (54 samples, 2.88%)</title><rect x="1090.6" y="213" width="33.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1093.57" y="223.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="293" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.11" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="1091.8" y="133" width="2.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1094.82" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1168.0" y="309" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1170.97" y="319.5" ></text>
</g>
<g >
<title>??   (11 samples, 0.59%)</title><rect x="534.9" y="53" width="6.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="537.86" y="63.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char   (2 samples, 0.11%)</title><rect x="1188.7" y="325" width="1.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1191.74" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1179.9" y="181" width="3.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1182.93" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (14 samples, 0.75%)</title><rect x="1115.7" y="165" width="8.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1118.74" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="341" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1191.11" y="351.5" ></text>
</g>
<g >
<title>gen_all_points   (6 samples, 0.32%)</title><rect x="1039.0" y="309" width="3.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1041.96" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (70 samples, 3.73%)</title><rect x="62.2" y="261" width="44.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="65.23" y="271.5" >std:..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1057.2" y="229" width="4.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1060.21" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="617.9" y="133" width="3.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="620.94" y="143.5" ></text>
</g>
<g >
<title>malloc   (58 samples, 3.09%)</title><rect x="666.4" y="133" width="36.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="669.39" y="143.5" >mal..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1187.5" y="261" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1190.48" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1172.4" y="229" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1175.38" y="239.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (3 samples, 0.16%)</title><rect x="928.2" y="213" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="931.20" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (36 samples, 1.92%)</title><rect x="441.1" y="85" width="22.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="444.09" y="95.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="237.8" y="245" width="2.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="240.82" y="255.5" ></text>
</g>
<g >
<title>gen_all_points   (1 samples, 0.05%)</title><rect x="1187.5" y="341" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1190.48" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (368 samples, 19.63%)</title><rect x="427.2" y="197" width="231.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="430.25" y="207.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>??   (6 samples, 0.32%)</title><rect x="98.1" y="117" width="3.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="101.11" y="127.5" ></text>
</g>
<g >
<title>is_close_int   (7 samples, 0.37%)</title><rect x="1052.8" y="293" width="4.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1055.81" y="303.5" ></text>
</g>
<g >
<title>operator   (3 samples, 0.16%)</title><rect x="439.2" y="53" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="442.21" y="63.5" ></text>
</g>
<g >
<title>choose_next_point   (1,871 samples, 99.79%)</title><rect x="10.0" y="341" width="1177.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >choose_next_point  </text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1057.2" y="213" width="4.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1060.21" y="223.5" ></text>
</g>
<g >
<title>operator   (16 samples, 0.85%)</title><rect x="1094.3" y="101" width="10.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1097.34" y="111.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1188.1" y="197" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1191.11" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="260.5" y="213" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="263.47" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="102.5" y="213" width="3.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="105.51" y="223.5" ></text>
</g>
<g >
<title>free   (5 samples, 0.27%)</title><rect x="618.6" y="85" width="3.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="621.57" y="95.5" ></text>
</g>
<g >
<title>is_close_int   (76 samples, 4.05%)</title><rect x="183.7" y="277" width="47.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="186.70" y="287.5" >is_c..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (36 samples, 1.92%)</title><rect x="441.1" y="101" width="22.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="444.09" y="111.5" >s..</text>
</g>
<g >
<title>all (1,875 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>malloc   (2 samples, 0.11%)</title><rect x="439.8" y="37" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="442.83" y="47.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (49 samples, 2.61%)</title><rect x="71.0" y="229" width="30.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="74.05" y="239.5" >st..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1057.2" y="197" width="4.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1060.21" y="207.5" ></text>
</g>
<g >
<title>gen_all_points   (78 samples, 4.16%)</title><rect x="57.2" y="293" width="49.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="60.20" y="303.5" >gen_..</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (44 samples, 2.35%)</title><rect x="1011.3" y="229" width="27.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1014.27" y="239.5" >s..</text>
</g>
<g >
<title>malloc   (6 samples, 0.32%)</title><rect x="1125.8" y="149" width="3.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1128.81" y="159.5" ></text>
</g>
<g >
<title>operator   (2 samples, 0.11%)</title><rect x="1183.7" y="181" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1186.71" y="191.5" ></text>
</g>
<g >
<title>??   (2 samples, 0.11%)</title><rect x="1188.7" y="261" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.74" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (1 samples, 0.05%)</title><rect x="1140.3" y="229" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1143.28" y="239.5" ></text>
</g>
<g >
<title>free   (35 samples, 1.87%)</title><rect x="1016.9" y="165" width="22.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1019.93" y="175.5" >f..</text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset   (1 samples, 0.05%)</title><rect x="1152.2" y="245" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1155.24" y="255.5" ></text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="1188.1" y="181" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1191.11" y="191.5" ></text>
</g>
<g >
<title>??   (3 samples, 0.16%)</title><rect x="619.8" y="69" width="1.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="622.82" y="79.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (121 samples, 6.45%)</title><rect x="541.8" y="149" width="76.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="544.79" y="159.5" >std::all..</text>
</g>
<g >
<title>malloc   (30 samples, 1.60%)</title><rect x="74.8" y="149" width="18.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="77.82" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1,188 samples, 63.36%)</title><rect x="261.1" y="277" width="747.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="264.10" y="287.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1168.0" y="245" width="3.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1170.97" y="255.5" ></text>
</g>
<g >
<title>operator   (120 samples, 6.40%)</title><rect x="542.4" y="101" width="75.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="545.42" y="111.5" >operator  </text>
</g>
<g >
<title>??   (5 samples, 0.27%)</title><rect x="256.1" y="117" width="3.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="259.07" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (16 samples, 0.85%)</title><rect x="1094.3" y="133" width="10.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1097.34" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="926.3" y="245" width="3.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="929.31" y="255.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (21 samples, 1.12%)</title><rect x="1174.3" y="325" width="13.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1177.27" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1039.0" y="229" width="3.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1041.96" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1187.5" y="293" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.48" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (9 samples, 0.48%)</title><rect x="1179.9" y="261" width="5.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.93" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="102.5" y="197" width="3.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="105.51" y="207.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (15 samples, 0.80%)</title><rect x="999.3" y="261" width="9.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1002.31" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (868 samples, 46.29%)</title><rect x="359.3" y="245" width="546.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="362.28" y="255.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.96%)</title><rect x="1140.9" y="229" width="11.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1143.91" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (16 samples, 0.85%)</title><rect x="1094.3" y="117" width="10.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1097.34" y="127.5" ></text>
</g>
<g >
<title>malloc   (4 samples, 0.21%)</title><rect x="1091.8" y="69" width="2.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1094.82" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (2 samples, 0.11%)</title><rect x="1186.2" y="245" width="1.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1189.22" y="255.5" ></text>
</g>
<g >
<title>_IO_file_sync   (2 samples, 0.11%)</title><rect x="1188.7" y="293" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1191.74" y="303.5" ></text>
</g>
<g >
<title>??   (10 samples, 0.53%)</title><rect x="1145.9" y="133" width="6.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1148.95" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="439.2" y="101" width="1.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="442.21" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (33 samples, 1.76%)</title><rect x="240.3" y="261" width="20.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="243.34" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1179.9" y="197" width="3.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.93" y="207.5" ></text>
</g>
<g >
<title>main   (1,875 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >main  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (284 samples, 15.15%)</title><rect x="439.2" y="165" width="178.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="442.21" y="175.5" >std::_Rb_tree&lt;std::pair..</text>
</g>
<g >
<title>malloc   (5 samples, 0.27%)</title><rect x="1057.8" y="165" width="3.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1060.84" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1057.2" y="277" width="4.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1060.21" y="287.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1061.0" y="165" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1063.99" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="229" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.11" y="239.5" ></text>
</g>
<g >
<title>operator   (57 samples, 3.04%)</title><rect x="623.0" y="117" width="35.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="625.97" y="127.5" >ope..</text>
</g>
<g >
<title>std::abs   (6 samples, 0.32%)</title><rect x="187.5" y="261" width="3.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="190.47" y="271.5" ></text>
</g>
<g >
<title>operator   (7 samples, 0.37%)</title><rect x="1057.2" y="181" width="4.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1060.21" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (48 samples, 2.56%)</title><rect x="1008.8" y="293" width="30.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1011.75" y="303.5" >st..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1039.0" y="277" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1041.96" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (26 samples, 1.39%)</title><rect x="242.9" y="229" width="16.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="245.85" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (44 samples, 2.35%)</title><rect x="1011.3" y="213" width="27.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1014.27" y="223.5" >s..</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (49 samples, 2.61%)</title><rect x="71.0" y="197" width="30.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="74.05" y="207.5" >st..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (121 samples, 6.45%)</title><rect x="541.8" y="117" width="76.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="544.79" y="127.5" >std::__n..</text>
</g>
<g >
<title>malloc   (106 samples, 5.65%)</title><rect x="551.2" y="85" width="66.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="554.23" y="95.5" >malloc  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (163 samples, 8.69%)</title><rect x="439.2" y="149" width="102.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="442.21" y="159.5" >std::_Rb_tre..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1168.0" y="277" width="3.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1170.97" y="287.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_rotate_right   (1 samples, 0.05%)</title><rect x="1185.6" y="261" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1188.59" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1183.7" y="213" width="1.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1186.71" y="223.5" ></text>
</g>
<g >
<title>malloc   (14 samples, 0.75%)</title><rect x="1095.6" y="85" width="8.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1098.60" y="95.5" ></text>
</g>
<g >
<title>std::fmod&lt;double   (5 samples, 0.27%)</title><rect x="1054.1" y="277" width="3.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1057.06" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1183.7" y="197" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1186.71" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="277" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.11" y="287.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.96%)</title><rect x="1104.4" y="133" width="11.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1107.41" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1039.0" y="261" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1041.96" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1039.0" y="197" width="3.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1041.96" y="207.5" ></text>
</g>
<g >
<title>get_inbetween_points   (30 samples, 1.60%)</title><rect x="1042.7" y="309" width="18.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1045.74" y="319.5" ></text>
</g>
<g >
<title>operator   (24 samples, 1.28%)</title><rect x="1125.2" y="165" width="15.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1128.18" y="175.5" ></text>
</g>
<g >
<title>??   (11 samples, 0.59%)</title><rect x="1133.4" y="117" width="6.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1136.36" y="127.5" ></text>
</g>
<g >
<title>_IO_file_write   (2 samples, 0.11%)</title><rect x="1188.7" y="245" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1191.74" y="255.5" ></text>
</g>
<g >
<title>choose_next_point   (1,873 samples, 99.89%)</title><rect x="10.0" y="357" width="1178.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >choose_next_point  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (85 samples, 4.53%)</title><rect x="1086.8" y="229" width="53.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1089.79" y="239.5" >std::..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1168.0" y="293" width="3.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1170.97" y="303.5" ></text>
</g>
<g >
<title>??   (30 samples, 1.60%)</title><rect x="640.0" y="85" width="18.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="642.96" y="95.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (110 samples, 5.87%)</title><rect x="930.1" y="245" width="69.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="933.09" y="255.5" >std::le..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (21 samples, 1.12%)</title><rect x="1174.3" y="309" width="13.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1177.27" y="319.5" ></text>
</g>
<g >
<title>operator   (17 samples, 0.91%)</title><rect x="1129.6" y="149" width="10.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1132.58" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1172.4" y="309" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1175.38" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1168.0" y="261" width="3.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1170.97" y="271.5" ></text>
</g>
<g >
<title>operator   (212 samples, 11.31%)</title><rect x="659.5" y="149" width="133.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="662.47" y="159.5" >operator  </text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance   (6 samples, 0.32%)</title><rect x="1152.9" y="261" width="3.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1155.87" y="271.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char   (2 samples, 0.11%)</title><rect x="1188.7" y="341" width="1.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1191.74" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance(bool   (1 samples, 0.05%)</title><rect x="925.7" y="245" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="928.68" y="255.5" ></text>
</g>
<g >
<title>operator   (36 samples, 1.92%)</title><rect x="441.1" y="69" width="22.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="444.09" y="79.5" >o..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (33 samples, 1.76%)</title><rect x="240.3" y="245" width="20.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="243.34" y="255.5" ></text>
</g>
<g >
<title>std::flush&lt;char   (2 samples, 0.11%)</title><rect x="1188.7" y="357" width="1.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.74" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="617.9" y="149" width="3.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="620.94" y="159.5" ></text>
</g>
<g >
<title>operator   (18 samples, 0.96%)</title><rect x="1104.4" y="117" width="11.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1107.41" y="127.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1188.1" y="213" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1191.11" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1057.2" y="293" width="4.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1060.21" y="303.5" ></text>
</g>
<g >
<title>operator   (13 samples, 0.69%)</title><rect x="1116.4" y="149" width="8.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1119.37" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (48 samples, 2.56%)</title><rect x="1008.8" y="277" width="30.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1011.75" y="287.5" >st..</text>
</g>
<g >
<title>round@plt   (4 samples, 0.21%)</title><rect x="231.5" y="277" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="234.53" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (293 samples, 15.63%)</title><rect x="437.3" y="181" width="184.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="440.32" y="191.5" >std::_Rb_tree&lt;std::pair&lt;..</text>
</g>
<g >
<title>choose_next_point   (1,873 samples, 99.89%)</title><rect x="10.0" y="373" width="1178.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >choose_next_point  </text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="621.7" y="133" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="624.71" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (1 samples, 0.05%)</title><rect x="1185.0" y="245" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1187.97" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (26 samples, 1.39%)</title><rect x="242.9" y="213" width="16.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="245.85" y="223.5" ></text>
</g>
<g >
<title>operator   (18 samples, 0.96%)</title><rect x="1140.9" y="181" width="11.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1143.91" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="1091.8" y="117" width="2.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1094.82" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement   (5 samples, 0.27%)</title><rect x="926.9" y="229" width="3.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="929.94" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1039.0" y="213" width="3.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1041.96" y="223.5" ></text>
</g>
<g >
<title>malloc   (28 samples, 1.49%)</title><rect x="446.1" y="53" width="17.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="449.13" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (169 samples, 9.01%)</title><rect x="1061.6" y="293" width="106.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1064.62" y="303.5" >std::_Rb_tree..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1183.7" y="229" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1186.71" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="1091.8" y="149" width="2.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1094.82" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1187.5" y="325" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.48" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (169 samples, 9.01%)</title><rect x="1061.6" y="309" width="106.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1064.62" y="319.5" >std::set&lt;std:..</text>
</g>
<g >
<title>operator   (18 samples, 0.96%)</title><rect x="1140.9" y="165" width="11.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1143.91" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (121 samples, 6.45%)</title><rect x="541.8" y="133" width="76.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="544.79" y="143.5" >std::all..</text>
</g>
<g >
<title>choose_next_point   (21 samples, 1.12%)</title><rect x="44.0" y="293" width="13.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="46.98" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (37 samples, 1.97%)</title><rect x="237.8" y="277" width="23.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="240.82" y="287.5" >s..</text>
</g>
<g >
<title>??   (91 samples, 4.85%)</title><rect x="735.6" y="101" width="57.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="738.62" y="111.5" >??  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="1091.8" y="101" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1094.82" y="111.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (25 samples, 1.33%)</title><rect x="1124.5" y="181" width="15.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1127.55" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="56.6" y="261" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="59.57" y="271.5" ></text>
</g>
<g >
<title>operator   (6 samples, 0.32%)</title><rect x="617.9" y="117" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="620.94" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="237.8" y="261" width="2.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="240.82" y="271.5" ></text>
</g>
<g >
<title>??   (10 samples, 0.53%)</title><rect x="1118.3" y="101" width="6.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1121.26" y="111.5" ></text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="1061.0" y="149" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1063.99" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (16 samples, 0.85%)</title><rect x="1094.3" y="149" width="10.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1097.34" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (49 samples, 2.61%)</title><rect x="71.0" y="213" width="30.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="74.05" y="223.5" >st..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1172.4" y="293" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1175.38" y="303.5" ></text>
</g>
<g >
<title>malloc   (2 samples, 0.11%)</title><rect x="1039.6" y="165" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1042.59" y="175.5" ></text>
</g>
<g >
<title>free   (6 samples, 0.32%)</title><rect x="1168.0" y="181" width="3.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1170.97" y="191.5" ></text>
</g>
<g >
<title>std::abs   (1 samples, 0.05%)</title><rect x="1053.4" y="277" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1056.43" y="287.5" ></text>
</g>
<g >
<title>operator   (35 samples, 1.87%)</title><rect x="1016.9" y="181" width="22.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1019.93" y="191.5" >o..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (124 samples, 6.61%)</title><rect x="463.7" y="133" width="78.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="466.75" y="143.5" >std::allo..</text>
</g>
<g >
<title>??   (5 samples, 0.27%)</title><rect x="1168.6" y="165" width="3.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1171.60" y="175.5" ></text>
</g>
<g >
<title>free   (5 samples, 0.27%)</title><rect x="256.1" y="133" width="3.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="259.07" y="143.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char   (2 samples, 0.11%)</title><rect x="1188.7" y="389" width="1.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1191.74" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (124 samples, 6.61%)</title><rect x="463.7" y="101" width="78.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="466.75" y="111.5" >std::__ne..</text>
</g>
<g >
<title>operator   (13 samples, 0.69%)</title><rect x="1116.4" y="133" width="8.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1119.37" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (158 samples, 8.43%)</title><rect x="806.1" y="181" width="99.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="809.11" y="191.5" >std::__new_a..</text>
</g>
<g >
<title>operator   (156 samples, 8.32%)</title><rect x="807.4" y="149" width="98.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="810.37" y="159.5" >operator  </text>
</g>
<g >
<title>malloc   (104 samples, 5.55%)</title><rect x="476.3" y="69" width="65.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="479.34" y="79.5" >malloc  </text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset   (1 samples, 0.05%)</title><rect x="905.5" y="229" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="908.54" y="239.5" ></text>
</g>
<g >
<title>operator   (6 samples, 0.32%)</title><rect x="1179.9" y="133" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1182.93" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="245" width="0.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1191.11" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1187.5" y="277" width="0.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1190.48" y="287.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (18 samples, 0.96%)</title><rect x="1156.6" y="245" width="11.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1159.65" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (18 samples, 0.96%)</title><rect x="1156.6" y="261" width="11.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1159.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (14 samples, 0.75%)</title><rect x="1115.7" y="197" width="8.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1118.74" y="207.5" ></text>
</g>
<g >
<title>roundf64   (6 samples, 0.32%)</title><rect x="234.0" y="277" width="3.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="237.04" y="287.5" ></text>
</g>
<g >
<title>operator   (4 samples, 0.21%)</title><rect x="1091.8" y="85" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1094.82" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum   (9 samples, 0.48%)</title><rect x="792.9" y="213" width="5.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="795.89" y="223.5" ></text>
</g>
<g >
<title>fflush   (2 samples, 0.11%)</title><rect x="1188.7" y="309" width="1.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1191.74" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (25 samples, 1.33%)</title><rect x="1124.5" y="213" width="15.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1127.55" y="223.5" ></text>
</g>
<g >
<title>std::fmod&lt;double   (64 samples, 3.41%)</title><rect x="191.2" y="261" width="40.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="194.25" y="271.5" >std..</text>
</g>
<g >
<title>operator   (143 samples, 7.63%)</title><rect x="702.9" y="133" width="90.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="705.90" y="143.5" >operator  </text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="259.2" y="229" width="1.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="262.22" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (158 samples, 8.43%)</title><rect x="806.1" y="213" width="99.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="809.11" y="223.5" >std::allocat..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1172.4" y="261" width="0.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1175.38" y="271.5" ></text>
</g>
<g >
<title>operator   (6 samples, 0.32%)</title><rect x="1168.0" y="197" width="3.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1170.97" y="207.5" ></text>
</g>
<g >
<title>operator   (44 samples, 2.35%)</title><rect x="1011.3" y="197" width="27.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1014.27" y="207.5" >o..</text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (1 samples, 0.05%)</title><rect x="929.5" y="197" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="932.46" y="207.5" ></text>
</g>
<g >
<title>free   (13 samples, 0.69%)</title><rect x="93.7" y="133" width="8.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="96.70" y="143.5" ></text>
</g>
<g >
<title>operator   (122 samples, 6.51%)</title><rect x="465.0" y="85" width="76.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="468.01" y="95.5" >operator  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (59 samples, 3.15%)</title><rect x="621.7" y="149" width="37.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="624.71" y="159.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (12 samples, 0.64%)</title><rect x="1178.0" y="277" width="7.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1181.04" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="261" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1191.11" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="309" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.11" y="319.5" ></text>
</g>
<g >
<title>operator   (158 samples, 8.43%)</title><rect x="806.1" y="165" width="99.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="809.11" y="175.5" >operator  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1179.9" y="213" width="3.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.93" y="223.5" ></text>
</g>
<g >
<title>free   (146 samples, 7.79%)</title><rect x="813.7" y="133" width="91.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="816.66" y="143.5" >free  </text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (110 samples, 5.87%)</title><rect x="930.1" y="229" width="69.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="933.09" y="239.5" >std::op..</text>
</g>
<g >
<title>get_inbetween_points   (1 samples, 0.05%)</title><rect x="1173.6" y="325" width="0.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1176.64" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (70 samples, 3.73%)</title><rect x="62.2" y="277" width="44.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="65.23" y="287.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1057.2" y="261" width="4.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1060.21" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (47 samples, 2.51%)</title><rect x="1009.4" y="261" width="29.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1012.38" y="271.5" >st..</text>
</g>
<g >
<title>malloc   (15 samples, 0.80%)</title><rect x="246.6" y="149" width="9.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="249.63" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1168.0" y="229" width="3.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1170.97" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="325" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.11" y="335.5" ></text>
</g>
<g >
<title>free   (139 samples, 7.41%)</title><rect x="705.4" y="117" width="87.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="708.41" y="127.5" >free  </text>
</g>
<g >
<title>free   (3 samples, 0.16%)</title><rect x="1040.8" y="149" width="1.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1043.85" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1057.2" y="245" width="4.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1060.21" y="255.5" ></text>
</g>
<g >
<title>malloc   (6 samples, 0.32%)</title><rect x="1179.9" y="117" width="3.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1182.93" y="127.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1187.5" y="213" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1190.48" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (165 samples, 8.80%)</title><rect x="1064.1" y="277" width="103.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1067.13" y="287.5" >std::_Rb_tre..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="56.6" y="277" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="59.57" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (116 samples, 6.19%)</title><rect x="1079.2" y="261" width="73.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1082.24" y="271.5" >std::_Rb..</text>
</g>
<g >
<title>??   (25 samples, 1.33%)</title><rect x="1023.2" y="149" width="15.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1026.23" y="159.5" ></text>
</g>
<g >
<title>free   (55 samples, 2.93%)</title><rect x="624.2" y="101" width="34.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="627.23" y="111.5" >fr..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1179.9" y="149" width="3.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1182.93" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (18 samples, 0.96%)</title><rect x="1156.6" y="229" width="11.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1159.65" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="439.2" y="85" width="1.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="442.21" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (20 samples, 1.07%)</title><rect x="1091.8" y="165" width="12.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1094.82" y="175.5" ></text>
</g>
<g >
<title>operator   (58 samples, 3.09%)</title><rect x="622.3" y="133" width="36.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="625.34" y="143.5" >ope..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (26 samples, 1.39%)</title><rect x="242.9" y="181" width="16.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="245.85" y="191.5" ></text>
</g>
<g >
<title>??   (1 samples, 0.05%)</title><rect x="617.3" y="69" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="620.31" y="79.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_rotate_right   (4 samples, 0.21%)</title><rect x="923.2" y="229" width="2.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="926.16" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (158 samples, 8.43%)</title><rect x="806.1" y="197" width="99.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="809.11" y="207.5" >std::allocat..</text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header   (1 samples, 0.05%)</title><rect x="1152.2" y="261" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1155.24" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (8 samples, 0.43%)</title><rect x="1179.9" y="245" width="5.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.93" y="255.5" ></text>
</g>
<g >
<title>choose_next_point   (1,844 samples, 98.35%)</title><rect x="11.3" y="325" width="1160.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="14.26" y="335.5" >choose_next_point  </text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="1115.7" y="149" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1118.74" y="159.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (18 samples, 0.96%)</title><rect x="1140.9" y="197" width="11.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1143.91" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (824 samples, 43.95%)</title><rect x="387.0" y="229" width="518.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="389.97" y="239.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (36 samples, 1.92%)</title><rect x="441.1" y="117" width="22.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="444.09" y="127.5" >s..</text>
</g>
</g>
</svg>
